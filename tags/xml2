!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ATTRIBUTE_UNUSED	/usr/include/libxml2/libxml/xmlversion.h	415;"	d
ATTRIBUTE_UNUSED	/usr/include/libxml2/libxml/xmlversion.h	456;"	d
BAD_CAST	/usr/include/libxml2/libxml/xmlstring.h	35;"	d
BASE_BUFFER_SIZE	/usr/include/libxml2/libxml/tree.h	55;"	d
CAST_TO_BOOLEAN	/usr/include/libxml2/libxml/xpathInternals.h	324;"	d
CAST_TO_NUMBER	/usr/include/libxml2/libxml/xpathInternals.h	315;"	d
CAST_TO_STRING	/usr/include/libxml2/libxml/xpathInternals.h	306;"	d
CHECK_ARITY	/usr/include/libxml2/libxml/xpathInternals.h	296;"	d
CHECK_ERROR	/usr/include/libxml2/libxml/xpathInternals.h	239;"	d
CHECK_ERROR0	/usr/include/libxml2/libxml/xpathInternals.h	247;"	d
CHECK_TYPE	/usr/include/libxml2/libxml/xpathInternals.h	275;"	d
CHECK_TYPE0	/usr/include/libxml2/libxml/xpathInternals.h	286;"	d
DEBUG_MEMORY	/usr/include/libxml2/libxml/xmlmemory.h	31;"	d
ExternalID	/usr/include/libxml2/libxml/entities.h	/^    const xmlChar    *ExternalID;	\/* External identifier for PUBLIC *\/$/;"	m	struct:_xmlEntity	access:public
ExternalID	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar *ExternalID;	\/* External identifier for PUBLIC DTD *\/$/;"	m	struct:_xmlDtd	access:public
HTML_COMMENT_NODE	/usr/include/libxml2/libxml/HTMLtree.h	46;"	d
HTML_DEPRECATED	/usr/include/libxml2/libxml/HTMLparser.h	/^  HTML_DEPRECATED = 0x2 ,$/;"	e	enum:__anon5
HTML_ENTITY_REF_NODE	/usr/include/libxml2/libxml/HTMLtree.h	39;"	d
HTML_INVALID	/usr/include/libxml2/libxml/HTMLparser.h	/^  HTML_INVALID = 0x1 ,$/;"	e	enum:__anon5
HTML_NA	/usr/include/libxml2/libxml/HTMLparser.h	/^  HTML_NA = 0 ,		\/* something we don't check at all *\/$/;"	e	enum:__anon5
HTML_PARSE_COMPACT	/usr/include/libxml2/libxml/HTMLparser.h	/^    HTML_PARSE_COMPACT  = 1<<16,\/* compact small text nodes *\/$/;"	e	enum:__anon4
HTML_PARSE_IGNORE_ENC	/usr/include/libxml2/libxml/HTMLparser.h	/^    HTML_PARSE_IGNORE_ENC=1<<21 \/* ignore internal document encoding hint *\/$/;"	e	enum:__anon4
HTML_PARSE_NOBLANKS	/usr/include/libxml2/libxml/HTMLparser.h	/^    HTML_PARSE_NOBLANKS	= 1<<8,	\/* remove blank nodes *\/$/;"	e	enum:__anon4
HTML_PARSE_NODEFDTD	/usr/include/libxml2/libxml/HTMLparser.h	/^    HTML_PARSE_NODEFDTD = 1<<2, \/* do not default a doctype if not found *\/$/;"	e	enum:__anon4
HTML_PARSE_NOERROR	/usr/include/libxml2/libxml/HTMLparser.h	/^    HTML_PARSE_NOERROR	= 1<<5,	\/* suppress error reports *\/$/;"	e	enum:__anon4
HTML_PARSE_NOIMPLIED	/usr/include/libxml2/libxml/HTMLparser.h	/^    HTML_PARSE_NOIMPLIED= 1<<13,\/* Do not add implied html\/body... elements *\/$/;"	e	enum:__anon4
HTML_PARSE_NONET	/usr/include/libxml2/libxml/HTMLparser.h	/^    HTML_PARSE_NONET	= 1<<11,\/* Forbid network access *\/$/;"	e	enum:__anon4
HTML_PARSE_NOWARNING	/usr/include/libxml2/libxml/HTMLparser.h	/^    HTML_PARSE_NOWARNING= 1<<6,	\/* suppress warning reports *\/$/;"	e	enum:__anon4
HTML_PARSE_PEDANTIC	/usr/include/libxml2/libxml/HTMLparser.h	/^    HTML_PARSE_PEDANTIC	= 1<<7,	\/* pedantic error reporting *\/$/;"	e	enum:__anon4
HTML_PARSE_RECOVER	/usr/include/libxml2/libxml/HTMLparser.h	/^    HTML_PARSE_RECOVER  = 1<<0, \/* Relaxed parsing *\/$/;"	e	enum:__anon4
HTML_PI_NODE	/usr/include/libxml2/libxml/HTMLtree.h	60;"	d
HTML_PRESERVE_NODE	/usr/include/libxml2/libxml/HTMLtree.h	53;"	d
HTML_REQUIRED	/usr/include/libxml2/libxml/HTMLparser.h	/^  HTML_REQUIRED = 0xc \/* VALID bit set so ( & HTML_VALID ) is TRUE *\/$/;"	e	enum:__anon5
HTML_TEXT_NODE	/usr/include/libxml2/libxml/HTMLtree.h	32;"	d
HTML_VALID	/usr/include/libxml2/libxml/HTMLparser.h	/^  HTML_VALID = 0x4 ,$/;"	e	enum:__anon5
INPUT_CHUNK	/usr/include/libxml2/libxml/parserInternals.h	56;"	d
INVALID_SOCKET	/usr/include/libxml2/libxml/nanoftp.h	34;"	d
IS_ASCII_DIGIT	/usr/include/libxml2/libxml/parserInternals.h	227;"	d
IS_ASCII_LETTER	/usr/include/libxml2/libxml/parserInternals.h	217;"	d
IS_BASECHAR	/usr/include/libxml2/libxml/parserInternals.h	120;"	d
IS_BLANK	/usr/include/libxml2/libxml/parserInternals.h	102;"	d
IS_BLANK_CH	/usr/include/libxml2/libxml/parserInternals.h	110;"	d
IS_BYTE_CHAR	/usr/include/libxml2/libxml/parserInternals.h	72;"	d
IS_CHAR	/usr/include/libxml2/libxml/parserInternals.h	84;"	d
IS_CHAR_CH	/usr/include/libxml2/libxml/parserInternals.h	92;"	d
IS_COMBINING	/usr/include/libxml2/libxml/parserInternals.h	148;"	d
IS_COMBINING_CH	/usr/include/libxml2/libxml/parserInternals.h	156;"	d
IS_DIGIT	/usr/include/libxml2/libxml/parserInternals.h	130;"	d
IS_DIGIT_CH	/usr/include/libxml2/libxml/parserInternals.h	138;"	d
IS_EXTENDER	/usr/include/libxml2/libxml/parserInternals.h	169;"	d
IS_EXTENDER_CH	/usr/include/libxml2/libxml/parserInternals.h	177;"	d
IS_IDEOGRAPHIC	/usr/include/libxml2/libxml/parserInternals.h	188;"	d
IS_LETTER	/usr/include/libxml2/libxml/parserInternals.h	199;"	d
IS_LETTER_CH	/usr/include/libxml2/libxml/parserInternals.h	208;"	d
IS_PUBIDCHAR	/usr/include/libxml2/libxml/parserInternals.h	238;"	d
IS_PUBIDCHAR_CH	/usr/include/libxml2/libxml/parserInternals.h	246;"	d
LIBXML_ATTR_ALLOC_SIZE	/usr/include/libxml2/libxml/xmlversion.h	426;"	d
LIBXML_ATTR_ALLOC_SIZE	/usr/include/libxml2/libxml/xmlversion.h	428;"	d
LIBXML_ATTR_ALLOC_SIZE	/usr/include/libxml2/libxml/xmlversion.h	431;"	d
LIBXML_ATTR_ALLOC_SIZE	/usr/include/libxml2/libxml/xmlversion.h	462;"	d
LIBXML_ATTR_FORMAT	/usr/include/libxml2/libxml/xmlversion.h	442;"	d
LIBXML_ATTR_FORMAT	/usr/include/libxml2/libxml/xmlversion.h	444;"	d
LIBXML_ATTR_FORMAT	/usr/include/libxml2/libxml/xmlversion.h	447;"	d
LIBXML_ATTR_FORMAT	/usr/include/libxml2/libxml/xmlversion.h	468;"	d
LIBXML_AUTOMATA_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	340;"	d
LIBXML_C14N_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	214;"	d
LIBXML_CATALOG_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	223;"	d
LIBXML_DEBUG_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	295;"	d
LIBXML_DLL_IMPORT	/usr/include/libxml2/libxml/xmlexports.h	157;"	d
LIBXML_DOCB_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	232;"	d
LIBXML_DOTTED_VERSION	/usr/include/libxml2/libxml/xmlversion.h	32;"	d
LIBXML_EXPR_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	349;"	d
LIBXML_FTP_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	169;"	d
LIBXML_HTML_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	196;"	d
LIBXML_HTTP_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	178;"	d
LIBXML_ICONV_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	268;"	d
LIBXML_ISO8859X_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	286;"	d
LIBXML_LEGACY_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	205;"	d
LIBXML_LZMA_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	400;"	d
LIBXML_MODULES_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	376;"	d
LIBXML_MODULE_EXTENSION	/usr/include/libxml2/libxml/xmlversion.h	382;"	d
LIBXML_OUTPUT_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	115;"	d
LIBXML_PATTERN_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	142;"	d
LIBXML_PUSH_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	124;"	d
LIBXML_READER_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	133;"	d
LIBXML_REGEXP_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	331;"	d
LIBXML_SAX1_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	160;"	d
LIBXML_SCHEMAS_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	358;"	d
LIBXML_SCHEMATRON_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	367;"	d
LIBXML_TEST_VERSION	/usr/include/libxml2/libxml/xmlversion.h	61;"	d
LIBXML_THREAD_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	96;"	d
LIBXML_TREE_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	106;"	d
LIBXML_UNICODE_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	322;"	d
LIBXML_VALID_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	187;"	d
LIBXML_VERSION	/usr/include/libxml2/libxml/xmlversion.h	39;"	d
LIBXML_VERSION_EXTRA	/usr/include/libxml2/libxml/xmlversion.h	53;"	d
LIBXML_VERSION_STRING	/usr/include/libxml2/libxml/xmlversion.h	46;"	d
LIBXML_WRITER_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	151;"	d
LIBXML_XINCLUDE_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	259;"	d
LIBXML_XPATH_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	241;"	d
LIBXML_XPTR_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	250;"	d
LIBXML_ZLIB_ENABLED	/usr/include/libxml2/libxml/xmlversion.h	391;"	d
MOVETO_ENDTAG	/usr/include/libxml2/libxml/parserInternals.h	264;"	d
MOVETO_STARTTAG	/usr/include/libxml2/libxml/parserInternals.h	273;"	d
PublicID	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar               *PublicID;	\/* Public identifier, if any *\/$/;"	m	struct:_xmlNotation	access:public
SKIP_EOL	/usr/include/libxml2/libxml/parserInternals.h	254;"	d
SOCKET	/usr/include/libxml2/libxml/nanoftp.h	27;"	d
SystemID	/usr/include/libxml2/libxml/entities.h	/^    const xmlChar      *SystemID;	\/* URI for a SYSTEM or PUBLIC Entity *\/$/;"	m	struct:_xmlEntity	access:public
SystemID	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar               *SystemID;	\/* System identifier, if any *\/$/;"	m	struct:_xmlNotation	access:public
SystemID	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar *SystemID;	\/* URI for a SYSTEM or PUBLIC DTD *\/$/;"	m	struct:_xmlDtd	access:public
URI	/usr/include/libxml2/libxml/entities.h	/^    const xmlChar           *URI;	\/* the full URI as computed *\/$/;"	m	struct:_xmlEntity	access:public
URL	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar  *URL;	\/* The URI for that document *\/$/;"	m	struct:_xmlDoc	access:public
UTF8ToHtml	/usr/include/libxml2/libxml/HTMLparser.h	/^			UTF8ToHtml	(unsigned char *out,$/;"	p	signature:(unsigned char *out, int *outlen, const unsigned char *in, int *inlen)
UTF8Toisolat1	/usr/include/libxml2/libxml/encoding.h	/^	UTF8Toisolat1			(unsigned char *out,$/;"	p	signature:(unsigned char *out, int *outlen, const unsigned char *in, int *inlen)
WITHOUT_TRIO	/usr/include/libxml2/libxml/xmlversion.h	77;"	d
WITH_TRIO	/usr/include/libxml2/libxml/xmlversion.h	85;"	d
XINCLUDE_FALLBACK	/usr/include/libxml2/libxml/xinclude.h	48;"	d
XINCLUDE_HREF	/usr/include/libxml2/libxml/xinclude.h	54;"	d
XINCLUDE_NODE	/usr/include/libxml2/libxml/xinclude.h	42;"	d
XINCLUDE_NS	/usr/include/libxml2/libxml/xinclude.h	30;"	d
XINCLUDE_OLD_NS	/usr/include/libxml2/libxml/xinclude.h	36;"	d
XINCLUDE_PARSE	/usr/include/libxml2/libxml/xinclude.h	60;"	d
XINCLUDE_PARSE_ENCODING	/usr/include/libxml2/libxml/xinclude.h	78;"	d
XINCLUDE_PARSE_TEXT	/usr/include/libxml2/libxml/xinclude.h	72;"	d
XINCLUDE_PARSE_XML	/usr/include/libxml2/libxml/xinclude.h	66;"	d
XINCLUDE_PARSE_XPOINTER	/usr/include/libxml2/libxml/xinclude.h	84;"	d
XLINK_ACTUATE_AUTO	/usr/include/libxml2/libxml/xlink.h	/^    XLINK_ACTUATE_AUTO,$/;"	e	enum:__anon33
XLINK_ACTUATE_NONE	/usr/include/libxml2/libxml/xlink.h	/^    XLINK_ACTUATE_NONE = 0,$/;"	e	enum:__anon33
XLINK_ACTUATE_ONREQUEST	/usr/include/libxml2/libxml/xlink.h	/^    XLINK_ACTUATE_ONREQUEST$/;"	e	enum:__anon33
XLINK_SHOW_EMBED	/usr/include/libxml2/libxml/xlink.h	/^    XLINK_SHOW_EMBED,$/;"	e	enum:__anon32
XLINK_SHOW_NEW	/usr/include/libxml2/libxml/xlink.h	/^    XLINK_SHOW_NEW,$/;"	e	enum:__anon32
XLINK_SHOW_NONE	/usr/include/libxml2/libxml/xlink.h	/^    XLINK_SHOW_NONE = 0,$/;"	e	enum:__anon32
XLINK_SHOW_REPLACE	/usr/include/libxml2/libxml/xlink.h	/^    XLINK_SHOW_REPLACE$/;"	e	enum:__anon32
XLINK_TYPE_EXTENDED	/usr/include/libxml2/libxml/xlink.h	/^    XLINK_TYPE_EXTENDED,$/;"	e	enum:__anon31
XLINK_TYPE_EXTENDED_SET	/usr/include/libxml2/libxml/xlink.h	/^    XLINK_TYPE_EXTENDED_SET$/;"	e	enum:__anon31
XLINK_TYPE_NONE	/usr/include/libxml2/libxml/xlink.h	/^    XLINK_TYPE_NONE = 0,$/;"	e	enum:__anon31
XLINK_TYPE_SIMPLE	/usr/include/libxml2/libxml/xlink.h	/^    XLINK_TYPE_SIMPLE,$/;"	e	enum:__anon31
XMLCALL	/usr/include/libxml2/libxml/xmlexports.h	109;"	d
XMLCALL	/usr/include/libxml2/libxml/xmlexports.h	127;"	d
XMLCALL	/usr/include/libxml2/libxml/xmlexports.h	138;"	d
XMLCALL	/usr/include/libxml2/libxml/xmlexports.h	151;"	d
XMLCALL	/usr/include/libxml2/libxml/xmlexports.h	42;"	d
XMLCALL	/usr/include/libxml2/libxml/xmlexports.h	57;"	d
XMLCALL	/usr/include/libxml2/libxml/xmlexports.h	71;"	d
XMLCALL	/usr/include/libxml2/libxml/xmlexports.h	73;"	d
XMLCALL	/usr/include/libxml2/libxml/xmlexports.h	85;"	d
XMLCALL	/usr/include/libxml2/libxml/xmlexports.h	98;"	d
XMLCDECL	/usr/include/libxml2/libxml/xmlexports.h	110;"	d
XMLCDECL	/usr/include/libxml2/libxml/xmlexports.h	128;"	d
XMLCDECL	/usr/include/libxml2/libxml/xmlexports.h	139;"	d
XMLCDECL	/usr/include/libxml2/libxml/xmlexports.h	152;"	d
XMLCDECL	/usr/include/libxml2/libxml/xmlexports.h	49;"	d
XMLCDECL	/usr/include/libxml2/libxml/xmlexports.h	58;"	d
XMLCDECL	/usr/include/libxml2/libxml/xmlexports.h	75;"	d
XMLCDECL	/usr/include/libxml2/libxml/xmlexports.h	86;"	d
XMLCDECL	/usr/include/libxml2/libxml/xmlexports.h	99;"	d
XMLPUBFUN	/usr/include/libxml2/libxml/xmlexports.h	107;"	d
XMLPUBFUN	/usr/include/libxml2/libxml/xmlexports.h	117;"	d
XMLPUBFUN	/usr/include/libxml2/libxml/xmlexports.h	120;"	d
XMLPUBFUN	/usr/include/libxml2/libxml/xmlexports.h	136;"	d
XMLPUBFUN	/usr/include/libxml2/libxml/xmlexports.h	141;"	d
XMLPUBFUN	/usr/include/libxml2/libxml/xmlexports.h	144;"	d
XMLPUBFUN	/usr/include/libxml2/libxml/xmlexports.h	30;"	d
XMLPUBFUN	/usr/include/libxml2/libxml/xmlexports.h	55;"	d
XMLPUBFUN	/usr/include/libxml2/libxml/xmlexports.h	60;"	d
XMLPUBFUN	/usr/include/libxml2/libxml/xmlexports.h	63;"	d
XMLPUBFUN	/usr/include/libxml2/libxml/xmlexports.h	83;"	d
XMLPUBFUN	/usr/include/libxml2/libxml/xmlexports.h	88;"	d
XMLPUBFUN	/usr/include/libxml2/libxml/xmlexports.h	91;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	108;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	118;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	122;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	124;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	137;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	142;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	146;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	148;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	36;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	56;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	61;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	65;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	67;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	84;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	89;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	93;"	d
XMLPUBVAR	/usr/include/libxml2/libxml/xmlexports.h	95;"	d
XML_ATTRIBUTE_CDATA	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_CDATA = 1,$/;"	e	enum:__anon25
XML_ATTRIBUTE_DECL	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_DECL=		16,$/;"	e	enum:__anon24
XML_ATTRIBUTE_ENTITIES	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_ENTITIES,$/;"	e	enum:__anon25
XML_ATTRIBUTE_ENTITY	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_ENTITY,$/;"	e	enum:__anon25
XML_ATTRIBUTE_ENUMERATION	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_ENUMERATION,$/;"	e	enum:__anon25
XML_ATTRIBUTE_FIXED	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_FIXED$/;"	e	enum:__anon26
XML_ATTRIBUTE_ID	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_ID,$/;"	e	enum:__anon25
XML_ATTRIBUTE_IDREF	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_IDREF	,$/;"	e	enum:__anon25
XML_ATTRIBUTE_IDREFS	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_IDREFS,$/;"	e	enum:__anon25
XML_ATTRIBUTE_IMPLIED	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_IMPLIED,$/;"	e	enum:__anon26
XML_ATTRIBUTE_NMTOKEN	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_NMTOKEN,$/;"	e	enum:__anon25
XML_ATTRIBUTE_NMTOKENS	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_NMTOKENS,$/;"	e	enum:__anon25
XML_ATTRIBUTE_NODE	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_NODE=		2,$/;"	e	enum:__anon24
XML_ATTRIBUTE_NONE	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_NONE = 1,$/;"	e	enum:__anon26
XML_ATTRIBUTE_NOTATION	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_NOTATION$/;"	e	enum:__anon25
XML_ATTRIBUTE_REQUIRED	/usr/include/libxml2/libxml/tree.h	/^    XML_ATTRIBUTE_REQUIRED,$/;"	e	enum:__anon26
XML_BUFFER_ALLOC_DOUBLEIT	/usr/include/libxml2/libxml/tree.h	/^    XML_BUFFER_ALLOC_DOUBLEIT,	\/* double each time one need to grow *\/$/;"	e	enum:__anon23
XML_BUFFER_ALLOC_EXACT	/usr/include/libxml2/libxml/tree.h	/^    XML_BUFFER_ALLOC_EXACT,	\/* grow only to the minimal size *\/$/;"	e	enum:__anon23
XML_BUFFER_ALLOC_HYBRID	/usr/include/libxml2/libxml/tree.h	/^    XML_BUFFER_ALLOC_HYBRID	\/* exact up to a threshold, and doubleit thereafter *\/$/;"	e	enum:__anon23
XML_BUFFER_ALLOC_IMMUTABLE	/usr/include/libxml2/libxml/tree.h	/^    XML_BUFFER_ALLOC_IMMUTABLE, \/* immutable buffer *\/$/;"	e	enum:__anon23
XML_BUFFER_ALLOC_IO	/usr/include/libxml2/libxml/tree.h	/^    XML_BUFFER_ALLOC_IO,	\/* special allocation scheme used for I\/O *\/$/;"	e	enum:__anon23
XML_C14N_1_0	/usr/include/libxml2/libxml/c14n.h	/^    XML_C14N_1_0            = 0,    \/* Origianal C14N 1.0 spec *\/$/;"	e	enum:__anon41
XML_C14N_1_1	/usr/include/libxml2/libxml/c14n.h	/^    XML_C14N_1_1            = 2     \/* C14N 1.1 spec *\/$/;"	e	enum:__anon41
XML_C14N_CREATE_CTXT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_C14N_CREATE_CTXT = 1950,$/;"	e	enum:__anon44
XML_C14N_CREATE_STACK	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_C14N_CREATE_STACK, \/* 1952 *\/$/;"	e	enum:__anon44
XML_C14N_EXCLUSIVE_1_0	/usr/include/libxml2/libxml/c14n.h	/^    XML_C14N_EXCLUSIVE_1_0  = 1,    \/* Exclusive C14N 1.0 spec *\/$/;"	e	enum:__anon41
XML_C14N_INVALID_NODE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_C14N_INVALID_NODE, \/* 1953 *\/$/;"	e	enum:__anon44
XML_C14N_RELATIVE_NAMESPACE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_C14N_RELATIVE_NAMESPACE, \/* 1955 *\/$/;"	e	enum:__anon44
XML_C14N_REQUIRES_UTF8	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_C14N_REQUIRES_UTF8, \/* 1951 *\/$/;"	e	enum:__anon44
XML_C14N_UNKNOW_NODE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_C14N_UNKNOW_NODE, \/* 1954 *\/$/;"	e	enum:__anon44
XML_CAST_FPTR	/usr/include/libxml2/libxml/hash.h	56;"	d
XML_CATALOGS_NAMESPACE	/usr/include/libxml2/libxml/catalog.h	37;"	d
XML_CATALOG_ENTRY_BROKEN	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CATALOG_ENTRY_BROKEN, \/* 1651 *\/$/;"	e	enum:__anon44
XML_CATALOG_MISSING_ATTR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CATALOG_MISSING_ATTR = 1650,$/;"	e	enum:__anon44
XML_CATALOG_NOT_CATALOG	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CATALOG_NOT_CATALOG, \/* 1653 *\/$/;"	e	enum:__anon44
XML_CATALOG_PI	/usr/include/libxml2/libxml/catalog.h	44;"	d
XML_CATALOG_PREFER_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CATALOG_PREFER_VALUE, \/* 1652 *\/$/;"	e	enum:__anon44
XML_CATALOG_RECURSION	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CATALOG_RECURSION, \/* 1654 *\/$/;"	e	enum:__anon44
XML_CATA_ALLOW_ALL	/usr/include/libxml2/libxml/catalog.h	/^    XML_CATA_ALLOW_ALL = 3$/;"	e	enum:__anon18
XML_CATA_ALLOW_DOCUMENT	/usr/include/libxml2/libxml/catalog.h	/^    XML_CATA_ALLOW_DOCUMENT = 2,$/;"	e	enum:__anon18
XML_CATA_ALLOW_GLOBAL	/usr/include/libxml2/libxml/catalog.h	/^    XML_CATA_ALLOW_GLOBAL = 1,$/;"	e	enum:__anon18
XML_CATA_ALLOW_NONE	/usr/include/libxml2/libxml/catalog.h	/^    XML_CATA_ALLOW_NONE = 0,$/;"	e	enum:__anon18
XML_CATA_PREFER_NONE	/usr/include/libxml2/libxml/catalog.h	/^    XML_CATA_PREFER_NONE = 0,$/;"	e	enum:__anon17
XML_CATA_PREFER_PUBLIC	/usr/include/libxml2/libxml/catalog.h	/^    XML_CATA_PREFER_PUBLIC = 1,$/;"	e	enum:__anon17
XML_CATA_PREFER_SYSTEM	/usr/include/libxml2/libxml/catalog.h	/^    XML_CATA_PREFER_SYSTEM$/;"	e	enum:__anon17
XML_CDATA_SECTION_NODE	/usr/include/libxml2/libxml/tree.h	/^    XML_CDATA_SECTION_NODE=	4,$/;"	e	enum:__anon24
XML_CHAR_ENCODING_2022_JP	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_2022_JP=  19,\/* ISO-2022-JP *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_8859_1	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_1=	10,\/* ISO-8859-1 ISO Latin 1 *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_8859_2	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_2=	11,\/* ISO-8859-2 ISO Latin 2 *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_8859_3	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_3=	12,\/* ISO-8859-3 *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_8859_4	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_4=	13,\/* ISO-8859-4 *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_8859_5	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_5=	14,\/* ISO-8859-5 *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_8859_6	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_6=	15,\/* ISO-8859-6 *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_8859_7	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_7=	16,\/* ISO-8859-7 *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_8859_8	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_8=	17,\/* ISO-8859-8 *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_8859_9	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_8859_9=	18,\/* ISO-8859-9 *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_ASCII	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_ASCII=    22 \/* pure ASCII *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_EBCDIC	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_EBCDIC=	6, \/* EBCDIC uh! *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_ERROR	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_ERROR=   -1, \/* No char encoding detected *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_EUC_JP	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_EUC_JP=   21,\/* EUC-JP *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_NONE	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_NONE=	0, \/* No char encoding detected *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_SHIFT_JIS	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_SHIFT_JIS=20,\/* Shift_JIS *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_UCS2	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_UCS2=	9, \/* UCS-2 *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_UCS4BE	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_UCS4BE=	5, \/* UCS-4 big endian *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_UCS4LE	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_UCS4LE=	4, \/* UCS-4 little endian *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_UCS4_2143	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_UCS4_2143=7, \/* UCS-4 unusual ordering *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_UCS4_3412	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_UCS4_3412=8, \/* UCS-4 unusual ordering *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_UTF16BE	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_UTF16BE=	3, \/* UTF-16 big endian *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_UTF16LE	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_UTF16LE=	2, \/* UTF-16 little endian *\/$/;"	e	enum:__anon39
XML_CHAR_ENCODING_UTF8	/usr/include/libxml2/libxml/encoding.h	/^    XML_CHAR_ENCODING_UTF8=	1, \/* UTF-8 *\/$/;"	e	enum:__anon39
XML_CHECK_ENTITY_TYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_ENTITY_TYPE, \/* 5012 *\/$/;"	e	enum:__anon44
XML_CHECK_FOUND_ATTRIBUTE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_FOUND_ATTRIBUTE, \/* 5001 *\/$/;"	e	enum:__anon44
XML_CHECK_FOUND_CDATA	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_FOUND_CDATA, \/* 5003 *\/$/;"	e	enum:__anon44
XML_CHECK_FOUND_COMMENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_FOUND_COMMENT, \/* 5007 *\/$/;"	e	enum:__anon44
XML_CHECK_FOUND_DOCTYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_FOUND_DOCTYPE, \/* 5008 *\/$/;"	e	enum:__anon44
XML_CHECK_FOUND_ELEMENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_FOUND_ELEMENT = 5000,$/;"	e	enum:__anon44
XML_CHECK_FOUND_ENTITY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_FOUND_ENTITY, \/* 5005 *\/$/;"	e	enum:__anon44
XML_CHECK_FOUND_ENTITYREF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_FOUND_ENTITYREF, \/* 5004 *\/$/;"	e	enum:__anon44
XML_CHECK_FOUND_FRAGMENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_FOUND_FRAGMENT, \/* 5009 *\/$/;"	e	enum:__anon44
XML_CHECK_FOUND_NOTATION	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_FOUND_NOTATION, \/* 5010 *\/$/;"	e	enum:__anon44
XML_CHECK_FOUND_PI	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_FOUND_PI, \/* 5006 *\/$/;"	e	enum:__anon44
XML_CHECK_FOUND_TEXT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_FOUND_TEXT, \/* 5002 *\/$/;"	e	enum:__anon44
XML_CHECK_NAME_NOT_NULL	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NAME_NOT_NULL, \/* 5037 *\/$/;"	e	enum:__anon44
XML_CHECK_NOT_ATTR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NOT_ATTR, \/* 5023 *\/$/;"	e	enum:__anon44
XML_CHECK_NOT_ATTR_DECL	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NOT_ATTR_DECL, \/* 5024 *\/$/;"	e	enum:__anon44
XML_CHECK_NOT_DTD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NOT_DTD, \/* 5022 *\/$/;"	e	enum:__anon44
XML_CHECK_NOT_ELEM_DECL	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NOT_ELEM_DECL, \/* 5025 *\/$/;"	e	enum:__anon44
XML_CHECK_NOT_ENTITY_DECL	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NOT_ENTITY_DECL, \/* 5026 *\/$/;"	e	enum:__anon44
XML_CHECK_NOT_NCNAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NOT_NCNAME, \/* 5034 *\/$/;"	e	enum:__anon44
XML_CHECK_NOT_NS_DECL	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NOT_NS_DECL, \/* 5027 *\/$/;"	e	enum:__anon44
XML_CHECK_NOT_UTF8	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NOT_UTF8, \/* 5032 *\/$/;"	e	enum:__anon44
XML_CHECK_NO_DICT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NO_DICT, \/* 5033 *\/$/;"	e	enum:__anon44
XML_CHECK_NO_DOC	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NO_DOC, \/* 5014 *\/$/;"	e	enum:__anon44
XML_CHECK_NO_ELEM	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NO_ELEM, \/* 5016 *\/$/;"	e	enum:__anon44
XML_CHECK_NO_HREF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NO_HREF, \/* 5028 *\/$/;"	e	enum:__anon44
XML_CHECK_NO_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NO_NAME, \/* 5015 *\/$/;"	e	enum:__anon44
XML_CHECK_NO_NEXT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NO_NEXT, \/* 5020 *\/$/;"	e	enum:__anon44
XML_CHECK_NO_PARENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NO_PARENT, \/* 5013 *\/$/;"	e	enum:__anon44
XML_CHECK_NO_PREV	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NO_PREV, \/* 5018 *\/$/;"	e	enum:__anon44
XML_CHECK_NS_ANCESTOR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NS_ANCESTOR, \/* 5031 *\/$/;"	e	enum:__anon44
XML_CHECK_NS_SCOPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_NS_SCOPE, \/* 5030 *\/$/;"	e	enum:__anon44
XML_CHECK_OUTSIDE_DICT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_OUTSIDE_DICT, \/* 5035 *\/$/;"	e	enum:__anon44
XML_CHECK_UNKNOWN_NODE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_UNKNOWN_NODE, \/* 5011 *\/$/;"	e	enum:__anon44
XML_CHECK_WRONG_DOC	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_WRONG_DOC, \/* 5017 *\/$/;"	e	enum:__anon44
XML_CHECK_WRONG_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_WRONG_NAME, \/* 5036 *\/$/;"	e	enum:__anon44
XML_CHECK_WRONG_NEXT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_WRONG_NEXT, \/* 5021 *\/$/;"	e	enum:__anon44
XML_CHECK_WRONG_PARENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_WRONG_PARENT,\/* 5029 *\/$/;"	e	enum:__anon44
XML_CHECK_WRONG_PREV	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_CHECK_WRONG_PREV, \/* 5019 *\/$/;"	e	enum:__anon44
XML_COMMENT_NODE	/usr/include/libxml2/libxml/tree.h	/^    XML_COMMENT_NODE=		8,$/;"	e	enum:__anon24
XML_COMPLETE_ATTRS	/usr/include/libxml2/libxml/parser.h	148;"	d
XML_CTXT_FINISH_DTD_0	/usr/include/libxml2/libxml/valid.h	67;"	d
XML_CTXT_FINISH_DTD_1	/usr/include/libxml2/libxml/valid.h	73;"	d
XML_DEFAULT_VERSION	/usr/include/libxml2/libxml/parser.h	33;"	d
XML_DETECT_IDS	/usr/include/libxml2/libxml/parser.h	139;"	d
XML_DOCB_DOCUMENT_NODE	/usr/include/libxml2/libxml/tree.h	/^   ,XML_DOCB_DOCUMENT_NODE=	21$/;"	e	enum:__anon24
XML_DOCUMENT_FRAG_NODE	/usr/include/libxml2/libxml/tree.h	/^    XML_DOCUMENT_FRAG_NODE=	11,$/;"	e	enum:__anon24
XML_DOCUMENT_NODE	/usr/include/libxml2/libxml/tree.h	/^    XML_DOCUMENT_NODE=		9,$/;"	e	enum:__anon24
XML_DOCUMENT_TYPE_NODE	/usr/include/libxml2/libxml/tree.h	/^    XML_DOCUMENT_TYPE_NODE=	10,$/;"	e	enum:__anon24
XML_DOC_DTDVALID	/usr/include/libxml2/libxml/tree.h	/^    XML_DOC_DTDVALID		= 1<<3, \/* DTD validation was successful *\/$/;"	e	enum:__anon30
XML_DOC_HTML	/usr/include/libxml2/libxml/tree.h	/^    XML_DOC_HTML		= 1<<7  \/* parsed or built HTML document *\/$/;"	e	enum:__anon30
XML_DOC_INTERNAL	/usr/include/libxml2/libxml/tree.h	/^    XML_DOC_INTERNAL		= 1<<6, \/* built for internal processing *\/$/;"	e	enum:__anon30
XML_DOC_NSVALID	/usr/include/libxml2/libxml/tree.h	/^    XML_DOC_NSVALID		= 1<<1, \/* document is Namespace valid *\/$/;"	e	enum:__anon30
XML_DOC_OLD10	/usr/include/libxml2/libxml/tree.h	/^    XML_DOC_OLD10		= 1<<2, \/* parsed with old XML-1.0 parser *\/$/;"	e	enum:__anon30
XML_DOC_USERBUILT	/usr/include/libxml2/libxml/tree.h	/^    XML_DOC_USERBUILT		= 1<<5, \/* Document was built using the API$/;"	e	enum:__anon30
XML_DOC_WELLFORMED	/usr/include/libxml2/libxml/tree.h	/^    XML_DOC_WELLFORMED		= 1<<0, \/* document is XML well formed *\/$/;"	e	enum:__anon30
XML_DOC_XINCLUDE	/usr/include/libxml2/libxml/tree.h	/^    XML_DOC_XINCLUDE		= 1<<4, \/* XInclude substitution was done *\/$/;"	e	enum:__anon30
XML_DTD_ATTRIBUTE_DEFAULT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_ATTRIBUTE_DEFAULT = 500,$/;"	e	enum:__anon44
XML_DTD_ATTRIBUTE_REDEFINED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_ATTRIBUTE_REDEFINED, \/* 501 *\/$/;"	e	enum:__anon44
XML_DTD_ATTRIBUTE_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_ATTRIBUTE_VALUE, \/* 502 *\/$/;"	e	enum:__anon44
XML_DTD_CONTENT_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_CONTENT_ERROR, \/* 503 *\/$/;"	e	enum:__anon44
XML_DTD_CONTENT_MODEL	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_CONTENT_MODEL, \/* 504 *\/$/;"	e	enum:__anon44
XML_DTD_CONTENT_NOT_DETERMINIST	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_CONTENT_NOT_DETERMINIST, \/* 505 *\/$/;"	e	enum:__anon44
XML_DTD_DIFFERENT_PREFIX	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_DIFFERENT_PREFIX, \/* 506 *\/$/;"	e	enum:__anon44
XML_DTD_DUP_TOKEN	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_DUP_TOKEN, \/* 541 *\/$/;"	e	enum:__anon44
XML_DTD_ELEM_DEFAULT_NAMESPACE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_ELEM_DEFAULT_NAMESPACE, \/* 507 *\/$/;"	e	enum:__anon44
XML_DTD_ELEM_NAMESPACE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_ELEM_NAMESPACE, \/* 508 *\/$/;"	e	enum:__anon44
XML_DTD_ELEM_REDEFINED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_ELEM_REDEFINED, \/* 509 *\/$/;"	e	enum:__anon44
XML_DTD_EMPTY_NOTATION	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_EMPTY_NOTATION, \/* 510 *\/$/;"	e	enum:__anon44
XML_DTD_ENTITY_TYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_ENTITY_TYPE, \/* 511 *\/$/;"	e	enum:__anon44
XML_DTD_ID_FIXED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_ID_FIXED, \/* 512 *\/$/;"	e	enum:__anon44
XML_DTD_ID_REDEFINED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_ID_REDEFINED, \/* 513 *\/$/;"	e	enum:__anon44
XML_DTD_ID_SUBSET	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_ID_SUBSET, \/* 514 *\/$/;"	e	enum:__anon44
XML_DTD_INVALID_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_INVALID_CHILD, \/* 515 *\/$/;"	e	enum:__anon44
XML_DTD_INVALID_DEFAULT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_INVALID_DEFAULT, \/* 516 *\/$/;"	e	enum:__anon44
XML_DTD_LOAD_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_LOAD_ERROR, \/* 517 *\/$/;"	e	enum:__anon44
XML_DTD_MISSING_ATTRIBUTE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_MISSING_ATTRIBUTE, \/* 518 *\/$/;"	e	enum:__anon44
XML_DTD_MIXED_CORRUPT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_MIXED_CORRUPT, \/* 519 *\/$/;"	e	enum:__anon44
XML_DTD_MULTIPLE_ID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_MULTIPLE_ID, \/* 520 *\/$/;"	e	enum:__anon44
XML_DTD_NODE	/usr/include/libxml2/libxml/tree.h	/^    XML_DTD_NODE=		14,$/;"	e	enum:__anon24
XML_DTD_NOTATION_REDEFINED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_NOTATION_REDEFINED, \/* 526 *\/$/;"	e	enum:__anon44
XML_DTD_NOTATION_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_NOTATION_VALUE, \/* 527 *\/$/;"	e	enum:__anon44
XML_DTD_NOT_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_NOT_EMPTY, \/* 528 *\/$/;"	e	enum:__anon44
XML_DTD_NOT_PCDATA	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_NOT_PCDATA, \/* 529 *\/$/;"	e	enum:__anon44
XML_DTD_NOT_STANDALONE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_NOT_STANDALONE, \/* 530 *\/$/;"	e	enum:__anon44
XML_DTD_NO_DOC	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_NO_DOC, \/* 521 *\/$/;"	e	enum:__anon44
XML_DTD_NO_DTD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_NO_DTD, \/* 522 *\/$/;"	e	enum:__anon44
XML_DTD_NO_ELEM_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_NO_ELEM_NAME, \/* 523 *\/$/;"	e	enum:__anon44
XML_DTD_NO_PREFIX	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_NO_PREFIX, \/* 524 *\/$/;"	e	enum:__anon44
XML_DTD_NO_ROOT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_NO_ROOT, \/* 525 *\/$/;"	e	enum:__anon44
XML_DTD_ROOT_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_ROOT_NAME, \/* 531 *\/$/;"	e	enum:__anon44
XML_DTD_STANDALONE_DEFAULTED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_STANDALONE_DEFAULTED, \/* 538 *\/$/;"	e	enum:__anon44
XML_DTD_STANDALONE_WHITE_SPACE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_STANDALONE_WHITE_SPACE, \/* 532 *\/$/;"	e	enum:__anon44
XML_DTD_UNKNOWN_ATTRIBUTE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_UNKNOWN_ATTRIBUTE, \/* 533 *\/$/;"	e	enum:__anon44
XML_DTD_UNKNOWN_ELEM	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_UNKNOWN_ELEM, \/* 534 *\/$/;"	e	enum:__anon44
XML_DTD_UNKNOWN_ENTITY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_UNKNOWN_ENTITY, \/* 535 *\/$/;"	e	enum:__anon44
XML_DTD_UNKNOWN_ID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_UNKNOWN_ID, \/* 536 *\/$/;"	e	enum:__anon44
XML_DTD_UNKNOWN_NOTATION	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_UNKNOWN_NOTATION, \/* 537 *\/$/;"	e	enum:__anon44
XML_DTD_XMLID_TYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_XMLID_TYPE, \/* 540 *\/$/;"	e	enum:__anon44
XML_DTD_XMLID_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_DTD_XMLID_VALUE, \/* 539 *\/$/;"	e	enum:__anon44
XML_ELEMENT_CONTENT_ELEMENT	/usr/include/libxml2/libxml/tree.h	/^    XML_ELEMENT_CONTENT_ELEMENT,$/;"	e	enum:__anon27
XML_ELEMENT_CONTENT_MULT	/usr/include/libxml2/libxml/tree.h	/^    XML_ELEMENT_CONTENT_MULT,$/;"	e	enum:__anon28
XML_ELEMENT_CONTENT_ONCE	/usr/include/libxml2/libxml/tree.h	/^    XML_ELEMENT_CONTENT_ONCE = 1,$/;"	e	enum:__anon28
XML_ELEMENT_CONTENT_OPT	/usr/include/libxml2/libxml/tree.h	/^    XML_ELEMENT_CONTENT_OPT,$/;"	e	enum:__anon28
XML_ELEMENT_CONTENT_OR	/usr/include/libxml2/libxml/tree.h	/^    XML_ELEMENT_CONTENT_OR$/;"	e	enum:__anon27
XML_ELEMENT_CONTENT_PCDATA	/usr/include/libxml2/libxml/tree.h	/^    XML_ELEMENT_CONTENT_PCDATA = 1,$/;"	e	enum:__anon27
XML_ELEMENT_CONTENT_PLUS	/usr/include/libxml2/libxml/tree.h	/^    XML_ELEMENT_CONTENT_PLUS$/;"	e	enum:__anon28
XML_ELEMENT_CONTENT_SEQ	/usr/include/libxml2/libxml/tree.h	/^    XML_ELEMENT_CONTENT_SEQ,$/;"	e	enum:__anon27
XML_ELEMENT_DECL	/usr/include/libxml2/libxml/tree.h	/^    XML_ELEMENT_DECL=		15,$/;"	e	enum:__anon24
XML_ELEMENT_NODE	/usr/include/libxml2/libxml/tree.h	/^    XML_ELEMENT_NODE=		1,$/;"	e	enum:__anon24
XML_ELEMENT_TYPE_ANY	/usr/include/libxml2/libxml/tree.h	/^    XML_ELEMENT_TYPE_ANY,$/;"	e	enum:__anon29
XML_ELEMENT_TYPE_ELEMENT	/usr/include/libxml2/libxml/tree.h	/^    XML_ELEMENT_TYPE_ELEMENT$/;"	e	enum:__anon29
XML_ELEMENT_TYPE_EMPTY	/usr/include/libxml2/libxml/tree.h	/^    XML_ELEMENT_TYPE_EMPTY = 1,$/;"	e	enum:__anon29
XML_ELEMENT_TYPE_MIXED	/usr/include/libxml2/libxml/tree.h	/^    XML_ELEMENT_TYPE_MIXED,$/;"	e	enum:__anon29
XML_ELEMENT_TYPE_UNDEFINED	/usr/include/libxml2/libxml/tree.h	/^    XML_ELEMENT_TYPE_UNDEFINED = 0,$/;"	e	enum:__anon29
XML_ENTITY_DECL	/usr/include/libxml2/libxml/tree.h	/^    XML_ENTITY_DECL=		17,$/;"	e	enum:__anon24
XML_ENTITY_NODE	/usr/include/libxml2/libxml/tree.h	/^    XML_ENTITY_NODE=		6,$/;"	e	enum:__anon24
XML_ENTITY_REF_NODE	/usr/include/libxml2/libxml/tree.h	/^    XML_ENTITY_REF_NODE=	5,$/;"	e	enum:__anon24
XML_ERR_ATTLIST_NOT_FINISHED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ATTLIST_NOT_FINISHED, \/* 51 *\/$/;"	e	enum:__anon44
XML_ERR_ATTLIST_NOT_STARTED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ATTLIST_NOT_STARTED, \/* 50 *\/$/;"	e	enum:__anon44
XML_ERR_ATTRIBUTE_NOT_FINISHED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ATTRIBUTE_NOT_FINISHED, \/* 40 *\/$/;"	e	enum:__anon44
XML_ERR_ATTRIBUTE_NOT_STARTED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ATTRIBUTE_NOT_STARTED, \/* 39 *\/$/;"	e	enum:__anon44
XML_ERR_ATTRIBUTE_REDEFINED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ATTRIBUTE_REDEFINED, \/* 42 *\/$/;"	e	enum:__anon44
XML_ERR_ATTRIBUTE_WITHOUT_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ATTRIBUTE_WITHOUT_VALUE, \/* 41 *\/$/;"	e	enum:__anon44
XML_ERR_CDATA_NOT_FINISHED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_CDATA_NOT_FINISHED, \/* 63 *\/$/;"	e	enum:__anon44
XML_ERR_CHARREF_AT_EOF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_CHARREF_AT_EOF, \/* 10 *\/$/;"	e	enum:__anon44
XML_ERR_CHARREF_IN_DTD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_CHARREF_IN_DTD, \/* 13 *\/$/;"	e	enum:__anon44
XML_ERR_CHARREF_IN_EPILOG	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_CHARREF_IN_EPILOG, \/* 12 *\/$/;"	e	enum:__anon44
XML_ERR_CHARREF_IN_PROLOG	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_CHARREF_IN_PROLOG, \/* 11 *\/$/;"	e	enum:__anon44
XML_ERR_COMMENT_NOT_FINISHED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_COMMENT_NOT_FINISHED, \/* 45 *\/$/;"	e	enum:__anon44
XML_ERR_CONDSEC_INVALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_CONDSEC_INVALID, \/* 83 *\/$/;"	e	enum:__anon44
XML_ERR_CONDSEC_INVALID_KEYWORD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_CONDSEC_INVALID_KEYWORD, \/* 95 *\/$/;"	e	enum:__anon44
XML_ERR_CONDSEC_NOT_FINISHED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_CONDSEC_NOT_FINISHED, \/* 59 *\/$/;"	e	enum:__anon44
XML_ERR_CONDSEC_NOT_STARTED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_CONDSEC_NOT_STARTED, \/* 58 *\/$/;"	e	enum:__anon44
XML_ERR_DOCTYPE_NOT_FINISHED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_DOCTYPE_NOT_FINISHED, \/* 61 *\/$/;"	e	enum:__anon44
XML_ERR_DOCUMENT_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_DOCUMENT_EMPTY, \/* 4 *\/$/;"	e	enum:__anon44
XML_ERR_DOCUMENT_END	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_DOCUMENT_END, \/* 5 *\/$/;"	e	enum:__anon44
XML_ERR_DOCUMENT_START	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_DOCUMENT_START, \/* 3 *\/$/;"	e	enum:__anon44
XML_ERR_ELEMCONTENT_NOT_FINISHED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ELEMCONTENT_NOT_FINISHED, \/* 55 *\/$/;"	e	enum:__anon44
XML_ERR_ELEMCONTENT_NOT_STARTED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ELEMCONTENT_NOT_STARTED, \/* 54 *\/$/;"	e	enum:__anon44
XML_ERR_ENCODING_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENCODING_NAME, \/* 79 *\/$/;"	e	enum:__anon44
XML_ERR_ENTITYREF_AT_EOF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENTITYREF_AT_EOF, \/* 14 *\/$/;"	e	enum:__anon44
XML_ERR_ENTITYREF_IN_DTD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENTITYREF_IN_DTD, \/* 17 *\/$/;"	e	enum:__anon44
XML_ERR_ENTITYREF_IN_EPILOG	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENTITYREF_IN_EPILOG, \/* 16 *\/$/;"	e	enum:__anon44
XML_ERR_ENTITYREF_IN_PROLOG	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENTITYREF_IN_PROLOG, \/* 15 *\/$/;"	e	enum:__anon44
XML_ERR_ENTITYREF_NO_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENTITYREF_NO_NAME, \/* 22 *\/$/;"	e	enum:__anon44
XML_ERR_ENTITYREF_SEMICOL_MISSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENTITYREF_SEMICOL_MISSING, \/* 23 *\/$/;"	e	enum:__anon44
XML_ERR_ENTITY_BOUNDARY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENTITY_BOUNDARY, \/* 90 *\/$/;"	e	enum:__anon44
XML_ERR_ENTITY_CHAR_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENTITY_CHAR_ERROR, \/* 87 *\/$/;"	e	enum:__anon44
XML_ERR_ENTITY_IS_EXTERNAL	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENTITY_IS_EXTERNAL, \/* 29 *\/$/;"	e	enum:__anon44
XML_ERR_ENTITY_IS_PARAMETER	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENTITY_IS_PARAMETER, \/* 30 *\/$/;"	e	enum:__anon44
XML_ERR_ENTITY_LOOP	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENTITY_LOOP, \/* 89 *\/$/;"	e	enum:__anon44
XML_ERR_ENTITY_NOT_FINISHED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENTITY_NOT_FINISHED, \/* 37 *\/$/;"	e	enum:__anon44
XML_ERR_ENTITY_NOT_STARTED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENTITY_NOT_STARTED, \/* 36 *\/$/;"	e	enum:__anon44
XML_ERR_ENTITY_PE_INTERNAL	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENTITY_PE_INTERNAL, \/* 88 *\/$/;"	e	enum:__anon44
XML_ERR_ENTITY_PROCESSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ENTITY_PROCESSING, \/* 104 *\/$/;"	e	enum:__anon44
XML_ERR_EQUAL_REQUIRED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_EQUAL_REQUIRED, \/* 75 *\/$/;"	e	enum:__anon44
XML_ERR_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_ERROR = 2,		\/* A recoverable error *\/$/;"	e	enum:__anon42
XML_ERR_EXTRA_CONTENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_EXTRA_CONTENT, \/* 86 *\/$/;"	e	enum:__anon44
XML_ERR_EXT_ENTITY_STANDALONE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_EXT_ENTITY_STANDALONE, \/* 82 *\/$/;"	e	enum:__anon44
XML_ERR_EXT_SUBSET_NOT_FINISHED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_EXT_SUBSET_NOT_FINISHED, \/* 60 *\/$/;"	e	enum:__anon44
XML_ERR_FATAL	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_FATAL = 3		\/* A fatal error *\/$/;"	e	enum:__anon42
XML_ERR_GT_REQUIRED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_GT_REQUIRED, \/* 73 *\/$/;"	e	enum:__anon44
XML_ERR_HYPHEN_IN_COMMENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_HYPHEN_IN_COMMENT, \/* 80 *\/$/;"	e	enum:__anon44
XML_ERR_INTERNAL_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_INTERNAL_ERROR, \/* 1 *\/$/;"	e	enum:__anon44
XML_ERR_INVALID_CHAR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_INVALID_CHAR, \/* 9 *\/$/;"	e	enum:__anon44
XML_ERR_INVALID_CHARREF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_INVALID_CHARREF, \/* 8 *\/$/;"	e	enum:__anon44
XML_ERR_INVALID_DEC_CHARREF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_INVALID_DEC_CHARREF, \/* 7 *\/$/;"	e	enum:__anon44
XML_ERR_INVALID_ENCODING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_INVALID_ENCODING, \/* 81 *\/$/;"	e	enum:__anon44
XML_ERR_INVALID_HEX_CHARREF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_INVALID_HEX_CHARREF, \/* 6 *\/$/;"	e	enum:__anon44
XML_ERR_INVALID_URI	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_INVALID_URI, \/* 91 *\/$/;"	e	enum:__anon44
XML_ERR_LITERAL_NOT_FINISHED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_LITERAL_NOT_FINISHED, \/* 44 *\/$/;"	e	enum:__anon44
XML_ERR_LITERAL_NOT_STARTED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_LITERAL_NOT_STARTED, \/* 43 *\/$/;"	e	enum:__anon44
XML_ERR_LTSLASH_REQUIRED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_LTSLASH_REQUIRED, \/* 74 *\/$/;"	e	enum:__anon44
XML_ERR_LT_IN_ATTRIBUTE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_LT_IN_ATTRIBUTE, \/* 38 *\/$/;"	e	enum:__anon44
XML_ERR_LT_REQUIRED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_LT_REQUIRED, \/* 72 *\/$/;"	e	enum:__anon44
XML_ERR_MISPLACED_CDATA_END	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_MISPLACED_CDATA_END, \/* 62 *\/$/;"	e	enum:__anon44
XML_ERR_MISSING_ENCODING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_MISSING_ENCODING, \/* 101 *\/$/;"	e	enum:__anon44
XML_ERR_MIXED_NOT_FINISHED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_MIXED_NOT_FINISHED, \/* 53 *\/$/;"	e	enum:__anon44
XML_ERR_MIXED_NOT_STARTED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_MIXED_NOT_STARTED, \/* 52 *\/$/;"	e	enum:__anon44
XML_ERR_NAME_REQUIRED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_NAME_REQUIRED, \/* 68 *\/$/;"	e	enum:__anon44
XML_ERR_NMTOKEN_REQUIRED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_NMTOKEN_REQUIRED, \/* 67 *\/$/;"	e	enum:__anon44
XML_ERR_NONE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_NONE = 0,$/;"	e	enum:__anon42
XML_ERR_NOTATION_NOT_FINISHED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_NOTATION_NOT_FINISHED, \/* 49 *\/$/;"	e	enum:__anon44
XML_ERR_NOTATION_NOT_STARTED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_NOTATION_NOT_STARTED, \/* 48 *\/$/;"	e	enum:__anon44
XML_ERR_NOTATION_PROCESSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_NOTATION_PROCESSING, \/* 105 *\/$/;"	e	enum:__anon44
XML_ERR_NOT_STANDALONE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_NOT_STANDALONE, \/* 103 *\/$/;"	e	enum:__anon44
XML_ERR_NOT_WELL_BALANCED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_NOT_WELL_BALANCED, \/* 85 *\/$/;"	e	enum:__anon44
XML_ERR_NO_DTD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_NO_DTD, \/* 94 *\/$/;"	e	enum:__anon44
XML_ERR_NO_MEMORY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_NO_MEMORY, \/* 2 *\/$/;"	e	enum:__anon44
XML_ERR_NS_DECL_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_NS_DECL_ERROR, \/* 35 *\/$/;"	e	enum:__anon44
XML_ERR_OK	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_OK = 0,$/;"	e	enum:__anon44
XML_ERR_PCDATA_REQUIRED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_PCDATA_REQUIRED, \/* 69 *\/$/;"	e	enum:__anon44
XML_ERR_PEREF_AT_EOF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_PEREF_AT_EOF, \/* 18 *\/$/;"	e	enum:__anon44
XML_ERR_PEREF_IN_EPILOG	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_PEREF_IN_EPILOG, \/* 20 *\/$/;"	e	enum:__anon44
XML_ERR_PEREF_IN_INT_SUBSET	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_PEREF_IN_INT_SUBSET, \/* 21 *\/$/;"	e	enum:__anon44
XML_ERR_PEREF_IN_PROLOG	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_PEREF_IN_PROLOG, \/* 19 *\/$/;"	e	enum:__anon44
XML_ERR_PEREF_NO_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_PEREF_NO_NAME, \/* 24 *\/$/;"	e	enum:__anon44
XML_ERR_PEREF_SEMICOL_MISSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_PEREF_SEMICOL_MISSING, \/* 25 *\/$/;"	e	enum:__anon44
XML_ERR_PI_NOT_FINISHED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_PI_NOT_FINISHED, \/* 47 *\/$/;"	e	enum:__anon44
XML_ERR_PI_NOT_STARTED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_PI_NOT_STARTED, \/* 46 *\/$/;"	e	enum:__anon44
XML_ERR_PUBID_REQUIRED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_PUBID_REQUIRED, \/* 71 *\/$/;"	e	enum:__anon44
XML_ERR_RESERVED_XML_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_RESERVED_XML_NAME, \/* 64 *\/$/;"	e	enum:__anon44
XML_ERR_SEPARATOR_REQUIRED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_SEPARATOR_REQUIRED, \/* 66 *\/$/;"	e	enum:__anon44
XML_ERR_SPACE_REQUIRED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_SPACE_REQUIRED, \/* 65 *\/$/;"	e	enum:__anon44
XML_ERR_STANDALONE_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_STANDALONE_VALUE, \/* 78 *\/$/;"	e	enum:__anon44
XML_ERR_STRING_NOT_CLOSED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_STRING_NOT_CLOSED, \/* 34 *\/$/;"	e	enum:__anon44
XML_ERR_STRING_NOT_STARTED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_STRING_NOT_STARTED, \/* 33 *\/$/;"	e	enum:__anon44
XML_ERR_TAG_NAME_MISMATCH	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_TAG_NAME_MISMATCH, \/* 76 *\/$/;"	e	enum:__anon44
XML_ERR_TAG_NOT_FINISHED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_TAG_NOT_FINISHED, \/* 77 *\/$/;"	e	enum:__anon44
XML_ERR_UNDECLARED_ENTITY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_UNDECLARED_ENTITY, \/* 26 *\/$/;"	e	enum:__anon44
XML_ERR_UNKNOWN_ENCODING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_UNKNOWN_ENCODING, \/* 31 *\/$/;"	e	enum:__anon44
XML_ERR_UNKNOWN_VERSION	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_UNKNOWN_VERSION, \/* 108 *\/$/;"	e	enum:__anon44
XML_ERR_UNPARSED_ENTITY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_UNPARSED_ENTITY, \/* 28 *\/$/;"	e	enum:__anon44
XML_ERR_UNSUPPORTED_ENCODING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_UNSUPPORTED_ENCODING, \/* 32 *\/$/;"	e	enum:__anon44
XML_ERR_URI_FRAGMENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_URI_FRAGMENT, \/* 92 *\/$/;"	e	enum:__anon44
XML_ERR_URI_REQUIRED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_URI_REQUIRED, \/* 70 *\/$/;"	e	enum:__anon44
XML_ERR_VALUE_REQUIRED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_VALUE_REQUIRED, \/* 84 *\/$/;"	e	enum:__anon44
XML_ERR_VERSION_MISMATCH	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_VERSION_MISMATCH, \/* 109 *\/$/;"	e	enum:__anon44
XML_ERR_VERSION_MISSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_VERSION_MISSING, \/* 96 *\/$/;"	e	enum:__anon44
XML_ERR_WARNING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_WARNING = 1,	\/* A simple warning *\/$/;"	e	enum:__anon42
XML_ERR_XMLDECL_NOT_FINISHED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_XMLDECL_NOT_FINISHED, \/* 57 *\/$/;"	e	enum:__anon44
XML_ERR_XMLDECL_NOT_STARTED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_ERR_XMLDECL_NOT_STARTED, \/* 56 *\/$/;"	e	enum:__anon44
XML_EXP_ATOM	/usr/include/libxml2/libxml/xmlregexp.h	/^    XML_EXP_ATOM = 2,$/;"	e	enum:__anon19
XML_EXP_COUNT	/usr/include/libxml2/libxml/xmlregexp.h	/^    XML_EXP_COUNT = 5$/;"	e	enum:__anon19
XML_EXP_EMPTY	/usr/include/libxml2/libxml/xmlregexp.h	/^    XML_EXP_EMPTY = 0,$/;"	e	enum:__anon19
XML_EXP_FORBID	/usr/include/libxml2/libxml/xmlregexp.h	/^    XML_EXP_FORBID = 1,$/;"	e	enum:__anon19
XML_EXP_OR	/usr/include/libxml2/libxml/xmlregexp.h	/^    XML_EXP_OR = 4,$/;"	e	enum:__anon19
XML_EXP_SEQ	/usr/include/libxml2/libxml/xmlregexp.h	/^    XML_EXP_SEQ = 3,$/;"	e	enum:__anon19
XML_EXTERNAL_GENERAL_PARSED_ENTITY	/usr/include/libxml2/libxml/entities.h	/^    XML_EXTERNAL_GENERAL_PARSED_ENTITY = 2,$/;"	e	enum:__anon34
XML_EXTERNAL_GENERAL_UNPARSED_ENTITY	/usr/include/libxml2/libxml/entities.h	/^    XML_EXTERNAL_GENERAL_UNPARSED_ENTITY = 3,$/;"	e	enum:__anon34
XML_EXTERNAL_PARAMETER_ENTITY	/usr/include/libxml2/libxml/entities.h	/^    XML_EXTERNAL_PARAMETER_ENTITY = 5,$/;"	e	enum:__anon34
XML_FROM_C14N	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_C14N,	\/* The Canonicalization module *\/$/;"	e	enum:__anon43
XML_FROM_CATALOG	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_CATALOG,	\/* The Catalog module *\/$/;"	e	enum:__anon43
XML_FROM_CHECK	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_CHECK,	\/* The error checking module *\/$/;"	e	enum:__anon43
XML_FROM_DATATYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_DATATYPE,	\/* The W3C XML Schemas Datatype module *\/$/;"	e	enum:__anon43
XML_FROM_DTD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_DTD,	\/* The XML DTD validation with parser context*\/$/;"	e	enum:__anon43
XML_FROM_FTP	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_FTP,	\/* The FTP module *\/$/;"	e	enum:__anon43
XML_FROM_HTML	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_HTML,	\/* The HTML parser *\/$/;"	e	enum:__anon43
XML_FROM_HTTP	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_HTTP,	\/* The HTTP module *\/$/;"	e	enum:__anon43
XML_FROM_I18N	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_I18N,	\/* The module handling character conversion *\/$/;"	e	enum:__anon43
XML_FROM_IO	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_IO,	\/* The Input\/Output stack *\/$/;"	e	enum:__anon43
XML_FROM_MEMORY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_MEMORY,	\/* The memory allocator *\/$/;"	e	enum:__anon43
XML_FROM_MODULE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_MODULE,	\/* The dynamically loaded module module*\/$/;"	e	enum:__anon43
XML_FROM_NAMESPACE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_NAMESPACE,	\/* The XML Namespace module *\/$/;"	e	enum:__anon43
XML_FROM_NONE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_NONE = 0,$/;"	e	enum:__anon43
XML_FROM_OUTPUT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_OUTPUT,	\/* The serialization code *\/$/;"	e	enum:__anon43
XML_FROM_PARSER	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_PARSER,	\/* The XML parser *\/$/;"	e	enum:__anon43
XML_FROM_REGEXP	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_REGEXP,	\/* The regular expressions module *\/$/;"	e	enum:__anon43
XML_FROM_RELAXNGP	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_RELAXNGP,	\/* The Relax-NG parser module *\/$/;"	e	enum:__anon43
XML_FROM_RELAXNGV	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_RELAXNGV,	\/* The Relax-NG validator module *\/$/;"	e	enum:__anon43
XML_FROM_SCHEMASP	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_SCHEMASP,	\/* The W3C XML Schemas parser module *\/$/;"	e	enum:__anon43
XML_FROM_SCHEMASV	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_SCHEMASV,	\/* The W3C XML Schemas validation module *\/$/;"	e	enum:__anon43
XML_FROM_SCHEMATRONV	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_SCHEMATRONV	\/* The Schematron validator module *\/$/;"	e	enum:__anon43
XML_FROM_TREE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_TREE,	\/* The tree module *\/$/;"	e	enum:__anon43
XML_FROM_VALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_VALID,	\/* The XML DTD validation with valid context *\/$/;"	e	enum:__anon43
XML_FROM_WRITER	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_WRITER,	\/* The xmlwriter module *\/$/;"	e	enum:__anon43
XML_FROM_XINCLUDE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_XINCLUDE,	\/* The XInclude processing *\/$/;"	e	enum:__anon43
XML_FROM_XPATH	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_XPATH,	\/* The XPath module *\/$/;"	e	enum:__anon43
XML_FROM_XPOINTER	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_XPOINTER,	\/* The XPointer module *\/$/;"	e	enum:__anon43
XML_FROM_XSLT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FROM_XSLT,	\/* The XSLT engine from libxslt *\/$/;"	e	enum:__anon43
XML_FTP_ACCNT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FTP_ACCNT, \/* 2002 *\/$/;"	e	enum:__anon44
XML_FTP_EPSV_ANSWER	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FTP_EPSV_ANSWER, \/* 2001 *\/$/;"	e	enum:__anon44
XML_FTP_PASV_ANSWER	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FTP_PASV_ANSWER = 2000,$/;"	e	enum:__anon44
XML_FTP_URL_SYNTAX	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_FTP_URL_SYNTAX, \/* 2003 *\/$/;"	e	enum:__anon44
XML_GET_CONTENT	/usr/include/libxml2/libxml/tree.h	477;"	d
XML_GET_LINE	/usr/include/libxml2/libxml/tree.h	485;"	d
XML_HTML_DOCUMENT_NODE	/usr/include/libxml2/libxml/tree.h	/^    XML_HTML_DOCUMENT_NODE=	13,$/;"	e	enum:__anon24
XML_HTML_STRUCURE_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_HTML_STRUCURE_ERROR = 800,$/;"	e	enum:__anon44
XML_HTML_UNKNOWN_TAG	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_HTML_UNKNOWN_TAG, \/* 801 *\/$/;"	e	enum:__anon44
XML_HTTP_UNKNOWN_HOST	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_HTTP_UNKNOWN_HOST, \/* 2022 *\/$/;"	e	enum:__anon44
XML_HTTP_URL_SYNTAX	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_HTTP_URL_SYNTAX = 2020,$/;"	e	enum:__anon44
XML_HTTP_USE_IP	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_HTTP_USE_IP, \/* 2021 *\/$/;"	e	enum:__anon44
XML_I18N_CONV_FAILED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_I18N_CONV_FAILED, \/* 6003 *\/$/;"	e	enum:__anon44
XML_I18N_EXCESS_HANDLER	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_I18N_EXCESS_HANDLER, \/* 6002 *\/$/;"	e	enum:__anon44
XML_I18N_NO_HANDLER	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_I18N_NO_HANDLER, \/* 6001 *\/$/;"	e	enum:__anon44
XML_I18N_NO_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_I18N_NO_NAME = 6000,$/;"	e	enum:__anon44
XML_I18N_NO_OUTPUT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_I18N_NO_OUTPUT \/* 6004 *\/$/;"	e	enum:__anon44
XML_INTERNAL_GENERAL_ENTITY	/usr/include/libxml2/libxml/entities.h	/^    XML_INTERNAL_GENERAL_ENTITY = 1,$/;"	e	enum:__anon34
XML_INTERNAL_PARAMETER_ENTITY	/usr/include/libxml2/libxml/entities.h	/^    XML_INTERNAL_PARAMETER_ENTITY = 4,$/;"	e	enum:__anon34
XML_INTERNAL_PREDEFINED_ENTITY	/usr/include/libxml2/libxml/entities.h	/^    XML_INTERNAL_PREDEFINED_ENTITY = 6$/;"	e	enum:__anon34
XML_IO_BUFFER_FULL	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_BUFFER_FULL, \/* 1548 *\/$/;"	e	enum:__anon44
XML_IO_EACCES	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EACCES, \/* 1501 *\/$/;"	e	enum:__anon44
XML_IO_EADDRINUSE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EADDRINUSE, \/* 1554 *\/$/;"	e	enum:__anon44
XML_IO_EAFNOSUPPORT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EAFNOSUPPORT, \/* 1556 *\/$/;"	e	enum:__anon44
XML_IO_EAGAIN	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EAGAIN, \/* 1502 *\/$/;"	e	enum:__anon44
XML_IO_EALREADY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EALREADY, \/* 1555 *\/$/;"	e	enum:__anon44
XML_IO_EBADF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EBADF, \/* 1503 *\/$/;"	e	enum:__anon44
XML_IO_EBADMSG	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EBADMSG, \/* 1504 *\/$/;"	e	enum:__anon44
XML_IO_EBUSY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EBUSY, \/* 1505 *\/$/;"	e	enum:__anon44
XML_IO_ECANCELED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ECANCELED, \/* 1506 *\/$/;"	e	enum:__anon44
XML_IO_ECHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ECHILD, \/* 1507 *\/$/;"	e	enum:__anon44
XML_IO_ECONNREFUSED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ECONNREFUSED, \/* 1552 *\/$/;"	e	enum:__anon44
XML_IO_EDEADLK	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EDEADLK, \/* 1508 *\/$/;"	e	enum:__anon44
XML_IO_EDOM	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EDOM, \/* 1509 *\/$/;"	e	enum:__anon44
XML_IO_EEXIST	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EEXIST, \/* 1510 *\/$/;"	e	enum:__anon44
XML_IO_EFAULT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EFAULT, \/* 1511 *\/$/;"	e	enum:__anon44
XML_IO_EFBIG	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EFBIG, \/* 1512 *\/$/;"	e	enum:__anon44
XML_IO_EINPROGRESS	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EINPROGRESS, \/* 1513 *\/$/;"	e	enum:__anon44
XML_IO_EINTR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EINTR, \/* 1514 *\/$/;"	e	enum:__anon44
XML_IO_EINVAL	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EINVAL, \/* 1515 *\/$/;"	e	enum:__anon44
XML_IO_EIO	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EIO, \/* 1516 *\/$/;"	e	enum:__anon44
XML_IO_EISCONN	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EISCONN, \/* 1551 *\/$/;"	e	enum:__anon44
XML_IO_EISDIR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EISDIR, \/* 1517 *\/$/;"	e	enum:__anon44
XML_IO_EMFILE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EMFILE, \/* 1518 *\/$/;"	e	enum:__anon44
XML_IO_EMLINK	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EMLINK, \/* 1519 *\/$/;"	e	enum:__anon44
XML_IO_EMSGSIZE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EMSGSIZE, \/* 1520 *\/$/;"	e	enum:__anon44
XML_IO_ENAMETOOLONG	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENAMETOOLONG, \/* 1521 *\/$/;"	e	enum:__anon44
XML_IO_ENCODER	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENCODER, \/* 1544 *\/$/;"	e	enum:__anon44
XML_IO_ENETUNREACH	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENETUNREACH, \/* 1553 *\/$/;"	e	enum:__anon44
XML_IO_ENFILE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENFILE, \/* 1522 *\/$/;"	e	enum:__anon44
XML_IO_ENODEV	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENODEV, \/* 1523 *\/$/;"	e	enum:__anon44
XML_IO_ENOENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENOENT, \/* 1524 *\/$/;"	e	enum:__anon44
XML_IO_ENOEXEC	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENOEXEC, \/* 1525 *\/$/;"	e	enum:__anon44
XML_IO_ENOLCK	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENOLCK, \/* 1526 *\/$/;"	e	enum:__anon44
XML_IO_ENOMEM	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENOMEM, \/* 1527 *\/$/;"	e	enum:__anon44
XML_IO_ENOSPC	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENOSPC, \/* 1528 *\/$/;"	e	enum:__anon44
XML_IO_ENOSYS	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENOSYS, \/* 1529 *\/$/;"	e	enum:__anon44
XML_IO_ENOTDIR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENOTDIR, \/* 1530 *\/$/;"	e	enum:__anon44
XML_IO_ENOTEMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENOTEMPTY, \/* 1531 *\/$/;"	e	enum:__anon44
XML_IO_ENOTSOCK	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENOTSOCK, \/* 1550 *\/$/;"	e	enum:__anon44
XML_IO_ENOTSUP	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENOTSUP, \/* 1532 *\/$/;"	e	enum:__anon44
XML_IO_ENOTTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENOTTY, \/* 1533 *\/$/;"	e	enum:__anon44
XML_IO_ENXIO	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ENXIO, \/* 1534 *\/$/;"	e	enum:__anon44
XML_IO_EPERM	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EPERM, \/* 1535 *\/$/;"	e	enum:__anon44
XML_IO_EPIPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EPIPE, \/* 1536 *\/$/;"	e	enum:__anon44
XML_IO_ERANGE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ERANGE, \/* 1537 *\/$/;"	e	enum:__anon44
XML_IO_EROFS	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EROFS, \/* 1538 *\/$/;"	e	enum:__anon44
XML_IO_ESPIPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ESPIPE, \/* 1539 *\/$/;"	e	enum:__anon44
XML_IO_ESRCH	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ESRCH, \/* 1540 *\/$/;"	e	enum:__anon44
XML_IO_ETIMEDOUT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_ETIMEDOUT, \/* 1541 *\/$/;"	e	enum:__anon44
XML_IO_EXDEV	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_EXDEV, \/* 1542 *\/$/;"	e	enum:__anon44
XML_IO_FLUSH	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_FLUSH, \/* 1545 *\/$/;"	e	enum:__anon44
XML_IO_LOAD_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_LOAD_ERROR, \/* 1549 *\/$/;"	e	enum:__anon44
XML_IO_NETWORK_ATTEMPT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_NETWORK_ATTEMPT, \/* 1543 *\/$/;"	e	enum:__anon44
XML_IO_NO_INPUT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_NO_INPUT, \/* 1547 *\/$/;"	e	enum:__anon44
XML_IO_UNKNOWN	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_UNKNOWN = 1500,$/;"	e	enum:__anon44
XML_IO_WRITE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_IO_WRITE, \/* 1546 *\/$/;"	e	enum:__anon44
XML_LOCAL_NAMESPACE	/usr/include/libxml2/libxml/tree.h	336;"	d
XML_MAX_NAMELEN	/usr/include/libxml2/libxml/parserInternals.h	48;"	d
XML_MAX_TEXT_LENGTH	/usr/include/libxml2/libxml/parserInternals.h	40;"	d
XML_MODULE_CLOSE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_MODULE_CLOSE, \/* 4901 *\/$/;"	e	enum:__anon44
XML_MODULE_LAZY	/usr/include/libxml2/libxml/xmlmodule.h	/^    XML_MODULE_LAZY = 1,	\/* lazy binding *\/$/;"	e	enum:__anon20
XML_MODULE_LOCAL	/usr/include/libxml2/libxml/xmlmodule.h	/^    XML_MODULE_LOCAL= 2		\/* local binding *\/$/;"	e	enum:__anon20
XML_MODULE_OPEN	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_MODULE_OPEN = 4900, \/* 4900 *\/$/;"	e	enum:__anon44
XML_NAMESPACE_DECL	/usr/include/libxml2/libxml/tree.h	/^    XML_NAMESPACE_DECL=		18,$/;"	e	enum:__anon24
XML_NOTATION_NODE	/usr/include/libxml2/libxml/tree.h	/^    XML_NOTATION_NODE=		12,$/;"	e	enum:__anon24
XML_NS_ERR_ATTRIBUTE_REDEFINED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_NS_ERR_ATTRIBUTE_REDEFINED, \/* 203 *\/$/;"	e	enum:__anon44
XML_NS_ERR_COLON	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_NS_ERR_COLON, \/* 205 *\/$/;"	e	enum:__anon44
XML_NS_ERR_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_NS_ERR_EMPTY, \/* 204 *\/$/;"	e	enum:__anon44
XML_NS_ERR_QNAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_NS_ERR_QNAME, \/* 202 *\/$/;"	e	enum:__anon44
XML_NS_ERR_UNDEFINED_NAMESPACE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_NS_ERR_UNDEFINED_NAMESPACE, \/* 201 *\/$/;"	e	enum:__anon44
XML_NS_ERR_XML_NAMESPACE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_NS_ERR_XML_NAMESPACE = 200,$/;"	e	enum:__anon44
XML_PARSER_ATTRIBUTE_VALUE	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_ATTRIBUTE_VALUE,	\/* within an attribute value *\/$/;"	e	enum:__anon6
XML_PARSER_CDATA_SECTION	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_CDATA_SECTION,	\/* within a CDATA section *\/$/;"	e	enum:__anon6
XML_PARSER_COMMENT	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_COMMENT,		\/* within a comment *\/$/;"	e	enum:__anon6
XML_PARSER_CONTENT	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_CONTENT,		\/* within the content *\/$/;"	e	enum:__anon6
XML_PARSER_DEFAULTATTRS	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_PARSER_DEFAULTATTRS = 2,$/;"	e	enum:__anon15
XML_PARSER_DTD	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_DTD,		\/* within some DTD content *\/$/;"	e	enum:__anon6
XML_PARSER_END_TAG	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_END_TAG,		\/* within a closing tag *\/$/;"	e	enum:__anon6
XML_PARSER_ENTITY_DECL	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_ENTITY_DECL,	\/* within an entity declaration *\/$/;"	e	enum:__anon6
XML_PARSER_ENTITY_VALUE	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_ENTITY_VALUE,	\/* within an entity value in a decl *\/$/;"	e	enum:__anon6
XML_PARSER_EOF	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_EOF = -1,	\/* nothing is to be parsed *\/$/;"	e	enum:__anon6
XML_PARSER_EPILOG	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_EPILOG, 		\/* the Misc* after the last end tag *\/$/;"	e	enum:__anon6
XML_PARSER_IGNORE	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_IGNORE,		\/* within an IGNORED section *\/$/;"	e	enum:__anon6
XML_PARSER_LOADDTD	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_PARSER_LOADDTD = 1,$/;"	e	enum:__anon15
XML_PARSER_MISC	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_MISC,		\/* Misc* before int subset *\/$/;"	e	enum:__anon6
XML_PARSER_PI	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_PI,		\/* Within a processing instruction *\/$/;"	e	enum:__anon6
XML_PARSER_PROLOG	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_PROLOG,		\/* Misc* after internal subset *\/$/;"	e	enum:__anon6
XML_PARSER_PUBLIC_LITERAL	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_PUBLIC_LITERAL 	\/* within a PUBLIC value *\/$/;"	e	enum:__anon6
XML_PARSER_SEVERITY_ERROR	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_PARSER_SEVERITY_ERROR = 4$/;"	e	enum:__anon13
XML_PARSER_SEVERITY_VALIDITY_ERROR	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_PARSER_SEVERITY_VALIDITY_ERROR = 2,$/;"	e	enum:__anon13
XML_PARSER_SEVERITY_VALIDITY_WARNING	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_PARSER_SEVERITY_VALIDITY_WARNING = 1,$/;"	e	enum:__anon13
XML_PARSER_SEVERITY_WARNING	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_PARSER_SEVERITY_WARNING = 3,$/;"	e	enum:__anon13
XML_PARSER_START	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_START = 0,	\/* nothing has been parsed *\/$/;"	e	enum:__anon6
XML_PARSER_START_TAG	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_START_TAG,	\/* within a start tag *\/$/;"	e	enum:__anon6
XML_PARSER_SUBST_ENTITIES	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_PARSER_SUBST_ENTITIES = 4$/;"	e	enum:__anon15
XML_PARSER_SYSTEM_LITERAL	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSER_SYSTEM_LITERAL,	\/* within a SYSTEM value *\/$/;"	e	enum:__anon6
XML_PARSER_VALIDATE	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_PARSER_VALIDATE = 3,$/;"	e	enum:__anon15
XML_PARSE_COMPACT	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_COMPACT   = 1<<16,\/* compact small text nodes; no modification of$/;"	e	enum:__anon8
XML_PARSE_DOM	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_DOM = 1,$/;"	e	enum:__anon7
XML_PARSE_DTDATTR	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_DTDATTR	= 1<<3,	\/* default DTD attributes *\/$/;"	e	enum:__anon8
XML_PARSE_DTDLOAD	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_DTDLOAD	= 1<<2,	\/* load the external subset *\/$/;"	e	enum:__anon8
XML_PARSE_DTDVALID	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_DTDVALID	= 1<<4,	\/* validate with the DTD *\/$/;"	e	enum:__anon8
XML_PARSE_HUGE	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_HUGE      = 1<<19,\/* relax any hardcoded limit from the parser *\/$/;"	e	enum:__anon8
XML_PARSE_IGNORE_ENC	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_IGNORE_ENC= 1<<21 \/* ignore internal document encoding hint *\/$/;"	e	enum:__anon8
XML_PARSE_NOBASEFIX	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_NOBASEFIX = 1<<18,\/* do not fixup XINCLUDE xml:base uris *\/$/;"	e	enum:__anon8
XML_PARSE_NOBLANKS	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_NOBLANKS	= 1<<8,	\/* remove blank nodes *\/$/;"	e	enum:__anon8
XML_PARSE_NOCDATA	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_NOCDATA	= 1<<14,\/* merge CDATA as text nodes *\/$/;"	e	enum:__anon8
XML_PARSE_NODICT	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_NODICT	= 1<<12,\/* Do not reuse the context dictionnary *\/$/;"	e	enum:__anon8
XML_PARSE_NOENT	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_NOENT	= 1<<1,	\/* substitute entities *\/$/;"	e	enum:__anon8
XML_PARSE_NOERROR	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_NOERROR	= 1<<5,	\/* suppress error reports *\/$/;"	e	enum:__anon8
XML_PARSE_NONET	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_NONET	= 1<<11,\/* Forbid network access *\/$/;"	e	enum:__anon8
XML_PARSE_NOWARNING	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_NOWARNING	= 1<<6,	\/* suppress warning reports *\/$/;"	e	enum:__anon8
XML_PARSE_NOXINCNODE	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_NOXINCNODE= 1<<15,\/* do not generate XINCLUDE START\/END nodes *\/$/;"	e	enum:__anon8
XML_PARSE_NSCLEAN	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_NSCLEAN	= 1<<13,\/* remove redundant namespaces declarations *\/$/;"	e	enum:__anon8
XML_PARSE_OLD10	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_OLD10	= 1<<17,\/* parse using XML-1.0 before update 5 *\/$/;"	e	enum:__anon8
XML_PARSE_OLDSAX	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_OLDSAX    = 1<<20,\/* parse using SAX2 interface before 2.7.0 *\/$/;"	e	enum:__anon8
XML_PARSE_PEDANTIC	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_PEDANTIC	= 1<<7,	\/* pedantic error reporting *\/$/;"	e	enum:__anon8
XML_PARSE_PUSH_DOM	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_PUSH_DOM = 3,$/;"	e	enum:__anon7
XML_PARSE_PUSH_SAX	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_PUSH_SAX = 4,$/;"	e	enum:__anon7
XML_PARSE_READER	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_READER = 5$/;"	e	enum:__anon7
XML_PARSE_RECOVER	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_RECOVER	= 1<<0,	\/* recover on errors *\/$/;"	e	enum:__anon8
XML_PARSE_SAX	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_SAX = 2,$/;"	e	enum:__anon7
XML_PARSE_SAX1	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_SAX1	= 1<<9,	\/* use the SAX1 interface internally *\/$/;"	e	enum:__anon8
XML_PARSE_UNKNOWN	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_UNKNOWN = 0,$/;"	e	enum:__anon7
XML_PARSE_XINCLUDE	/usr/include/libxml2/libxml/parser.h	/^    XML_PARSE_XINCLUDE	= 1<<10,\/* Implement XInclude substitition  *\/$/;"	e	enum:__anon8
XML_PATTERN_DEFAULT	/usr/include/libxml2/libxml/pattern.h	/^    XML_PATTERN_DEFAULT		= 0,	\/* simple pattern match *\/$/;"	e	enum:__anon40
XML_PATTERN_XPATH	/usr/include/libxml2/libxml/pattern.h	/^    XML_PATTERN_XPATH		= 1<<0,	\/* standard XPath pattern *\/$/;"	e	enum:__anon40
XML_PATTERN_XSFIELD	/usr/include/libxml2/libxml/pattern.h	/^    XML_PATTERN_XSFIELD		= 1<<2	\/* XPath subset for schema field *\/$/;"	e	enum:__anon40
XML_PATTERN_XSSEL	/usr/include/libxml2/libxml/pattern.h	/^    XML_PATTERN_XSSEL		= 1<<1,	\/* XPath subset for schema selector *\/$/;"	e	enum:__anon40
XML_PI_NODE	/usr/include/libxml2/libxml/tree.h	/^    XML_PI_NODE=		7,$/;"	e	enum:__anon24
XML_READER_TYPE_ATTRIBUTE	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_ATTRIBUTE = 2,$/;"	e	enum:__anon16
XML_READER_TYPE_CDATA	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_CDATA = 4,$/;"	e	enum:__anon16
XML_READER_TYPE_COMMENT	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_COMMENT = 8,$/;"	e	enum:__anon16
XML_READER_TYPE_DOCUMENT	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_DOCUMENT = 9,$/;"	e	enum:__anon16
XML_READER_TYPE_DOCUMENT_FRAGMENT	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_DOCUMENT_FRAGMENT = 11,$/;"	e	enum:__anon16
XML_READER_TYPE_DOCUMENT_TYPE	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_DOCUMENT_TYPE = 10,$/;"	e	enum:__anon16
XML_READER_TYPE_ELEMENT	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_ELEMENT = 1,$/;"	e	enum:__anon16
XML_READER_TYPE_END_ELEMENT	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_END_ELEMENT = 15,$/;"	e	enum:__anon16
XML_READER_TYPE_END_ENTITY	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_END_ENTITY = 16,$/;"	e	enum:__anon16
XML_READER_TYPE_ENTITY	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_ENTITY = 6,$/;"	e	enum:__anon16
XML_READER_TYPE_ENTITY_REFERENCE	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_ENTITY_REFERENCE = 5,$/;"	e	enum:__anon16
XML_READER_TYPE_NONE	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_NONE = 0,$/;"	e	enum:__anon16
XML_READER_TYPE_NOTATION	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_NOTATION = 12,$/;"	e	enum:__anon16
XML_READER_TYPE_PROCESSING_INSTRUCTION	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_PROCESSING_INSTRUCTION = 7,$/;"	e	enum:__anon16
XML_READER_TYPE_SIGNIFICANT_WHITESPACE	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_SIGNIFICANT_WHITESPACE = 14,$/;"	e	enum:__anon16
XML_READER_TYPE_TEXT	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_TEXT = 3,$/;"	e	enum:__anon16
XML_READER_TYPE_WHITESPACE	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_WHITESPACE = 13,$/;"	e	enum:__anon16
XML_READER_TYPE_XML_DECLARATION	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_READER_TYPE_XML_DECLARATION = 17$/;"	e	enum:__anon16
XML_REGEXP_COMPILE_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_REGEXP_COMPILE_ERROR = 1450,$/;"	e	enum:__anon44
XML_RELAXNGP_CRNG	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNGP_CRNG = 2$/;"	e	enum:__anon2
XML_RELAXNGP_FREE_DOC	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNGP_FREE_DOC = 1,$/;"	e	enum:__anon2
XML_RELAXNGP_NONE	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNGP_NONE = 0,$/;"	e	enum:__anon2
XML_RELAXNG_ERR_ATTREXTRANS	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ATTREXTRANS,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_ATTRNAME	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ATTRNAME,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_ATTRNONS	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ATTRNONS,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_ATTRVALID	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ATTRVALID,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_ATTRWRONGNS	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ATTRWRONGNS,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_CONTENTVALID	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_CONTENTVALID,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_DATAELEM	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_DATAELEM,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_DATATYPE	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_DATATYPE,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_DUPID	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_DUPID,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_ELEMEXTRANS	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ELEMEXTRANS,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_ELEMNAME	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ELEMNAME,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_ELEMNONS	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ELEMNONS,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_ELEMNOTEMPTY	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ELEMNOTEMPTY,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_ELEMWRONG	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ELEMWRONG,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_ELEMWRONGNS	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_ELEMWRONGNS,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_EXTRACONTENT	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_EXTRACONTENT,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_EXTRADATA	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_EXTRADATA,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_INTEREXTRA	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_INTEREXTRA,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_INTERNAL	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_INTERNAL,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_INTERNODATA	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_INTERNODATA,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_INTERSEQ	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_INTERSEQ,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_INVALIDATTR	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_INVALIDATTR,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_LACKDATA	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_LACKDATA,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_LIST	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_LIST,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_LISTELEM	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_LISTELEM,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_LISTEMPTY	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_LISTEMPTY,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_LISTEXTRA	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_LISTEXTRA,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_MEMORY	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_MEMORY,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_NODEFINE	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_NODEFINE,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_NOELEM	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_NOELEM,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_NOGRAMMAR	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_NOGRAMMAR,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_NOSTATE	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_NOSTATE,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_NOTELEM	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_NOTELEM,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_TEXTWRONG	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_TEXTWRONG$/;"	e	enum:__anon1
XML_RELAXNG_ERR_TYPE	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_TYPE,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_TYPECMP	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_TYPECMP,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_TYPEVAL	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_TYPEVAL,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_VALELEM	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_VALELEM,$/;"	e	enum:__anon1
XML_RELAXNG_ERR_VALUE	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_ERR_VALUE,$/;"	e	enum:__anon1
XML_RELAXNG_OK	/usr/include/libxml2/libxml/relaxng.h	/^    XML_RELAXNG_OK = 0,$/;"	e	enum:__anon1
XML_RNGP_ANYNAME_ATTR_ANCESTOR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_ANYNAME_ATTR_ANCESTOR = 1000,$/;"	e	enum:__anon44
XML_RNGP_ATTRIBUTE_CHILDREN	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_ATTRIBUTE_CHILDREN, \/* 1002 *\/$/;"	e	enum:__anon44
XML_RNGP_ATTRIBUTE_CONTENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_ATTRIBUTE_CONTENT, \/* 1003 *\/$/;"	e	enum:__anon44
XML_RNGP_ATTRIBUTE_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_ATTRIBUTE_EMPTY, \/* 1004 *\/$/;"	e	enum:__anon44
XML_RNGP_ATTRIBUTE_NOOP	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_ATTRIBUTE_NOOP, \/* 1005 *\/$/;"	e	enum:__anon44
XML_RNGP_ATTR_CONFLICT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_ATTR_CONFLICT, \/* 1001 *\/$/;"	e	enum:__anon44
XML_RNGP_CHOICE_CONTENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_CHOICE_CONTENT, \/* 1006 *\/$/;"	e	enum:__anon44
XML_RNGP_CHOICE_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_CHOICE_EMPTY, \/* 1007 *\/$/;"	e	enum:__anon44
XML_RNGP_CREATE_FAILURE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_CREATE_FAILURE, \/* 1008 *\/$/;"	e	enum:__anon44
XML_RNGP_DATA_CONTENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_DATA_CONTENT, \/* 1009 *\/$/;"	e	enum:__anon44
XML_RNGP_DEFINE_CREATE_FAILED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_DEFINE_CREATE_FAILED, \/* 1011 *\/$/;"	e	enum:__anon44
XML_RNGP_DEFINE_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_DEFINE_EMPTY, \/* 1012 *\/$/;"	e	enum:__anon44
XML_RNGP_DEFINE_MISSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_DEFINE_MISSING, \/* 1013 *\/$/;"	e	enum:__anon44
XML_RNGP_DEFINE_NAME_MISSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_DEFINE_NAME_MISSING, \/* 1014 *\/$/;"	e	enum:__anon44
XML_RNGP_DEF_CHOICE_AND_INTERLEAVE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_DEF_CHOICE_AND_INTERLEAVE, \/* 1010 *\/$/;"	e	enum:__anon44
XML_RNGP_ELEMENT_CONTENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_ELEMENT_CONTENT, \/* 1018 *\/$/;"	e	enum:__anon44
XML_RNGP_ELEMENT_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_ELEMENT_EMPTY, \/* 1017 *\/$/;"	e	enum:__anon44
XML_RNGP_ELEMENT_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_ELEMENT_NAME, \/* 1019 *\/$/;"	e	enum:__anon44
XML_RNGP_ELEMENT_NO_CONTENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_ELEMENT_NO_CONTENT, \/* 1020 *\/$/;"	e	enum:__anon44
XML_RNGP_ELEM_CONTENT_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_ELEM_CONTENT_EMPTY, \/* 1015 *\/$/;"	e	enum:__anon44
XML_RNGP_ELEM_CONTENT_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_ELEM_CONTENT_ERROR, \/* 1016 *\/$/;"	e	enum:__anon44
XML_RNGP_ELEM_TEXT_CONFLICT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_ELEM_TEXT_CONFLICT, \/* 1021 *\/$/;"	e	enum:__anon44
XML_RNGP_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_EMPTY, \/* 1022 *\/$/;"	e	enum:__anon44
XML_RNGP_EMPTY_CONSTRUCT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_EMPTY_CONSTRUCT, \/* 1023 *\/$/;"	e	enum:__anon44
XML_RNGP_EMPTY_CONTENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_EMPTY_CONTENT, \/* 1024 *\/$/;"	e	enum:__anon44
XML_RNGP_EMPTY_NOT_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_EMPTY_NOT_EMPTY, \/* 1025 *\/$/;"	e	enum:__anon44
XML_RNGP_ERROR_TYPE_LIB	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_ERROR_TYPE_LIB, \/* 1026 *\/$/;"	e	enum:__anon44
XML_RNGP_EXCEPT_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_EXCEPT_EMPTY, \/* 1027 *\/$/;"	e	enum:__anon44
XML_RNGP_EXCEPT_MISSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_EXCEPT_MISSING, \/* 1028 *\/$/;"	e	enum:__anon44
XML_RNGP_EXCEPT_MULTIPLE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_EXCEPT_MULTIPLE, \/* 1029 *\/$/;"	e	enum:__anon44
XML_RNGP_EXCEPT_NO_CONTENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_EXCEPT_NO_CONTENT, \/* 1030 *\/$/;"	e	enum:__anon44
XML_RNGP_EXTERNALREF_EMTPY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_EXTERNALREF_EMTPY, \/* 1031 *\/$/;"	e	enum:__anon44
XML_RNGP_EXTERNALREF_RECURSE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_EXTERNALREF_RECURSE, \/* 1033 *\/$/;"	e	enum:__anon44
XML_RNGP_EXTERNAL_REF_FAILURE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_EXTERNAL_REF_FAILURE, \/* 1032 *\/$/;"	e	enum:__anon44
XML_RNGP_FORBIDDEN_ATTRIBUTE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_FORBIDDEN_ATTRIBUTE, \/* 1034 *\/$/;"	e	enum:__anon44
XML_RNGP_FOREIGN_ELEMENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_FOREIGN_ELEMENT, \/* 1035 *\/$/;"	e	enum:__anon44
XML_RNGP_GRAMMAR_CONTENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_GRAMMAR_CONTENT, \/* 1036 *\/$/;"	e	enum:__anon44
XML_RNGP_GRAMMAR_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_GRAMMAR_EMPTY, \/* 1037 *\/$/;"	e	enum:__anon44
XML_RNGP_GRAMMAR_MISSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_GRAMMAR_MISSING, \/* 1038 *\/$/;"	e	enum:__anon44
XML_RNGP_GRAMMAR_NO_START	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_GRAMMAR_NO_START, \/* 1039 *\/$/;"	e	enum:__anon44
XML_RNGP_GROUP_ATTR_CONFLICT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_GROUP_ATTR_CONFLICT, \/* 1040 *\/$/;"	e	enum:__anon44
XML_RNGP_HREF_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_HREF_ERROR, \/* 1041 *\/$/;"	e	enum:__anon44
XML_RNGP_INCLUDE_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_INCLUDE_EMPTY, \/* 1042 *\/$/;"	e	enum:__anon44
XML_RNGP_INCLUDE_FAILURE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_INCLUDE_FAILURE, \/* 1043 *\/$/;"	e	enum:__anon44
XML_RNGP_INCLUDE_RECURSE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_INCLUDE_RECURSE, \/* 1044 *\/$/;"	e	enum:__anon44
XML_RNGP_INTERLEAVE_ADD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_INTERLEAVE_ADD, \/* 1045 *\/$/;"	e	enum:__anon44
XML_RNGP_INTERLEAVE_CREATE_FAILED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_INTERLEAVE_CREATE_FAILED, \/* 1046 *\/$/;"	e	enum:__anon44
XML_RNGP_INTERLEAVE_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_INTERLEAVE_EMPTY, \/* 1047 *\/$/;"	e	enum:__anon44
XML_RNGP_INTERLEAVE_NO_CONTENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_INTERLEAVE_NO_CONTENT, \/* 1048 *\/$/;"	e	enum:__anon44
XML_RNGP_INVALID_DEFINE_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_INVALID_DEFINE_NAME, \/* 1049 *\/$/;"	e	enum:__anon44
XML_RNGP_INVALID_URI	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_INVALID_URI, \/* 1050 *\/$/;"	e	enum:__anon44
XML_RNGP_INVALID_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_INVALID_VALUE, \/* 1051 *\/$/;"	e	enum:__anon44
XML_RNGP_MISSING_HREF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_MISSING_HREF, \/* 1052 *\/$/;"	e	enum:__anon44
XML_RNGP_NAME_MISSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_NAME_MISSING, \/* 1053 *\/$/;"	e	enum:__anon44
XML_RNGP_NEED_COMBINE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_NEED_COMBINE, \/* 1054 *\/$/;"	e	enum:__anon44
XML_RNGP_NOTALLOWED_NOT_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_NOTALLOWED_NOT_EMPTY, \/* 1055 *\/$/;"	e	enum:__anon44
XML_RNGP_NSNAME_ATTR_ANCESTOR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_NSNAME_ATTR_ANCESTOR, \/* 1056 *\/$/;"	e	enum:__anon44
XML_RNGP_NSNAME_NO_NS	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_NSNAME_NO_NS, \/* 1057 *\/$/;"	e	enum:__anon44
XML_RNGP_PARAM_FORBIDDEN	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PARAM_FORBIDDEN, \/* 1058 *\/$/;"	e	enum:__anon44
XML_RNGP_PARAM_NAME_MISSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PARAM_NAME_MISSING, \/* 1059 *\/$/;"	e	enum:__anon44
XML_RNGP_PARENTREF_CREATE_FAILED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PARENTREF_CREATE_FAILED, \/* 1060 *\/$/;"	e	enum:__anon44
XML_RNGP_PARENTREF_NAME_INVALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PARENTREF_NAME_INVALID, \/* 1061 *\/$/;"	e	enum:__anon44
XML_RNGP_PARENTREF_NOT_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PARENTREF_NOT_EMPTY, \/* 1064 *\/$/;"	e	enum:__anon44
XML_RNGP_PARENTREF_NO_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PARENTREF_NO_NAME, \/* 1062 *\/$/;"	e	enum:__anon44
XML_RNGP_PARENTREF_NO_PARENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PARENTREF_NO_PARENT, \/* 1063 *\/$/;"	e	enum:__anon44
XML_RNGP_PARSE_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PARSE_ERROR, \/* 1065 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_ANYNAME_EXCEPT_ANYNAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_ANYNAME_EXCEPT_ANYNAME, \/* 1066 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_ATTR_ATTR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_ATTR_ATTR, \/* 1067 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_ATTR_ELEM	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_ATTR_ELEM, \/* 1068 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_DATA_EXCEPT_ATTR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_ATTR, \/* 1069 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_DATA_EXCEPT_ELEM	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_ELEM, \/* 1070 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_DATA_EXCEPT_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_EMPTY, \/* 1071 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_DATA_EXCEPT_GROUP	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_GROUP, \/* 1072 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_DATA_EXCEPT_INTERLEAVE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_INTERLEAVE, \/* 1073 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_DATA_EXCEPT_LIST	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_LIST, \/* 1074 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_DATA_EXCEPT_ONEMORE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_ONEMORE, \/* 1075 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_DATA_EXCEPT_REF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_REF, \/* 1076 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_DATA_EXCEPT_TEXT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_DATA_EXCEPT_TEXT, \/* 1077 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_LIST_ATTR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_LIST_ATTR, \/* 1078 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_LIST_ELEM	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_LIST_ELEM, \/* 1079 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_LIST_INTERLEAVE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_LIST_INTERLEAVE, \/* 1080 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_LIST_LIST	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_LIST_LIST, \/* 1081 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_LIST_REF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_LIST_REF, \/* 1082 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_LIST_TEXT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_LIST_TEXT, \/* 1083 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_NSNAME_EXCEPT_ANYNAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_NSNAME_EXCEPT_ANYNAME, \/* 1084 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_NSNAME_EXCEPT_NSNAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_NSNAME_EXCEPT_NSNAME, \/* 1085 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_ONEMORE_GROUP_ATTR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_ONEMORE_GROUP_ATTR, \/* 1086 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_ONEMORE_INTERLEAVE_ATTR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_ONEMORE_INTERLEAVE_ATTR, \/* 1087 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_START_ATTR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_ATTR, \/* 1088 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_START_DATA	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_DATA, \/* 1089 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_START_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_EMPTY, \/* 1090 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_START_GROUP	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_GROUP, \/* 1091 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_START_INTERLEAVE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_INTERLEAVE, \/* 1092 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_START_LIST	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_LIST, \/* 1093 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_START_ONEMORE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_ONEMORE, \/* 1094 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_START_TEXT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_TEXT, \/* 1095 *\/$/;"	e	enum:__anon44
XML_RNGP_PAT_START_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PAT_START_VALUE, \/* 1096 *\/$/;"	e	enum:__anon44
XML_RNGP_PREFIX_UNDEFINED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_PREFIX_UNDEFINED, \/* 1097 *\/$/;"	e	enum:__anon44
XML_RNGP_REF_CREATE_FAILED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_REF_CREATE_FAILED, \/* 1098 *\/$/;"	e	enum:__anon44
XML_RNGP_REF_CYCLE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_REF_CYCLE, \/* 1099 *\/$/;"	e	enum:__anon44
XML_RNGP_REF_NAME_INVALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_REF_NAME_INVALID, \/* 1100 *\/$/;"	e	enum:__anon44
XML_RNGP_REF_NOT_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_REF_NOT_EMPTY, \/* 1103 *\/$/;"	e	enum:__anon44
XML_RNGP_REF_NO_DEF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_REF_NO_DEF, \/* 1101 *\/$/;"	e	enum:__anon44
XML_RNGP_REF_NO_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_REF_NO_NAME, \/* 1102 *\/$/;"	e	enum:__anon44
XML_RNGP_START_CHOICE_AND_INTERLEAVE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_START_CHOICE_AND_INTERLEAVE, \/* 1104 *\/$/;"	e	enum:__anon44
XML_RNGP_START_CONTENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_START_CONTENT, \/* 1105 *\/$/;"	e	enum:__anon44
XML_RNGP_START_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_START_EMPTY, \/* 1106 *\/$/;"	e	enum:__anon44
XML_RNGP_START_MISSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_START_MISSING, \/* 1107 *\/$/;"	e	enum:__anon44
XML_RNGP_TEXT_EXPECTED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_TEXT_EXPECTED, \/* 1108 *\/$/;"	e	enum:__anon44
XML_RNGP_TEXT_HAS_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_TEXT_HAS_CHILD, \/* 1109 *\/$/;"	e	enum:__anon44
XML_RNGP_TYPE_MISSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_TYPE_MISSING, \/* 1110 *\/$/;"	e	enum:__anon44
XML_RNGP_TYPE_NOT_FOUND	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_TYPE_NOT_FOUND, \/* 1111 *\/$/;"	e	enum:__anon44
XML_RNGP_TYPE_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_TYPE_VALUE, \/* 1112 *\/$/;"	e	enum:__anon44
XML_RNGP_UNKNOWN_ATTRIBUTE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_UNKNOWN_ATTRIBUTE, \/* 1113 *\/$/;"	e	enum:__anon44
XML_RNGP_UNKNOWN_COMBINE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_UNKNOWN_COMBINE, \/* 1114 *\/$/;"	e	enum:__anon44
XML_RNGP_UNKNOWN_CONSTRUCT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_UNKNOWN_CONSTRUCT, \/* 1115 *\/$/;"	e	enum:__anon44
XML_RNGP_UNKNOWN_TYPE_LIB	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_UNKNOWN_TYPE_LIB, \/* 1116 *\/$/;"	e	enum:__anon44
XML_RNGP_URI_FRAGMENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_URI_FRAGMENT, \/* 1117 *\/$/;"	e	enum:__anon44
XML_RNGP_URI_NOT_ABSOLUTE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_URI_NOT_ABSOLUTE, \/* 1118 *\/$/;"	e	enum:__anon44
XML_RNGP_VALUE_EMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_VALUE_EMPTY, \/* 1119 *\/$/;"	e	enum:__anon44
XML_RNGP_VALUE_NO_CONTENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_VALUE_NO_CONTENT, \/* 1120 *\/$/;"	e	enum:__anon44
XML_RNGP_XMLNS_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_XMLNS_NAME, \/* 1121 *\/$/;"	e	enum:__anon44
XML_RNGP_XML_NS	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_RNGP_XML_NS, \/* 1122 *\/$/;"	e	enum:__anon44
XML_SAVE_AS_HTML	/usr/include/libxml2/libxml/xmlsave.h	/^    XML_SAVE_AS_HTML    = 1<<6, \/* force HTML serialization on XML doc *\/$/;"	e	enum:__anon3
XML_SAVE_AS_XML	/usr/include/libxml2/libxml/xmlsave.h	/^    XML_SAVE_AS_XML     = 1<<5, \/* force XML serialization on HTML doc *\/$/;"	e	enum:__anon3
XML_SAVE_CHAR_INVALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SAVE_CHAR_INVALID, \/* 1401 *\/$/;"	e	enum:__anon44
XML_SAVE_FORMAT	/usr/include/libxml2/libxml/xmlsave.h	/^    XML_SAVE_FORMAT     = 1<<0,	\/* format save output *\/$/;"	e	enum:__anon3
XML_SAVE_NOT_UTF8	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SAVE_NOT_UTF8 = 1400,$/;"	e	enum:__anon44
XML_SAVE_NO_DECL	/usr/include/libxml2/libxml/xmlsave.h	/^    XML_SAVE_NO_DECL    = 1<<1,	\/* drop the xml declaration *\/$/;"	e	enum:__anon3
XML_SAVE_NO_DOCTYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SAVE_NO_DOCTYPE, \/* 1402 *\/$/;"	e	enum:__anon44
XML_SAVE_NO_EMPTY	/usr/include/libxml2/libxml/xmlsave.h	/^    XML_SAVE_NO_EMPTY	= 1<<2, \/* no empty tags *\/$/;"	e	enum:__anon3
XML_SAVE_NO_XHTML	/usr/include/libxml2/libxml/xmlsave.h	/^    XML_SAVE_NO_XHTML	= 1<<3, \/* disable XHTML1 specific rules *\/$/;"	e	enum:__anon3
XML_SAVE_UNKNOWN_ENCODING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SAVE_UNKNOWN_ENCODING, \/* 1403 *\/$/;"	e	enum:__anon44
XML_SAVE_WSNONSIG	/usr/include/libxml2/libxml/xmlsave.h	/^    XML_SAVE_WSNONSIG   = 1<<7  \/* format with non-significant whitespace *\/$/;"	e	enum:__anon3
XML_SAVE_XHTML	/usr/include/libxml2/libxml/xmlsave.h	/^    XML_SAVE_XHTML	= 1<<4, \/* force XHTML1 specific rules *\/$/;"	e	enum:__anon3
XML_SAX2_MAGIC	/usr/include/libxml2/libxml/parser.h	670;"	d
XML_SCHEMAP_AG_PROPS_CORRECT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_AG_PROPS_CORRECT, \/* 3086 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_ATTRFORMDEFAULT_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_ATTRFORMDEFAULT_VALUE, \/* 1701 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_ATTRGRP_NONAME_NOREF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_ATTRGRP_NONAME_NOREF, \/* 1702 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_ATTR_NONAME_NOREF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_ATTR_NONAME_NOREF, \/* 1703 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_AU_PROPS_CORRECT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_AU_PROPS_CORRECT, \/* 3088 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_AU_PROPS_CORRECT_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_AU_PROPS_CORRECT_2, \/* 3078 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_A_PROPS_CORRECT_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_A_PROPS_CORRECT_2, \/* 3079 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_A_PROPS_CORRECT_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_A_PROPS_CORRECT_3, \/* 3089 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COMPLEXTYPE_NONAME_NOREF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COMPLEXTYPE_NONAME_NOREF, \/* 1704 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ALL_LIMITED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ALL_LIMITED, \/* 3090 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_CT_EXTENDS_1_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_CT_EXTENDS_1_1, \/* 3063 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_CT_EXTENDS_1_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_CT_EXTENDS_1_2, \/* 3087 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_CT_EXTENDS_1_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_CT_EXTENDS_1_3, \/* 1800 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_DERIVED_OK_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_DERIVED_OK_2_1, \/* 3031 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_DERIVED_OK_2_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_DERIVED_OK_2_2, \/* 3032 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_1_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_1_1, \/* 3011 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_1_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_1_2, \/* 3012 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_1_3_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_1_3_1, \/* 3013 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_1_3_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_1_3_2, \/* 3014 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_1, \/* 3015 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_1, \/* 3016 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_2, \/* 3017 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_1, \/* 3018 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_2, \/* 3019 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_3, \/* 3020 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_4	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_4, \/* 3021 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_5	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_5, \/* 3022 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_3_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_1, \/* 3023 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1, \/* 3024 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1_2, \/* 3025 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_1, \/* 3027 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_2, \/* 3026 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_3, \/* 3028 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_4	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_4, \/* 3029 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_5	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_5, \/* 3030 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_VALID_DEFAULT_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_VALID_DEFAULT_1, \/* 3058 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_VALID_DEFAULT_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_VALID_DEFAULT_2_1, \/* 3059 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_VALID_DEFAULT_2_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_VALID_DEFAULT_2_2_1, \/* 3060 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_COS_VALID_DEFAULT_2_2_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_COS_VALID_DEFAULT_2_2_2, \/* 3061 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_CT_PROPS_CORRECT_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_CT_PROPS_CORRECT_1, \/* 1782 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_CT_PROPS_CORRECT_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_CT_PROPS_CORRECT_2, \/* 1783 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_CT_PROPS_CORRECT_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_CT_PROPS_CORRECT_3, \/* 1784 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_CT_PROPS_CORRECT_4	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_CT_PROPS_CORRECT_4, \/* 1785 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_CT_PROPS_CORRECT_5	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_CT_PROPS_CORRECT_5, \/* 1786 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_CVC_SIMPLE_TYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_CVC_SIMPLE_TYPE, \/* 3062 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_C_PROPS_CORRECT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_C_PROPS_CORRECT, \/* 3080 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_DEF_AND_PREFIX	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_DEF_AND_PREFIX, \/* 1768 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_1, \/* 1787 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_1, \/* 1788 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_2, \/* 1789 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_3, \/* 3077 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_2, \/* 1790 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_3, \/* 1791 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_1, \/* 1797 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_2, \/* 1798 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_3, \/* 1799 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_ELEMFORMDEFAULT_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_ELEMFORMDEFAULT_VALUE, \/* 1705 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_ELEM_DEFAULT_FIXED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_ELEM_DEFAULT_FIXED, \/* 1755 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_ELEM_NONAME_NOREF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_ELEM_NONAME_NOREF, \/* 1706 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_EXTENSION_NO_BASE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_EXTENSION_NO_BASE, \/* 1707 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_E_PROPS_CORRECT_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_E_PROPS_CORRECT_2, \/* 3045 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_E_PROPS_CORRECT_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_E_PROPS_CORRECT_3, \/* 3046 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_E_PROPS_CORRECT_4	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_E_PROPS_CORRECT_4, \/* 3047 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_E_PROPS_CORRECT_5	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_E_PROPS_CORRECT_5, \/* 3048 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_E_PROPS_CORRECT_6	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_E_PROPS_CORRECT_6, \/* 3049 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_FACET_NO_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_FACET_NO_VALUE, \/* 1708 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_FAILED_BUILD_IMPORT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_FAILED_BUILD_IMPORT, \/* 1709 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_FAILED_LOAD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_FAILED_LOAD, \/* 1757 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_FAILED_PARSE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_FAILED_PARSE, \/* 1766 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_GROUP_NONAME_NOREF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_GROUP_NONAME_NOREF, \/* 1710 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_IMPORT_NAMESPACE_NOT_URI	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_IMPORT_NAMESPACE_NOT_URI, \/* 1711 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_IMPORT_REDEFINE_NSNAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_IMPORT_REDEFINE_NSNAME, \/* 1712 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_IMPORT_SCHEMA_NOT_URI	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_IMPORT_SCHEMA_NOT_URI, \/* 1713 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INCLUDE_SCHEMA_NOT_URI	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INCLUDE_SCHEMA_NOT_URI, \/* 1770 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INCLUDE_SCHEMA_NO_URI	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INCLUDE_SCHEMA_NO_URI, \/* 1771 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INTERNAL	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INTERNAL, \/* 3069 non-W3C *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INTERSECTION_NOT_EXPRESSIBLE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INTERSECTION_NOT_EXPRESSIBLE, \/* 1793 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INVALID_ATTR_COMBINATION	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_ATTR_COMBINATION, \/* 1777 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INVALID_ATTR_INLINE_COMBINATION	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_ATTR_INLINE_COMBINATION, \/* 1778 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INVALID_ATTR_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_ATTR_NAME, \/* 1780 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INVALID_ATTR_USE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_ATTR_USE, \/* 1774 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INVALID_BOOLEAN	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_BOOLEAN, \/* 1714 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INVALID_ENUM	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_ENUM, \/* 1715 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INVALID_FACET	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_FACET, \/* 1716 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INVALID_FACET_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_FACET_VALUE, \/* 1717 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INVALID_MAXOCCURS	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_MAXOCCURS, \/* 1718 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INVALID_MINOCCURS	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_MINOCCURS, \/* 1719 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INVALID_REF_AND_SUBTYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_REF_AND_SUBTYPE, \/* 1720 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_INVALID_WHITE_SPACE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_INVALID_WHITE_SPACE, \/* 1721 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_MG_PROPS_CORRECT_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_MG_PROPS_CORRECT_1, \/* 3074 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_MG_PROPS_CORRECT_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_MG_PROPS_CORRECT_2, \/* 3075 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_MISSING_SIMPLETYPE_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_MISSING_SIMPLETYPE_CHILD, \/* 1779 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_NOATTR_NOREF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_NOATTR_NOREF, \/* 1722 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_NOROOT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_NOROOT, \/* 1759 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_NOTATION_NO_NAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_NOTATION_NO_NAME, \/* 1723 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_NOTHING_TO_PARSE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_NOTHING_TO_PARSE, \/* 1758 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_NOTYPE_NOREF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_NOTYPE_NOREF, \/* 1724 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_NOT_DETERMINISTIC	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_NOT_DETERMINISTIC, \/* 3070 non-W3C *\/$/;"	e	enum:__anon44
XML_SCHEMAP_NOT_SCHEMA	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_NOT_SCHEMA, \/* 1772 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_NO_XMLNS	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_NO_XMLNS, \/* 3056 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_NO_XSI	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_NO_XSI, \/* 3057 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_PREFIX_UNDEFINED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_PREFIX_UNDEFINED = 1700,$/;"	e	enum:__anon44
XML_SCHEMAP_P_PROPS_CORRECT_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_P_PROPS_CORRECT_1, \/* 3042 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_P_PROPS_CORRECT_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_P_PROPS_CORRECT_2_1, \/* 3043 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_P_PROPS_CORRECT_2_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_P_PROPS_CORRECT_2_2, \/* 3044 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_RECURSIVE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_RECURSIVE, \/* 1775 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_REDEFINED_ATTR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_REDEFINED_ATTR, \/* 1764 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_REDEFINED_ATTRGROUP	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_REDEFINED_ATTRGROUP, \/* 1763 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_REDEFINED_ELEMENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_REDEFINED_ELEMENT, \/* 1762 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_REDEFINED_GROUP	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_REDEFINED_GROUP, \/* 1760 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_REDEFINED_NOTATION	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_REDEFINED_NOTATION, \/* 1765 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_REDEFINED_TYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_REDEFINED_TYPE, \/* 1761 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_REF_AND_CONTENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_REF_AND_CONTENT, \/* 1781 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_REF_AND_SUBTYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_REF_AND_SUBTYPE, \/* 1725 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_REGEXP_INVALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_REGEXP_INVALID, \/* 1756 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_RESTRICTION_NONAME_NOREF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_RESTRICTION_NONAME_NOREF, \/* 1726 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_S4S_ATTR_INVALID_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_S4S_ATTR_INVALID_VALUE, \/* 3037 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_S4S_ATTR_MISSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_S4S_ATTR_MISSING, \/* 3036 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_S4S_ATTR_NOT_ALLOWED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_S4S_ATTR_NOT_ALLOWED, \/* 3035 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_S4S_ELEM_MISSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_S4S_ELEM_MISSING, \/* 3034 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_S4S_ELEM_NOT_ALLOWED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_S4S_ELEM_NOT_ALLOWED, \/* 3033 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SIMPLETYPE_NONAME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SIMPLETYPE_NONAME, \/* 1727 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_ATTRIBUTE_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_1, \/* 3051 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_ATTRIBUTE_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_2, \/* 3052 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_ATTRIBUTE_3_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_3_1, \/* 3053 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_ATTRIBUTE_3_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_3_2, \/* 3054 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_ATTRIBUTE_4	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_4, \/* 3055 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_1, \/* 3071 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_2, \/* 3072 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_3, \/* 3073 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_CT_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_CT_1, \/* 3076 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_ELEMENT_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ELEMENT_1, \/* 3038 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_ELEMENT_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ELEMENT_2_1, \/* 3039 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_ELEMENT_2_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ELEMENT_2_2, \/* 3040 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_ELEMENT_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_ELEMENT_3, \/* 3041 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_IMPORT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT, \/* 3082 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_IMPORT_1_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_1_1, \/* 3064 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_IMPORT_1_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_1_2, \/* 3065 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_IMPORT_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_2, \/* 3066 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_IMPORT_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_2_1, \/* 3067 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_IMPORT_2_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_2_2, \/* 3068 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_IMPORT_3_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_3_1, \/* 1795 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_IMPORT_3_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_IMPORT_3_2, \/* 1796 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_INCLUDE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_INCLUDE, \/* 3050 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_LIST_ITEMTYPE_OR_SIMPLETYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_LIST_ITEMTYPE_OR_SIMPLETYPE, \/* 3006 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_REDEFINE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_REDEFINE, \/* 3081 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_RESOLVE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_RESOLVE, \/* 3004 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_RESTRICTION_BASE_OR_SIMPLETYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_RESTRICTION_BASE_OR_SIMPLETYPE, \/* 3005 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_SIMPLE_TYPE_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_SIMPLE_TYPE_1 = 3000,$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_SIMPLE_TYPE_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_SIMPLE_TYPE_2, \/* 3001 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_SIMPLE_TYPE_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_SIMPLE_TYPE_3, \/* 3002 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_SIMPLE_TYPE_4	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_SIMPLE_TYPE_4, \/* 3003 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SRC_UNION_MEMBERTYPES_OR_SIMPLETYPES	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SRC_UNION_MEMBERTYPES_OR_SIMPLETYPES, \/* 3007 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_ST_PROPS_CORRECT_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_ST_PROPS_CORRECT_1, \/* 3008 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_ST_PROPS_CORRECT_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_ST_PROPS_CORRECT_2, \/* 3009 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_ST_PROPS_CORRECT_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_ST_PROPS_CORRECT_3, \/* 3010 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_SUPERNUMEROUS_LIST_ITEM_TYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_SUPERNUMEROUS_LIST_ITEM_TYPE, \/* 1776 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_TYPE_AND_SUBTYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_TYPE_AND_SUBTYPE, \/* 1728 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNION_NOT_EXPRESSIBLE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNION_NOT_EXPRESSIBLE, \/* 1794 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_ALL_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ALL_CHILD, \/* 1729 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_ANYATTRIBUTE_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ANYATTRIBUTE_CHILD, \/* 1730 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_ATTRGRP_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ATTRGRP_CHILD, \/* 1732 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_ATTRIBUTE_GROUP	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ATTRIBUTE_GROUP, \/* 1733 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_ATTR_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ATTR_CHILD, \/* 1731 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_BASE_TYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_BASE_TYPE, \/* 1734 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_CHOICE_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_CHOICE_CHILD, \/* 1735 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_COMPLEXCONTENT_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_COMPLEXCONTENT_CHILD, \/* 1736 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_COMPLEXTYPE_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_COMPLEXTYPE_CHILD, \/* 1737 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_ELEM_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_ELEM_CHILD, \/* 1738 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_EXTENSION_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_EXTENSION_CHILD, \/* 1739 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_FACET_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_FACET_CHILD, \/* 1740 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_FACET_TYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_FACET_TYPE, \/* 1741 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_GROUP_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_GROUP_CHILD, \/* 1742 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_IMPORT_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_IMPORT_CHILD, \/* 1743 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_INCLUDE_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_INCLUDE_CHILD, \/* 1769 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_LIST_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_LIST_CHILD, \/* 1744 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_MEMBER_TYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_MEMBER_TYPE, \/* 1773 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_NOTATION_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_NOTATION_CHILD, \/* 1745 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_PREFIX	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_PREFIX, \/* 1767 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_PROCESSCONTENT_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_PROCESSCONTENT_CHILD, \/* 1746 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_REF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_REF, \/* 1747 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_RESTRICTION_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_RESTRICTION_CHILD, \/* 1748 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_SCHEMAS_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_SCHEMAS_CHILD, \/* 1749 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_SEQUENCE_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_SEQUENCE_CHILD, \/* 1750 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_SIMPLECONTENT_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_SIMPLECONTENT_CHILD, \/* 1751 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_SIMPLETYPE_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_SIMPLETYPE_CHILD, \/* 1752 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_TYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_TYPE, \/* 1753 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_UNKNOWN_UNION_CHILD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_UNKNOWN_UNION_CHILD, \/* 1754 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_WARN_ATTR_POINTLESS_PROH	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_WARN_ATTR_POINTLESS_PROH, \/* 3085 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_WARN_ATTR_REDECL_PROH	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_WARN_ATTR_REDECL_PROH, \/* 3085 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_WARN_SKIP_SCHEMA	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_WARN_SKIP_SCHEMA, \/* 3083 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_WARN_UNLOCATED_SCHEMA	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_WARN_UNLOCATED_SCHEMA, \/* 3084 *\/$/;"	e	enum:__anon44
XML_SCHEMAP_WILDCARD_INVALID_NS_MEMBER	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAP_WILDCARD_INVALID_NS_MEMBER, \/* 1792 *\/$/;"	e	enum:__anon44
XML_SCHEMAS_ANYATTR_LAX	/usr/include/libxml2/libxml/schemasInternals.h	168;"	d
XML_SCHEMAS_ANYATTR_SKIP	/usr/include/libxml2/libxml/schemasInternals.h	161;"	d
XML_SCHEMAS_ANYATTR_STRICT	/usr/include/libxml2/libxml/schemasInternals.h	175;"	d
XML_SCHEMAS_ANYSIMPLETYPE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_ANYSIMPLETYPE$/;"	e	enum:__anon35
XML_SCHEMAS_ANYTYPE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_ANYTYPE,$/;"	e	enum:__anon35
XML_SCHEMAS_ANYURI	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_ANYURI,$/;"	e	enum:__anon35
XML_SCHEMAS_ANY_LAX	/usr/include/libxml2/libxml/schemasInternals.h	188;"	d
XML_SCHEMAS_ANY_SKIP	/usr/include/libxml2/libxml/schemasInternals.h	181;"	d
XML_SCHEMAS_ANY_STRICT	/usr/include/libxml2/libxml/schemasInternals.h	195;"	d
XML_SCHEMAS_ATTRGROUP_GLOBAL	/usr/include/libxml2/libxml/schemasInternals.h	332;"	d
XML_SCHEMAS_ATTRGROUP_HAS_REFS	/usr/include/libxml2/libxml/schemasInternals.h	351;"	d
XML_SCHEMAS_ATTRGROUP_MARKED	/usr/include/libxml2/libxml/schemasInternals.h	338;"	d
XML_SCHEMAS_ATTRGROUP_REDEFINED	/usr/include/libxml2/libxml/schemasInternals.h	345;"	d
XML_SCHEMAS_ATTRGROUP_WILDCARD_BUILDED	/usr/include/libxml2/libxml/schemasInternals.h	326;"	d
XML_SCHEMAS_ATTR_FIXED	/usr/include/libxml2/libxml/schemasInternals.h	239;"	d
XML_SCHEMAS_ATTR_GLOBAL	/usr/include/libxml2/libxml/schemasInternals.h	220;"	d
XML_SCHEMAS_ATTR_INTERNAL_RESOLVED	/usr/include/libxml2/libxml/schemasInternals.h	233;"	d
XML_SCHEMAS_ATTR_NSDEFAULT	/usr/include/libxml2/libxml/schemasInternals.h	226;"	d
XML_SCHEMAS_ATTR_USE_OPTIONAL	/usr/include/libxml2/libxml/schemasInternals.h	214;"	d
XML_SCHEMAS_ATTR_USE_PROHIBITED	/usr/include/libxml2/libxml/schemasInternals.h	202;"	d
XML_SCHEMAS_ATTR_USE_REQUIRED	/usr/include/libxml2/libxml/schemasInternals.h	208;"	d
XML_SCHEMAS_BASE64BINARY	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_BASE64BINARY,$/;"	e	enum:__anon35
XML_SCHEMAS_BLOCK_DEFAULT_EXTENSION	/usr/include/libxml2/libxml/schemasInternals.h	898;"	d
XML_SCHEMAS_BLOCK_DEFAULT_RESTRICTION	/usr/include/libxml2/libxml/schemasInternals.h	904;"	d
XML_SCHEMAS_BLOCK_DEFAULT_SUBSTITUTION	/usr/include/libxml2/libxml/schemasInternals.h	910;"	d
XML_SCHEMAS_BOOLEAN	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_BOOLEAN,$/;"	e	enum:__anon35
XML_SCHEMAS_BYTE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_BYTE,$/;"	e	enum:__anon35
XML_SCHEMAS_DATE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_DATE,$/;"	e	enum:__anon35
XML_SCHEMAS_DATETIME	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_DATETIME,$/;"	e	enum:__anon35
XML_SCHEMAS_DECIMAL	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_DECIMAL,$/;"	e	enum:__anon35
XML_SCHEMAS_DOUBLE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_DOUBLE,$/;"	e	enum:__anon35
XML_SCHEMAS_DURATION	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_DURATION,$/;"	e	enum:__anon35
XML_SCHEMAS_ELEM_ABSTRACT	/usr/include/libxml2/libxml/schemasInternals.h	673;"	d
XML_SCHEMAS_ELEM_BLOCK_ABSENT	/usr/include/libxml2/libxml/schemasInternals.h	712;"	d
XML_SCHEMAS_ELEM_BLOCK_EXTENSION	/usr/include/libxml2/libxml/schemasInternals.h	718;"	d
XML_SCHEMAS_ELEM_BLOCK_RESTRICTION	/usr/include/libxml2/libxml/schemasInternals.h	724;"	d
XML_SCHEMAS_ELEM_BLOCK_SUBSTITUTION	/usr/include/libxml2/libxml/schemasInternals.h	730;"	d
XML_SCHEMAS_ELEM_CIRCULAR	/usr/include/libxml2/libxml/schemasInternals.h	706;"	d
XML_SCHEMAS_ELEM_DEFAULT	/usr/include/libxml2/libxml/schemasInternals.h	661;"	d
XML_SCHEMAS_ELEM_FINAL_ABSENT	/usr/include/libxml2/libxml/schemasInternals.h	736;"	d
XML_SCHEMAS_ELEM_FINAL_EXTENSION	/usr/include/libxml2/libxml/schemasInternals.h	742;"	d
XML_SCHEMAS_ELEM_FINAL_RESTRICTION	/usr/include/libxml2/libxml/schemasInternals.h	748;"	d
XML_SCHEMAS_ELEM_FIXED	/usr/include/libxml2/libxml/schemasInternals.h	667;"	d
XML_SCHEMAS_ELEM_GLOBAL	/usr/include/libxml2/libxml/schemasInternals.h	655;"	d
XML_SCHEMAS_ELEM_INTERNAL_CHECKED	/usr/include/libxml2/libxml/schemasInternals.h	761;"	d
XML_SCHEMAS_ELEM_INTERNAL_RESOLVED	/usr/include/libxml2/libxml/schemasInternals.h	700;"	d
XML_SCHEMAS_ELEM_NILLABLE	/usr/include/libxml2/libxml/schemasInternals.h	649;"	d
XML_SCHEMAS_ELEM_NSDEFAULT	/usr/include/libxml2/libxml/schemasInternals.h	693;"	d
XML_SCHEMAS_ELEM_REF	/usr/include/libxml2/libxml/schemasInternals.h	686;"	d
XML_SCHEMAS_ELEM_SUBST_GROUP_HEAD	/usr/include/libxml2/libxml/schemasInternals.h	754;"	d
XML_SCHEMAS_ELEM_TOPLEVEL	/usr/include/libxml2/libxml/schemasInternals.h	680;"	d
XML_SCHEMAS_ENTITIES	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_ENTITIES,$/;"	e	enum:__anon35
XML_SCHEMAS_ENTITY	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_ENTITY,$/;"	e	enum:__anon35
XML_SCHEMAS_ERR_	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_ATTRINVALID	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_ATTRINVALID,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_ATTRUNKNOWN	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_ATTRUNKNOWN,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_CONSTRUCT	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_CONSTRUCT,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_ELEMCONT	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_ELEMCONT,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_EXTRACONTENT	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_EXTRACONTENT,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_FACET	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_FACET,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_HAVEDEFAULT	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_HAVEDEFAULT,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_INTERNAL	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_INTERNAL,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_INVALIDATTR	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_INVALIDATTR,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_INVALIDELEM	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_INVALIDELEM,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_ISABSTRACT	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_ISABSTRACT,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_MISSING	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_MISSING,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_NOROLLBACK	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOROLLBACK,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_NOROOT	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOROOT	= 1,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_NOTDETERMINIST	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTDETERMINIST,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_NOTEMPTY	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTEMPTY,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_NOTNILLABLE	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTNILLABLE,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_NOTSIMPLE	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTSIMPLE,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_NOTTOPLEVEL	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTTOPLEVEL,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_NOTYPE	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_NOTYPE,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_OK	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_OK		= 0,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_UNDECLAREDELEM	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_UNDECLAREDELEM,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_VALUE	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_VALUE,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_WRONGELEM	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_WRONGELEM,$/;"	e	enum:__anon21
XML_SCHEMAS_ERR_XXX	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMAS_ERR_XXX$/;"	e	enum:__anon21
XML_SCHEMAS_FACET_COLLAPSE	/usr/include/libxml2/libxml/schemasInternals.h	819;"	d
XML_SCHEMAS_FACET_PRESERVE	/usr/include/libxml2/libxml/schemasInternals.h	807;"	d
XML_SCHEMAS_FACET_REPLACE	/usr/include/libxml2/libxml/schemasInternals.h	813;"	d
XML_SCHEMAS_FACET_UNKNOWN	/usr/include/libxml2/libxml/schemasInternals.h	801;"	d
XML_SCHEMAS_FINAL_DEFAULT_EXTENSION	/usr/include/libxml2/libxml/schemasInternals.h	874;"	d
XML_SCHEMAS_FINAL_DEFAULT_LIST	/usr/include/libxml2/libxml/schemasInternals.h	886;"	d
XML_SCHEMAS_FINAL_DEFAULT_RESTRICTION	/usr/include/libxml2/libxml/schemasInternals.h	880;"	d
XML_SCHEMAS_FINAL_DEFAULT_UNION	/usr/include/libxml2/libxml/schemasInternals.h	892;"	d
XML_SCHEMAS_FLOAT	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_FLOAT,$/;"	e	enum:__anon35
XML_SCHEMAS_GDAY	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_GDAY,$/;"	e	enum:__anon35
XML_SCHEMAS_GMONTH	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_GMONTH,$/;"	e	enum:__anon35
XML_SCHEMAS_GMONTHDAY	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_GMONTHDAY,$/;"	e	enum:__anon35
XML_SCHEMAS_GYEAR	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_GYEAR,$/;"	e	enum:__anon35
XML_SCHEMAS_GYEARMONTH	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_GYEARMONTH,$/;"	e	enum:__anon35
XML_SCHEMAS_HEXBINARY	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_HEXBINARY,$/;"	e	enum:__anon35
XML_SCHEMAS_ID	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_ID,$/;"	e	enum:__anon35
XML_SCHEMAS_IDREF	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_IDREF,$/;"	e	enum:__anon35
XML_SCHEMAS_IDREFS	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_IDREFS,$/;"	e	enum:__anon35
XML_SCHEMAS_INCLUDING_CONVERT_NS	/usr/include/libxml2/libxml/schemasInternals.h	917;"	d
XML_SCHEMAS_INT	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_INT,$/;"	e	enum:__anon35
XML_SCHEMAS_INTEGER	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_INTEGER,$/;"	e	enum:__anon35
XML_SCHEMAS_LANGUAGE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_LANGUAGE,$/;"	e	enum:__anon35
XML_SCHEMAS_LONG	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_LONG,$/;"	e	enum:__anon35
XML_SCHEMAS_NAME	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_NAME,$/;"	e	enum:__anon35
XML_SCHEMAS_NCNAME	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_NCNAME,$/;"	e	enum:__anon35
XML_SCHEMAS_NINTEGER	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_NINTEGER,$/;"	e	enum:__anon35
XML_SCHEMAS_NMTOKEN	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_NMTOKEN,$/;"	e	enum:__anon35
XML_SCHEMAS_NMTOKENS	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_NMTOKENS,$/;"	e	enum:__anon35
XML_SCHEMAS_NNINTEGER	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_NNINTEGER,$/;"	e	enum:__anon35
XML_SCHEMAS_NORMSTRING	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_NORMSTRING,$/;"	e	enum:__anon35
XML_SCHEMAS_NOTATION	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_NOTATION,$/;"	e	enum:__anon35
XML_SCHEMAS_NPINTEGER	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_NPINTEGER,$/;"	e	enum:__anon35
XML_SCHEMAS_PINTEGER	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_PINTEGER,$/;"	e	enum:__anon35
XML_SCHEMAS_QNAME	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_QNAME,$/;"	e	enum:__anon35
XML_SCHEMAS_QUALIF_ATTR	/usr/include/libxml2/libxml/schemasInternals.h	868;"	d
XML_SCHEMAS_QUALIF_ELEM	/usr/include/libxml2/libxml/schemasInternals.h	861;"	d
XML_SCHEMAS_SHORT	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_SHORT,$/;"	e	enum:__anon35
XML_SCHEMAS_STRING	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_STRING,$/;"	e	enum:__anon35
XML_SCHEMAS_TIME	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_TIME,$/;"	e	enum:__anon35
XML_SCHEMAS_TOKEN	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_TOKEN,$/;"	e	enum:__anon35
XML_SCHEMAS_TYPE_ABSTRACT	/usr/include/libxml2/libxml/schemasInternals.h	527;"	d
XML_SCHEMAS_TYPE_BLOCK_DEFAULT	/usr/include/libxml2/libxml/schemasInternals.h	509;"	d
XML_SCHEMAS_TYPE_BLOCK_EXTENSION	/usr/include/libxml2/libxml/schemasInternals.h	515;"	d
XML_SCHEMAS_TYPE_BLOCK_RESTRICTION	/usr/include/libxml2/libxml/schemasInternals.h	521;"	d
XML_SCHEMAS_TYPE_BUILTIN_PRIMITIVE	/usr/include/libxml2/libxml/schemasInternals.h	496;"	d
XML_SCHEMAS_TYPE_DERIVATION_METHOD_EXTENSION	/usr/include/libxml2/libxml/schemasInternals.h	414;"	d
XML_SCHEMAS_TYPE_DERIVATION_METHOD_RESTRICTION	/usr/include/libxml2/libxml/schemasInternals.h	420;"	d
XML_SCHEMAS_TYPE_FACETSNEEDVALUE	/usr/include/libxml2/libxml/schemasInternals.h	533;"	d
XML_SCHEMAS_TYPE_FINAL_DEFAULT	/usr/include/libxml2/libxml/schemasInternals.h	490;"	d
XML_SCHEMAS_TYPE_FINAL_EXTENSION	/usr/include/libxml2/libxml/schemasInternals.h	466;"	d
XML_SCHEMAS_TYPE_FINAL_LIST	/usr/include/libxml2/libxml/schemasInternals.h	478;"	d
XML_SCHEMAS_TYPE_FINAL_RESTRICTION	/usr/include/libxml2/libxml/schemasInternals.h	472;"	d
XML_SCHEMAS_TYPE_FINAL_UNION	/usr/include/libxml2/libxml/schemasInternals.h	484;"	d
XML_SCHEMAS_TYPE_FIXUP_1	/usr/include/libxml2/libxml/schemasInternals.h	582;"	d
XML_SCHEMAS_TYPE_GLOBAL	/usr/include/libxml2/libxml/schemasInternals.h	426;"	d
XML_SCHEMAS_TYPE_HAS_FACETS	/usr/include/libxml2/libxml/schemasInternals.h	569;"	d
XML_SCHEMAS_TYPE_INTERNAL_INVALID	/usr/include/libxml2/libxml/schemasInternals.h	545;"	d
XML_SCHEMAS_TYPE_INTERNAL_RESOLVED	/usr/include/libxml2/libxml/schemasInternals.h	539;"	d
XML_SCHEMAS_TYPE_MARKED	/usr/include/libxml2/libxml/schemasInternals.h	502;"	d
XML_SCHEMAS_TYPE_MIXED	/usr/include/libxml2/libxml/schemasInternals.h	408;"	d
XML_SCHEMAS_TYPE_NORMVALUENEEDED	/usr/include/libxml2/libxml/schemasInternals.h	575;"	d
XML_SCHEMAS_TYPE_OWNED_ATTR_WILDCARD	/usr/include/libxml2/libxml/schemasInternals.h	433;"	d
XML_SCHEMAS_TYPE_REDEFINED	/usr/include/libxml2/libxml/schemasInternals.h	589;"	d
XML_SCHEMAS_TYPE_VARIETY_ABSENT	/usr/include/libxml2/libxml/schemasInternals.h	442;"	d
XML_SCHEMAS_TYPE_VARIETY_ATOMIC	/usr/include/libxml2/libxml/schemasInternals.h	460;"	d
XML_SCHEMAS_TYPE_VARIETY_LIST	/usr/include/libxml2/libxml/schemasInternals.h	448;"	d
XML_SCHEMAS_TYPE_VARIETY_UNION	/usr/include/libxml2/libxml/schemasInternals.h	454;"	d
XML_SCHEMAS_TYPE_WHITESPACE_COLLAPSE	/usr/include/libxml2/libxml/schemasInternals.h	563;"	d
XML_SCHEMAS_TYPE_WHITESPACE_PRESERVE	/usr/include/libxml2/libxml/schemasInternals.h	551;"	d
XML_SCHEMAS_TYPE_WHITESPACE_REPLACE	/usr/include/libxml2/libxml/schemasInternals.h	557;"	d
XML_SCHEMAS_UBYTE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_UBYTE,$/;"	e	enum:__anon35
XML_SCHEMAS_UINT	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_UINT,$/;"	e	enum:__anon35
XML_SCHEMAS_ULONG	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_ULONG,$/;"	e	enum:__anon35
XML_SCHEMAS_UNKNOWN	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_UNKNOWN = 0,$/;"	e	enum:__anon35
XML_SCHEMAS_USHORT	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMAS_USHORT,$/;"	e	enum:__anon35
XML_SCHEMAS_WILDCARD_COMPLETE	/usr/include/libxml2/libxml/schemasInternals.h	288;"	d
XML_SCHEMATRONV_ASSERT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMATRONV_ASSERT = 4000, \/* 4000 *\/$/;"	e	enum:__anon44
XML_SCHEMATRONV_REPORT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMATRONV_REPORT,$/;"	e	enum:__anon44
XML_SCHEMATRON_OUT_BUFFER	/usr/include/libxml2/libxml/schematron.h	/^    XML_SCHEMATRON_OUT_BUFFER = 1 << 9,	\/* output to a buffer *\/$/;"	e	enum:__anon10
XML_SCHEMATRON_OUT_ERROR	/usr/include/libxml2/libxml/schematron.h	/^    XML_SCHEMATRON_OUT_ERROR = 1 << 3,  \/* output via xmlStructuredErrorFunc *\/$/;"	e	enum:__anon10
XML_SCHEMATRON_OUT_FILE	/usr/include/libxml2/libxml/schematron.h	/^    XML_SCHEMATRON_OUT_FILE = 1 << 8,	\/* output to a file descriptor *\/$/;"	e	enum:__anon10
XML_SCHEMATRON_OUT_IO	/usr/include/libxml2/libxml/schematron.h	/^    XML_SCHEMATRON_OUT_IO = 1 << 10	\/* output to I\/O mechanism *\/$/;"	e	enum:__anon10
XML_SCHEMATRON_OUT_QUIET	/usr/include/libxml2/libxml/schematron.h	/^    XML_SCHEMATRON_OUT_QUIET = 1 << 0,	\/* quiet no report *\/$/;"	e	enum:__anon10
XML_SCHEMATRON_OUT_TEXT	/usr/include/libxml2/libxml/schematron.h	/^    XML_SCHEMATRON_OUT_TEXT = 1 << 1,	\/* build a textual report *\/$/;"	e	enum:__anon10
XML_SCHEMATRON_OUT_XML	/usr/include/libxml2/libxml/schematron.h	/^    XML_SCHEMATRON_OUT_XML = 1 << 2,	\/* output SVRL *\/$/;"	e	enum:__anon10
XML_SCHEMAV_ATTRINVALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_ATTRINVALID, \/* 1821 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_ATTRUNKNOWN	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_ATTRUNKNOWN, \/* 1820 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CONSTRUCT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CONSTRUCT, \/* 1817 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ATTRIBUTE_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ATTRIBUTE_1, \/* 1861 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ATTRIBUTE_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ATTRIBUTE_2, \/* 1862 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ATTRIBUTE_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ATTRIBUTE_3, \/* 1863 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ATTRIBUTE_4	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ATTRIBUTE_4, \/* 1864 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_AU	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_AU, \/* 1874 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_COMPLEX_TYPE_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_1, \/* 1873 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_COMPLEX_TYPE_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_1, \/* 1841 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_COMPLEX_TYPE_2_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_2, \/* 1842 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_COMPLEX_TYPE_2_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_3, \/* 1843 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_COMPLEX_TYPE_2_4	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_2_4, \/* 1844 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_COMPLEX_TYPE_3_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_3_1, \/* 1865 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_1, \/* 1866 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_2, \/* 1867 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_COMPLEX_TYPE_4	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_4, \/* 1868 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_COMPLEX_TYPE_5_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_5_1, \/* 1869 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_COMPLEX_TYPE_5_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_COMPLEX_TYPE_5_2, \/* 1870 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_1, \/* 1824 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_2, \/* 1825 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_3, \/* 1826 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_1, \/* 1845 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_2, \/* 1846 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_3_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_3_1, \/* 1847 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_3_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_3_2_1, \/* 1848 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_3_2_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_3_2_2, \/* 1849 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_4_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_4_1, \/* 1850 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_4_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_4_2, \/* 1851 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_4_3	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_4_3, \/* 1852 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_5_1_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_1_1, \/* 1853 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_5_1_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_1_2, \/* 1854 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_5_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_2_1, \/* 1855 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_5_2_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_2_2_1, \/* 1856 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_5_2_2_2_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_2_2_2_1, \/* 1857 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_5_2_2_2_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_5_2_2_2_2, \/* 1858 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_6	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_6, \/* 1859 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ELT_7	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ELT_7, \/* 1860 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_ENUMERATION_VALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_ENUMERATION_VALID, \/* 1840 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_FACET_VALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_FACET_VALID, \/* 1829 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_FRACTIONDIGITS_VALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_FRACTIONDIGITS_VALID, \/* 1838 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_IDC	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_IDC, \/* 1877 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_LENGTH_VALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_LENGTH_VALID, \/* 1830 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_MAXEXCLUSIVE_VALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_MAXEXCLUSIVE_VALID, \/* 1836 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_MAXINCLUSIVE_VALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_MAXINCLUSIVE_VALID, \/* 1834 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_MAXLENGTH_VALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_MAXLENGTH_VALID, \/* 1832 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_MINEXCLUSIVE_VALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_MINEXCLUSIVE_VALID, \/* 1835 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_MININCLUSIVE_VALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_MININCLUSIVE_VALID, \/* 1833 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_MINLENGTH_VALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_MINLENGTH_VALID, \/* 1831 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_PATTERN_VALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_PATTERN_VALID, \/* 1839 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_TOTALDIGITS_VALID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_TOTALDIGITS_VALID, \/* 1837 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_TYPE_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_TYPE_1, \/* 1875 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_TYPE_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_TYPE_2, \/* 1876 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_TYPE_3_1_1	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_TYPE_3_1_1, \/* 1827 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_TYPE_3_1_2	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_TYPE_3_1_2, \/* 1828 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_CVC_WILDCARD	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_CVC_WILDCARD, \/* 1878 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_DOCUMENT_ELEMENT_MISSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_DOCUMENT_ELEMENT_MISSING, \/* 1872 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_ELEMCONT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_ELEMCONT, \/* 1810 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_ELEMENT_CONTENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_ELEMENT_CONTENT, \/* 1871 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_EXTRACONTENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_EXTRACONTENT, \/* 1813 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_FACET	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_FACET, \/* 1823 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_HAVEDEFAULT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_HAVEDEFAULT, \/* 1811 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_INTERNAL	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_INTERNAL, \/* 1818 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_INVALIDATTR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_INVALIDATTR, \/* 1814 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_INVALIDELEM	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_INVALIDELEM, \/* 1815 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_ISABSTRACT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_ISABSTRACT, \/* 1808 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_MISC	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_MISC, \/* 1879 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_MISSING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_MISSING, \/* 1804 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_NOROLLBACK	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_NOROLLBACK, \/* 1807 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_NOROOT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_NOROOT = 1801,$/;"	e	enum:__anon44
XML_SCHEMAV_NOTDETERMINIST	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_NOTDETERMINIST, \/* 1816 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_NOTEMPTY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_NOTEMPTY, \/* 1809 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_NOTNILLABLE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_NOTNILLABLE, \/* 1812 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_NOTSIMPLE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_NOTSIMPLE, \/* 1819 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_NOTTOPLEVEL	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_NOTTOPLEVEL, \/* 1803 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_NOTYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_NOTYPE, \/* 1806 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_UNDECLAREDELEM	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_UNDECLAREDELEM, \/* 1802 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_VALUE, \/* 1822 *\/$/;"	e	enum:__anon44
XML_SCHEMAV_WRONGELEM	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_SCHEMAV_WRONGELEM, \/* 1805 *\/$/;"	e	enum:__anon44
XML_SCHEMA_CONTENT_ANY	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_ANY$/;"	e	enum:__anon37
XML_SCHEMA_CONTENT_BASIC	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_BASIC,$/;"	e	enum:__anon37
XML_SCHEMA_CONTENT_ELEMENTS	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_ELEMENTS,$/;"	e	enum:__anon37
XML_SCHEMA_CONTENT_EMPTY	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_EMPTY = 1,$/;"	e	enum:__anon37
XML_SCHEMA_CONTENT_MIXED	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_MIXED,$/;"	e	enum:__anon37
XML_SCHEMA_CONTENT_MIXED_OR_ELEMENTS	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_MIXED_OR_ELEMENTS, \/* Obsolete *\/$/;"	e	enum:__anon37
XML_SCHEMA_CONTENT_SIMPLE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_SIMPLE,$/;"	e	enum:__anon37
XML_SCHEMA_CONTENT_UNKNOWN	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_CONTENT_UNKNOWN = 0,$/;"	e	enum:__anon37
XML_SCHEMA_EXTRA_ATTR_USE_PROHIB	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_EXTRA_ATTR_USE_PROHIB$/;"	e	enum:__anon36
XML_SCHEMA_EXTRA_QNAMEREF	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_EXTRA_QNAMEREF = 2000,$/;"	e	enum:__anon36
XML_SCHEMA_FACET_ENUMERATION	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_ENUMERATION,$/;"	e	enum:__anon36
XML_SCHEMA_FACET_FRACTIONDIGITS	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_FRACTIONDIGITS,$/;"	e	enum:__anon36
XML_SCHEMA_FACET_LENGTH	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_LENGTH,$/;"	e	enum:__anon36
XML_SCHEMA_FACET_MAXEXCLUSIVE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_MAXEXCLUSIVE,$/;"	e	enum:__anon36
XML_SCHEMA_FACET_MAXINCLUSIVE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_MAXINCLUSIVE,$/;"	e	enum:__anon36
XML_SCHEMA_FACET_MAXLENGTH	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_MAXLENGTH,$/;"	e	enum:__anon36
XML_SCHEMA_FACET_MINEXCLUSIVE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_MINEXCLUSIVE,$/;"	e	enum:__anon36
XML_SCHEMA_FACET_MININCLUSIVE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_MININCLUSIVE = 1000,$/;"	e	enum:__anon36
XML_SCHEMA_FACET_MINLENGTH	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_MINLENGTH,$/;"	e	enum:__anon36
XML_SCHEMA_FACET_PATTERN	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_PATTERN,$/;"	e	enum:__anon36
XML_SCHEMA_FACET_TOTALDIGITS	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_TOTALDIGITS,$/;"	e	enum:__anon36
XML_SCHEMA_FACET_WHITESPACE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_FACET_WHITESPACE,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_ALL	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_ALL,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_ANY	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_ANY,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_ANY_ATTRIBUTE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_ANY_ATTRIBUTE,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_ATTRIBUTE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_ATTRIBUTE,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_ATTRIBUTEGROUP	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_ATTRIBUTEGROUP,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_ATTRIBUTE_USE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_ATTRIBUTE_USE, $/;"	e	enum:__anon36
XML_SCHEMA_TYPE_BASIC	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_BASIC = 1, \/* A built-in datatype *\/$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_CHOICE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_CHOICE,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_COMPLEX	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_COMPLEX,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_COMPLEX_CONTENT	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_COMPLEX_CONTENT,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_ELEMENT	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_ELEMENT,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_EXTENSION	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_EXTENSION,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_FACET	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_FACET,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_GROUP	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_GROUP,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_IDC_KEY	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_IDC_KEY,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_IDC_KEYREF	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_IDC_KEYREF,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_IDC_UNIQUE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_IDC_UNIQUE,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_LIST	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_LIST,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_NOTATION	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_NOTATION,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_PARTICLE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_PARTICLE = 25, $/;"	e	enum:__anon36
XML_SCHEMA_TYPE_RESTRICTION	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_RESTRICTION,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_SEQUENCE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_SEQUENCE = 6,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_SIMPLE	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_SIMPLE,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_SIMPLE_CONTENT	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_SIMPLE_CONTENT,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_UNION	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_UNION,$/;"	e	enum:__anon36
XML_SCHEMA_TYPE_UR	/usr/include/libxml2/libxml/schemasInternals.h	/^    XML_SCHEMA_TYPE_UR,$/;"	e	enum:__anon36
XML_SCHEMA_VAL_VC_I_CREATE	/usr/include/libxml2/libxml/xmlschemas.h	/^    XML_SCHEMA_VAL_VC_I_CREATE			= 1<<0$/;"	e	enum:__anon22
XML_SCHEMA_WHITESPACE_COLLAPSE	/usr/include/libxml2/libxml/xmlschemastypes.h	/^    XML_SCHEMA_WHITESPACE_COLLAPSE = 3$/;"	e	enum:__anon38
XML_SCHEMA_WHITESPACE_PRESERVE	/usr/include/libxml2/libxml/xmlschemastypes.h	/^    XML_SCHEMA_WHITESPACE_PRESERVE = 1,$/;"	e	enum:__anon38
XML_SCHEMA_WHITESPACE_REPLACE	/usr/include/libxml2/libxml/xmlschemastypes.h	/^    XML_SCHEMA_WHITESPACE_REPLACE = 2,$/;"	e	enum:__anon38
XML_SCHEMA_WHITESPACE_UNKNOWN	/usr/include/libxml2/libxml/xmlschemastypes.h	/^    XML_SCHEMA_WHITESPACE_UNKNOWN = 0,$/;"	e	enum:__anon38
XML_SKIP_IDS	/usr/include/libxml2/libxml/parser.h	156;"	d
XML_SUBSTITUTE_BOTH	/usr/include/libxml2/libxml/parserInternals.h	486;"	d
XML_SUBSTITUTE_NONE	/usr/include/libxml2/libxml/parserInternals.h	468;"	d
XML_SUBSTITUTE_PEREF	/usr/include/libxml2/libxml/parserInternals.h	480;"	d
XML_SUBSTITUTE_REF	/usr/include/libxml2/libxml/parserInternals.h	474;"	d
XML_TEXTREADER_MODE_CLOSED	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_TEXTREADER_MODE_CLOSED = 4,$/;"	e	enum:__anon14
XML_TEXTREADER_MODE_EOF	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_TEXTREADER_MODE_EOF =3,$/;"	e	enum:__anon14
XML_TEXTREADER_MODE_ERROR	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_TEXTREADER_MODE_ERROR = 2,$/;"	e	enum:__anon14
XML_TEXTREADER_MODE_INITIAL	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_TEXTREADER_MODE_INITIAL = 0,$/;"	e	enum:__anon14
XML_TEXTREADER_MODE_INTERACTIVE	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_TEXTREADER_MODE_INTERACTIVE = 1,$/;"	e	enum:__anon14
XML_TEXTREADER_MODE_READING	/usr/include/libxml2/libxml/xmlreader.h	/^    XML_TEXTREADER_MODE_READING = 5$/;"	e	enum:__anon14
XML_TEXT_NODE	/usr/include/libxml2/libxml/tree.h	/^    XML_TEXT_NODE=		3,$/;"	e	enum:__anon24
XML_TREE_INVALID_DEC	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_TREE_INVALID_DEC, \/* 1301 *\/$/;"	e	enum:__anon44
XML_TREE_INVALID_HEX	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_TREE_INVALID_HEX = 1300,$/;"	e	enum:__anon44
XML_TREE_NOT_UTF8	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_TREE_NOT_UTF8, \/* 1303 *\/$/;"	e	enum:__anon44
XML_TREE_UNTERMINATED_ENTITY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_TREE_UNTERMINATED_ENTITY, \/* 1302 *\/$/;"	e	enum:__anon44
XML_WAR_CATALOG_PI	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_WAR_CATALOG_PI, \/* 93 *\/$/;"	e	enum:__anon44
XML_WAR_ENTITY_REDEFINED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_WAR_ENTITY_REDEFINED, \/* 107 *\/$/;"	e	enum:__anon44
XML_WAR_LANG_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_WAR_LANG_VALUE, \/* 98 *\/$/;"	e	enum:__anon44
XML_WAR_NS_COLUMN	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_WAR_NS_COLUMN, \/* 106 *\/$/;"	e	enum:__anon44
XML_WAR_NS_URI	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_WAR_NS_URI, \/* 99 *\/$/;"	e	enum:__anon44
XML_WAR_NS_URI_RELATIVE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_WAR_NS_URI_RELATIVE, \/* 100 *\/$/;"	e	enum:__anon44
XML_WAR_SPACE_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_WAR_SPACE_VALUE, \/* 102 *\/$/;"	e	enum:__anon44
XML_WAR_UNDECLARED_ENTITY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_WAR_UNDECLARED_ENTITY, \/* 27 *\/$/;"	e	enum:__anon44
XML_WAR_UNKNOWN_VERSION	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_WAR_UNKNOWN_VERSION, \/* 97 *\/$/;"	e	enum:__anon44
XML_WITH_AUTOMATA	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_AUTOMATA = 23,$/;"	e	enum:__anon9
XML_WITH_C14N	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_C14N = 14,$/;"	e	enum:__anon9
XML_WITH_CATALOG	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_CATALOG = 15,$/;"	e	enum:__anon9
XML_WITH_DEBUG	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_DEBUG = 28,$/;"	e	enum:__anon9
XML_WITH_DEBUG_MEM	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_DEBUG_MEM = 29,$/;"	e	enum:__anon9
XML_WITH_DEBUG_RUN	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_DEBUG_RUN = 30,$/;"	e	enum:__anon9
XML_WITH_EXPR	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_EXPR = 24,$/;"	e	enum:__anon9
XML_WITH_FTP	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_FTP = 9,$/;"	e	enum:__anon9
XML_WITH_HTML	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_HTML = 12,$/;"	e	enum:__anon9
XML_WITH_HTTP	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_HTTP = 10,$/;"	e	enum:__anon9
XML_WITH_ICONV	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_ICONV = 19,$/;"	e	enum:__anon9
XML_WITH_ICU	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_ICU = 32,$/;"	e	enum:__anon9
XML_WITH_ISO8859X	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_ISO8859X = 20,$/;"	e	enum:__anon9
XML_WITH_LEGACY	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_LEGACY = 13,$/;"	e	enum:__anon9
XML_WITH_LZMA	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_LZMA = 33,$/;"	e	enum:__anon9
XML_WITH_MODULES	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_MODULES = 27,$/;"	e	enum:__anon9
XML_WITH_NONE	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_NONE = 99999 \/* just to be sure of allocation size *\/$/;"	e	enum:__anon9
XML_WITH_OUTPUT	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_OUTPUT = 3,$/;"	e	enum:__anon9
XML_WITH_PATTERN	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_PATTERN = 6,$/;"	e	enum:__anon9
XML_WITH_PUSH	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_PUSH = 4,$/;"	e	enum:__anon9
XML_WITH_READER	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_READER = 5,$/;"	e	enum:__anon9
XML_WITH_REGEXP	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_REGEXP = 22,$/;"	e	enum:__anon9
XML_WITH_SAX1	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_SAX1 = 8,$/;"	e	enum:__anon9
XML_WITH_SCHEMAS	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_SCHEMAS = 25,$/;"	e	enum:__anon9
XML_WITH_SCHEMATRON	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_SCHEMATRON = 26,$/;"	e	enum:__anon9
XML_WITH_THREAD	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_THREAD = 1,$/;"	e	enum:__anon9
XML_WITH_TREE	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_TREE = 2,$/;"	e	enum:__anon9
XML_WITH_UNICODE	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_UNICODE = 21,$/;"	e	enum:__anon9
XML_WITH_VALID	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_VALID = 11,$/;"	e	enum:__anon9
XML_WITH_WRITER	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_WRITER = 7,$/;"	e	enum:__anon9
XML_WITH_XINCLUDE	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_XINCLUDE = 18,$/;"	e	enum:__anon9
XML_WITH_XPATH	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_XPATH = 16,$/;"	e	enum:__anon9
XML_WITH_XPTR	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_XPTR = 17,$/;"	e	enum:__anon9
XML_WITH_ZLIB	/usr/include/libxml2/libxml/parser.h	/^    XML_WITH_ZLIB = 31,$/;"	e	enum:__anon9
XML_XINCLUDE_BUILD_FAILED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_BUILD_FAILED, \/* 1609 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_DEPRECATED_NS	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_DEPRECATED_NS, \/* 1617 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_END	/usr/include/libxml2/libxml/tree.h	/^    XML_XINCLUDE_END=		20$/;"	e	enum:__anon24
XML_XINCLUDE_ENTITY_DEF_MISMATCH	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_ENTITY_DEF_MISMATCH, \/* 1602 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_FALLBACKS_IN_INCLUDE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_FALLBACKS_IN_INCLUDE, \/* 1615 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_FALLBACK_NOT_IN_INCLUDE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_FALLBACK_NOT_IN_INCLUDE, \/* 1616 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_FRAGMENT_ID	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_FRAGMENT_ID, \/* 1618 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_HREF_URI	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_HREF_URI, \/* 1605 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_INCLUDE_IN_INCLUDE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_INCLUDE_IN_INCLUDE, \/* 1614 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_INVALID_CHAR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_INVALID_CHAR, \/* 1608 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_MULTIPLE_ROOT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_MULTIPLE_ROOT, \/* 1611 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_NO_FALLBACK	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_NO_FALLBACK, \/* 1604 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_NO_HREF	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_NO_HREF, \/* 1603 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_PARSE_VALUE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_PARSE_VALUE, \/* 1601 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_RECURSION	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_RECURSION=1600,$/;"	e	enum:__anon44
XML_XINCLUDE_START	/usr/include/libxml2/libxml/tree.h	/^    XML_XINCLUDE_START=		19,$/;"	e	enum:__anon24
XML_XINCLUDE_TEXT_DOCUMENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_TEXT_DOCUMENT, \/* 1607 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_TEXT_FRAGMENT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_TEXT_FRAGMENT, \/* 1606 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_UNKNOWN_ENCODING	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_UNKNOWN_ENCODING, \/* 1610 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_XPTR_FAILED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_XPTR_FAILED, \/* 1612 *\/$/;"	e	enum:__anon44
XML_XINCLUDE_XPTR_RESULT	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XINCLUDE_XPTR_RESULT, \/* 1613 *\/$/;"	e	enum:__anon44
XML_XML_ID	/usr/include/libxml2/libxml/tree.h	110;"	d
XML_XML_NAMESPACE	/usr/include/libxml2/libxml/tree.h	102;"	d
XML_XPATH_CHECKNS	/usr/include/libxml2/libxml/xpath.h	262;"	d
XML_XPATH_ENCODING_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_ENCODING_ERROR, \/* 1220 *\/$/;"	e	enum:__anon44
XML_XPATH_EXPRESSION_OK	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_EXPRESSION_OK = 1200,$/;"	e	enum:__anon44
XML_XPATH_EXPR_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_EXPR_ERROR, \/* 1207 *\/$/;"	e	enum:__anon44
XML_XPATH_INVALID_ARITY	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_INVALID_ARITY, \/* 1212 *\/$/;"	e	enum:__anon44
XML_XPATH_INVALID_CHAR_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_INVALID_CHAR_ERROR, \/* 1221 *\/$/;"	e	enum:__anon44
XML_XPATH_INVALID_CTXT_POSITION	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_INVALID_CTXT_POSITION, \/* 1214 *\/$/;"	e	enum:__anon44
XML_XPATH_INVALID_CTXT_SIZE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_INVALID_CTXT_SIZE, \/* 1213 *\/$/;"	e	enum:__anon44
XML_XPATH_INVALID_OPERAND	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_INVALID_OPERAND, \/* 1210 *\/$/;"	e	enum:__anon44
XML_XPATH_INVALID_PREDICATE_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_INVALID_PREDICATE_ERROR, \/* 1206 *\/$/;"	e	enum:__anon44
XML_XPATH_INVALID_TYPE	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_INVALID_TYPE, \/* 1211 *\/$/;"	e	enum:__anon44
XML_XPATH_MEMORY_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_MEMORY_ERROR, \/* 1215 *\/$/;"	e	enum:__anon44
XML_XPATH_NOVAR	/usr/include/libxml2/libxml/xpath.h	268;"	d
XML_XPATH_NUMBER_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_NUMBER_ERROR, \/* 1201 *\/$/;"	e	enum:__anon44
XML_XPATH_START_LITERAL_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_START_LITERAL_ERROR, \/* 1203 *\/$/;"	e	enum:__anon44
XML_XPATH_UNCLOSED_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_UNCLOSED_ERROR, \/* 1208 *\/$/;"	e	enum:__anon44
XML_XPATH_UNDEF_PREFIX_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_UNDEF_PREFIX_ERROR, \/* 1219 *\/$/;"	e	enum:__anon44
XML_XPATH_UNDEF_VARIABLE_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_UNDEF_VARIABLE_ERROR, \/* 1205 *\/$/;"	e	enum:__anon44
XML_XPATH_UNFINISHED_LITERAL_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_UNFINISHED_LITERAL_ERROR, \/* 1202 *\/$/;"	e	enum:__anon44
XML_XPATH_UNKNOWN_FUNC_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_UNKNOWN_FUNC_ERROR, \/* 1209 *\/$/;"	e	enum:__anon44
XML_XPATH_VARIABLE_REF_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPATH_VARIABLE_REF_ERROR, \/* 1204 *\/$/;"	e	enum:__anon44
XML_XPTR_CHILDSEQ_START	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPTR_CHILDSEQ_START, \/* 1901 *\/$/;"	e	enum:__anon44
XML_XPTR_EVAL_FAILED	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPTR_EVAL_FAILED, \/* 1902 *\/$/;"	e	enum:__anon44
XML_XPTR_EXTRA_OBJECTS	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPTR_EXTRA_OBJECTS, \/* 1903 *\/$/;"	e	enum:__anon44
XML_XPTR_RESOURCE_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPTR_RESOURCE_ERROR, \/* 1217 *\/$/;"	e	enum:__anon44
XML_XPTR_SUB_RESOURCE_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPTR_SUB_RESOURCE_ERROR, \/* 1218 *\/$/;"	e	enum:__anon44
XML_XPTR_SYNTAX_ERROR	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPTR_SYNTAX_ERROR, \/* 1216 *\/$/;"	e	enum:__anon44
XML_XPTR_UNKNOWN_SCHEME	/usr/include/libxml2/libxml/xmlerror.h	/^    XML_XPTR_UNKNOWN_SCHEME = 1900,$/;"	e	enum:__anon44
XPATH_BOOLEAN	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_BOOLEAN = 2,$/;"	e	enum:__anon12
XPATH_ENCODING_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_ENCODING_ERROR,$/;"	e	enum:__anon11
XPATH_EXPRESSION_OK	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_EXPRESSION_OK = 0,$/;"	e	enum:__anon11
XPATH_EXPR_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_EXPR_ERROR,$/;"	e	enum:__anon11
XPATH_INVALID_ARITY	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_INVALID_ARITY,$/;"	e	enum:__anon11
XPATH_INVALID_CHAR_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_INVALID_CHAR_ERROR,$/;"	e	enum:__anon11
XPATH_INVALID_CTXT	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_INVALID_CTXT,$/;"	e	enum:__anon11
XPATH_INVALID_CTXT_POSITION	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_INVALID_CTXT_POSITION,$/;"	e	enum:__anon11
XPATH_INVALID_CTXT_SIZE	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_INVALID_CTXT_SIZE,$/;"	e	enum:__anon11
XPATH_INVALID_OPERAND	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_INVALID_OPERAND,$/;"	e	enum:__anon11
XPATH_INVALID_PREDICATE_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_INVALID_PREDICATE_ERROR,$/;"	e	enum:__anon11
XPATH_INVALID_TYPE	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_INVALID_TYPE,$/;"	e	enum:__anon11
XPATH_LOCATIONSET	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_LOCATIONSET = 7,$/;"	e	enum:__anon12
XPATH_MEMORY_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_MEMORY_ERROR,$/;"	e	enum:__anon11
XPATH_NODESET	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_NODESET = 1,$/;"	e	enum:__anon12
XPATH_NUMBER	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_NUMBER = 3,$/;"	e	enum:__anon12
XPATH_NUMBER_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_NUMBER_ERROR,$/;"	e	enum:__anon11
XPATH_POINT	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_POINT = 5,$/;"	e	enum:__anon12
XPATH_RANGE	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_RANGE = 6,$/;"	e	enum:__anon12
XPATH_STACK_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_STACK_ERROR$/;"	e	enum:__anon11
XPATH_START_LITERAL_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_START_LITERAL_ERROR,$/;"	e	enum:__anon11
XPATH_STRING	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_STRING = 4,$/;"	e	enum:__anon12
XPATH_UNCLOSED_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_UNCLOSED_ERROR,$/;"	e	enum:__anon11
XPATH_UNDEFINED	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_UNDEFINED = 0,$/;"	e	enum:__anon12
XPATH_UNDEF_PREFIX_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_UNDEF_PREFIX_ERROR,$/;"	e	enum:__anon11
XPATH_UNDEF_VARIABLE_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_UNDEF_VARIABLE_ERROR,$/;"	e	enum:__anon11
XPATH_UNFINISHED_LITERAL_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_UNFINISHED_LITERAL_ERROR,$/;"	e	enum:__anon11
XPATH_UNKNOWN_FUNC_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_UNKNOWN_FUNC_ERROR,$/;"	e	enum:__anon11
XPATH_USERS	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_USERS = 8,$/;"	e	enum:__anon12
XPATH_VARIABLE_REF_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_VARIABLE_REF_ERROR,$/;"	e	enum:__anon11
XPATH_XSLT_TREE	/usr/include/libxml2/libxml/xpath.h	/^    XPATH_XSLT_TREE = 9  \/* An XSLT value tree, non modifiable *\/$/;"	e	enum:__anon12
XPTR_RESOURCE_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPTR_RESOURCE_ERROR,$/;"	e	enum:__anon11
XPTR_SUB_RESOURCE_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPTR_SUB_RESOURCE_ERROR,$/;"	e	enum:__anon11
XPTR_SYNTAX_ERROR	/usr/include/libxml2/libxml/xpath.h	/^    XPTR_SYNTAX_ERROR,$/;"	e	enum:__anon11
XP_ERROR	/usr/include/libxml2/libxml/xpathInternals.h	256;"	d
XP_ERROR0	/usr/include/libxml2/libxml/xpathInternals.h	265;"	d
_REENTRANT	/usr/include/libxml2/libxml/xmlexports.h	101;"	d
_REENTRANT	/usr/include/libxml2/libxml/xmlexports.h	130;"	d
_REENTRANT	/usr/include/libxml2/libxml/xmlexports.h	77;"	d
__DEBUG_MEMORY_ALLOC__	/usr/include/libxml2/libxml/xmlmemory.h	13;"	d
__DEBUG_XML__	/usr/include/libxml2/libxml/debugXML.h	12;"	d
__DOCB_PARSER_H__	/usr/include/libxml2/libxml/DOCBparser.h	12;"	d
__HTML_PARSER_H__	/usr/include/libxml2/libxml/HTMLparser.h	14;"	d
__HTML_TREE_H__	/usr/include/libxml2/libxml/HTMLtree.h	12;"	d
__NANO_FTP_H__	/usr/include/libxml2/libxml/nanoftp.h	12;"	d
__NANO_HTTP_H__	/usr/include/libxml2/libxml/nanohttp.h	12;"	d
__XML_AUTOMATA_H__	/usr/include/libxml2/libxml/xmlautomata.h	11;"	d
__XML_C14N_H__	/usr/include/libxml2/libxml/c14n.h	18;"	d
__XML_CATALOG_H__	/usr/include/libxml2/libxml/catalog.h	18;"	d
__XML_CHAR_ENCODING_H__	/usr/include/libxml2/libxml/encoding.h	23;"	d
__XML_CHVALID_H__	/usr/include/libxml2/libxml/chvalid.h	15;"	d
__XML_DICT_H__	/usr/include/libxml2/libxml/dict.h	12;"	d
__XML_ENTITIES_H__	/usr/include/libxml2/libxml/entities.h	12;"	d
__XML_ERROR_H__	/usr/include/libxml2/libxml/xmlerror.h	13;"	d
__XML_EXPORTS_H__	/usr/include/libxml2/libxml/xmlexports.h	11;"	d
__XML_GLOBALS_H	/usr/include/libxml2/libxml/globals.h	15;"	d
__XML_HASH_H__	/usr/include/libxml2/libxml/hash.h	12;"	d
__XML_IO_H__	/usr/include/libxml2/libxml/xmlIO.h	11;"	d
__XML_LINK_INCLUDE__	/usr/include/libxml2/libxml/list.h	12;"	d
__XML_MODULE_H__	/usr/include/libxml2/libxml/xmlmodule.h	12;"	d
__XML_PARSER_H__	/usr/include/libxml2/libxml/parser.h	11;"	d
__XML_PARSER_INTERNALS_H__	/usr/include/libxml2/libxml/parserInternals.h	13;"	d
__XML_PATTERN_H__	/usr/include/libxml2/libxml/pattern.h	12;"	d
__XML_REGEXP_H__	/usr/include/libxml2/libxml/xmlregexp.h	12;"	d
__XML_RELAX_NG__	/usr/include/libxml2/libxml/relaxng.h	11;"	d
__XML_SAX2_H__	/usr/include/libxml2/libxml/SAX2.h	13;"	d
__XML_SAX_H__	/usr/include/libxml2/libxml/SAX.h	13;"	d
__XML_SCHEMATRON_H__	/usr/include/libxml2/libxml/schematron.h	12;"	d
__XML_SCHEMA_H__	/usr/include/libxml2/libxml/xmlschemas.h	13;"	d
__XML_SCHEMA_INTERNALS_H__	/usr/include/libxml2/libxml/schemasInternals.h	15;"	d
__XML_SCHEMA_TYPES_H__	/usr/include/libxml2/libxml/xmlschemastypes.h	13;"	d
__XML_STRING_H__	/usr/include/libxml2/libxml/xmlstring.h	12;"	d
__XML_THREADS_H__	/usr/include/libxml2/libxml/threads.h	12;"	d
__XML_TREE_H__	/usr/include/libxml2/libxml/tree.h	13;"	d
__XML_UNICODE_H__	/usr/include/libxml2/libxml/xmlunicode.h	16;"	d
__XML_URI_H__	/usr/include/libxml2/libxml/uri.h	12;"	d
__XML_VALID_H__	/usr/include/libxml2/libxml/valid.h	12;"	d
__XML_VERSION_H__	/usr/include/libxml2/libxml/xmlversion.h	11;"	d
__XML_XINCLUDE_H__	/usr/include/libxml2/libxml/xinclude.h	14;"	d
__XML_XLINK_H__	/usr/include/libxml2/libxml/xlink.h	11;"	d
__XML_XMLREADER_H__	/usr/include/libxml2/libxml/xmlreader.h	11;"	d
__XML_XMLSAVE_H__	/usr/include/libxml2/libxml/xmlsave.h	11;"	d
__XML_XMLWRITER_H__	/usr/include/libxml2/libxml/xmlwriter.h	12;"	d
__XML_XPATH_H__	/usr/include/libxml2/libxml/xpath.h	20;"	d
__XML_XPATH_INTERNALS_H__	/usr/include/libxml2/libxml/xpathInternals.h	13;"	d
__XML_XPTR_H__	/usr/include/libxml2/libxml/xpointer.h	18;"	d
__docbDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN  xmlSAXHandlerV1 * XMLCALL __docbDefaultSAXHandler(void);$/;"	p	signature:(void)
__htmlDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlSAXHandlerV1 * XMLCALL __htmlDefaultSAXHandler(void);$/;"	p	signature:(void)
__oldXMLWDcompatibility	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int * XMLCALL __oldXMLWDcompatibility(void);$/;"	p	signature:(void)
__xmlBufferAllocScheme	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlBufferAllocationScheme * XMLCALL __xmlBufferAllocScheme(void);$/;"	p	signature:(void)
__xmlDefaultBufferSize	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int * XMLCALL __xmlDefaultBufferSize(void);$/;"	p	signature:(void)
__xmlDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlSAXHandlerV1 * XMLCALL __xmlDefaultSAXHandler(void);$/;"	p	signature:(void)
__xmlDefaultSAXLocator	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlSAXLocator * XMLCALL __xmlDefaultSAXLocator(void);$/;"	p	signature:(void)
__xmlDeregisterNodeDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlDeregisterNodeFunc * XMLCALL __xmlDeregisterNodeDefaultValue(void);$/;"	p	signature:(void)
__xmlDoValidityCheckingDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int * XMLCALL __xmlDoValidityCheckingDefaultValue(void);$/;"	p	signature:(void)
__xmlErrEncoding	/usr/include/libxml2/libxml/parserInternals.h	/^			__xmlErrEncoding	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlParserErrors xmlerr, const char *msg, const xmlChar * str1, const xmlChar * str2)
__xmlFree	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN  xmlFreeFunc * XMLCALL __xmlFree(void);$/;"	p	signature:(void)
__xmlGenericError	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlGenericErrorFunc * XMLCALL __xmlGenericError(void);$/;"	p	signature:(void)
__xmlGenericErrorContext	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN void * * XMLCALL __xmlGenericErrorContext(void);$/;"	p	signature:(void)
__xmlGetWarningsDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int * XMLCALL __xmlGetWarningsDefaultValue(void);$/;"	p	signature:(void)
__xmlIndentTreeOutput	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int * XMLCALL __xmlIndentTreeOutput(void);$/;"	p	signature:(void)
__xmlKeepBlanksDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int * XMLCALL __xmlKeepBlanksDefaultValue(void);$/;"	p	signature:(void)
__xmlLastError	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlError * XMLCALL __xmlLastError(void);$/;"	p	signature:(void)
__xmlLineNumbersDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int * XMLCALL __xmlLineNumbersDefaultValue(void);$/;"	p	signature:(void)
__xmlLoadExtDtdDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int * XMLCALL __xmlLoadExtDtdDefaultValue(void);$/;"	p	signature:(void)
__xmlMalloc	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN  xmlMallocFunc * XMLCALL __xmlMalloc(void);$/;"	p	signature:(void)
__xmlMallocAtomic	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN  xmlMallocFunc * XMLCALL __xmlMallocAtomic(void);$/;"	p	signature:(void)
__xmlMemStrdup	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN  xmlStrdupFunc * XMLCALL __xmlMemStrdup(void);$/;"	p	signature:(void)
__xmlOutputBufferCreateFilename	/usr/include/libxml2/libxml/xmlIO.h	/^	__xmlOutputBufferCreateFilename(const char *URI,$/;"	p	signature:(const char *URI, xmlCharEncodingHandlerPtr encoder, int compression)
__xmlOutputBufferCreateFilenameValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlOutputBufferCreateFilenameFunc * XMLCALL __xmlOutputBufferCreateFilenameValue(void);$/;"	p	signature:(void)
__xmlParserDebugEntities	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int * XMLCALL __xmlParserDebugEntities(void);$/;"	p	signature:(void)
__xmlParserInputBufferCreateFilename	/usr/include/libxml2/libxml/xmlIO.h	/^	__xmlParserInputBufferCreateFilename(const char *URI,$/;"	p	signature:(const char *URI, xmlCharEncoding enc)
__xmlParserInputBufferCreateFilenameValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlParserInputBufferCreateFilenameFunc * XMLCALL __xmlParserInputBufferCreateFilenameValue(void);$/;"	p	signature:(void)
__xmlParserVersion	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN const char * * XMLCALL __xmlParserVersion(void);$/;"	p	signature:(void)
__xmlPedanticParserDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int * XMLCALL __xmlPedanticParserDefaultValue(void);$/;"	p	signature:(void)
__xmlRealloc	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN  xmlReallocFunc * XMLCALL __xmlRealloc(void);$/;"	p	signature:(void)
__xmlRegisterNodeDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlRegisterNodeFunc * XMLCALL __xmlRegisterNodeDefaultValue(void);$/;"	p	signature:(void)
__xmlSaveNoEmptyTags	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int * XMLCALL __xmlSaveNoEmptyTags(void);$/;"	p	signature:(void)
__xmlSimpleError	/usr/include/libxml2/libxml/xmlerror.h	/^    __xmlSimpleError		(int domain,$/;"	p	signature:(int domain, int code, xmlNodePtr node, const char *msg, const char *extra)
__xmlStructuredError	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlStructuredErrorFunc * XMLCALL __xmlStructuredError(void);$/;"	p	signature:(void)
__xmlStructuredErrorContext	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN void * * XMLCALL __xmlStructuredErrorContext(void);$/;"	p	signature:(void)
__xmlSubstituteEntitiesDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int * XMLCALL __xmlSubstituteEntitiesDefaultValue(void);$/;"	p	signature:(void)
__xmlTreeIndentString	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN const char * * XMLCALL __xmlTreeIndentString(void);$/;"	p	signature:(void)
_htmlElemDesc	/usr/include/libxml2/libxml/HTMLparser.h	/^struct _htmlElemDesc {$/;"	s
_htmlElemDesc::attrs_depr	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char** attrs_depr;		\/* Additional deprecated attributes *\/$/;"	m	struct:_htmlElemDesc	access:public
_htmlElemDesc::attrs_opt	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char** attrs_opt;		\/* Optional Attributes *\/$/;"	m	struct:_htmlElemDesc	access:public
_htmlElemDesc::attrs_req	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char** attrs_req;		\/* Required attributes *\/$/;"	m	struct:_htmlElemDesc	access:public
_htmlElemDesc::defaultsubelt	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char* defaultsubelt;	\/* subelement for suggested auto-repair$/;"	m	struct:_htmlElemDesc	access:public
_htmlElemDesc::depr	/usr/include/libxml2/libxml/HTMLparser.h	/^    char depr;          \/* Is this a deprecated element ? *\/$/;"	m	struct:_htmlElemDesc	access:public
_htmlElemDesc::desc	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char *desc;   \/* the description *\/$/;"	m	struct:_htmlElemDesc	access:public
_htmlElemDesc::dtd	/usr/include/libxml2/libxml/HTMLparser.h	/^    char dtd;           \/* 1: only in Loose DTD, 2: only Frameset one *\/$/;"	m	struct:_htmlElemDesc	access:public
_htmlElemDesc::empty	/usr/include/libxml2/libxml/HTMLparser.h	/^    char empty;         \/* Is this an empty element ? *\/$/;"	m	struct:_htmlElemDesc	access:public
_htmlElemDesc::endTag	/usr/include/libxml2/libxml/HTMLparser.h	/^    char endTag;        \/* Whether the end tag can be implied *\/$/;"	m	struct:_htmlElemDesc	access:public
_htmlElemDesc::isinline	/usr/include/libxml2/libxml/HTMLparser.h	/^    char isinline;      \/* is this a block 0 or inline 1 element *\/$/;"	m	struct:_htmlElemDesc	access:public
_htmlElemDesc::name	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char *name;	\/* The tag name *\/$/;"	m	struct:_htmlElemDesc	access:public
_htmlElemDesc::saveEndTag	/usr/include/libxml2/libxml/HTMLparser.h	/^    char saveEndTag;    \/* Whether the end tag should be saved *\/$/;"	m	struct:_htmlElemDesc	access:public
_htmlElemDesc::startTag	/usr/include/libxml2/libxml/HTMLparser.h	/^    char startTag;      \/* Whether the start tag can be implied *\/$/;"	m	struct:_htmlElemDesc	access:public
_htmlElemDesc::subelts	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char** subelts;		\/* allowed sub-elements of this element *\/$/;"	m	struct:_htmlElemDesc	access:public
_htmlEntityDesc	/usr/include/libxml2/libxml/HTMLparser.h	/^struct _htmlEntityDesc {$/;"	s
_htmlEntityDesc::desc	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char *desc;   \/* the description *\/$/;"	m	struct:_htmlEntityDesc	access:public
_htmlEntityDesc::name	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char *name;	\/* The entity name *\/$/;"	m	struct:_htmlEntityDesc	access:public
_htmlEntityDesc::value	/usr/include/libxml2/libxml/HTMLparser.h	/^    unsigned int value;	\/* the UNICODE value for the character *\/$/;"	m	struct:_htmlEntityDesc	access:public
_private	/usr/include/libxml2/libxml/entities.h	/^    void           *_private;	        \/* application data *\/$/;"	m	struct:_xmlEntity	access:public
_private	/usr/include/libxml2/libxml/parser.h	/^    void              *_private;      \/* For user data, libxml won't touch it *\/$/;"	m	struct:_xmlParserCtxt	access:public
_private	/usr/include/libxml2/libxml/parser.h	/^    void *_private;$/;"	m	struct:_xmlSAXHandler	access:public
_private	/usr/include/libxml2/libxml/schemasInternals.h	/^    void *_private;        \/* unused by the library for users or bindings *\/$/;"	m	struct:_xmlSchema	access:public
_private	/usr/include/libxml2/libxml/tree.h	/^    void           *_private;	        \/* application data *\/$/;"	m	struct:_xmlAttribute	access:public
_private	/usr/include/libxml2/libxml/tree.h	/^    void           *_private;	        \/* application data *\/$/;"	m	struct:_xmlElement	access:public
_private	/usr/include/libxml2/libxml/tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlAttr	access:public
_private	/usr/include/libxml2/libxml/tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlDoc	access:public
_private	/usr/include/libxml2/libxml/tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlDtd	access:public
_private	/usr/include/libxml2/libxml/tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlNode	access:public
_private	/usr/include/libxml2/libxml/tree.h	/^    void           *_private;   \/* application data *\/$/;"	m	struct:_xmlNs	access:public
_private	/usr/include/libxml2/libxml/tree.h	/^    void * _private;$/;"	m	struct:_xmlDOMWrapCtxt	access:public
_uconv_t	/usr/include/libxml2/libxml/encoding.h	/^struct _uconv_t {$/;"	s
_uconv_t::uconv	/usr/include/libxml2/libxml/encoding.h	/^  UConverter *uconv; \/* for conversion between an encoding and UTF-16 *\/$/;"	m	struct:_uconv_t	access:public
_uconv_t::utf8	/usr/include/libxml2/libxml/encoding.h	/^  UConverter *utf8; \/* for conversion between UTF-8 and UTF-16 *\/$/;"	m	struct:_uconv_t	access:public
_xlinkHandler	/usr/include/libxml2/libxml/xlink.h	/^struct _xlinkHandler {$/;"	s
_xlinkHandler::extended	/usr/include/libxml2/libxml/xlink.h	/^    xlinkExtendedLinkFunk extended;$/;"	m	struct:_xlinkHandler	access:public
_xlinkHandler::set	/usr/include/libxml2/libxml/xlink.h	/^    xlinkExtendedLinkSetFunk set;$/;"	m	struct:_xlinkHandler	access:public
_xlinkHandler::simple	/usr/include/libxml2/libxml/xlink.h	/^    xlinkSimpleLinkFunk simple;$/;"	m	struct:_xlinkHandler	access:public
_xmlAttr	/usr/include/libxml2/libxml/tree.h	/^struct _xmlAttr {$/;"	s
_xmlAttr::_private	/usr/include/libxml2/libxml/tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlAttr	access:public
_xmlAttr::atype	/usr/include/libxml2/libxml/tree.h	/^    xmlAttributeType atype;     \/* the attribute type if validating *\/$/;"	m	struct:_xmlAttr	access:public
_xmlAttr::children	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *children;	\/* the value of the property *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlNode	access:public
_xmlAttr::doc	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc  *doc;	\/* the containing document *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlDoc	access:public
_xmlAttr::last	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *last;	\/* NULL *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlNode	access:public
_xmlAttr::name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar   *name;      \/* the name of the property *\/$/;"	m	struct:_xmlAttr	access:public
_xmlAttr::next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlAttr *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlAttr	access:public
_xmlAttr::ns	/usr/include/libxml2/libxml/tree.h	/^    xmlNs           *ns;        \/* pointer to the associated namespace *\/$/;"	m	struct:_xmlAttr	access:public
_xmlAttr::parent	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlNode	access:public
_xmlAttr::prev	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlAttr *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlAttr	access:public
_xmlAttr::psvi	/usr/include/libxml2/libxml/tree.h	/^    void            *psvi;	\/* for type\/PSVI informations *\/$/;"	m	struct:_xmlAttr	access:public
_xmlAttr::type	/usr/include/libxml2/libxml/tree.h	/^    xmlElementType   type;      \/* XML_ATTRIBUTE_NODE, must be second ! *\/$/;"	m	struct:_xmlAttr	access:public
_xmlAttribute	/usr/include/libxml2/libxml/tree.h	/^struct _xmlAttribute {$/;"	s
_xmlAttribute::_private	/usr/include/libxml2/libxml/tree.h	/^    void           *_private;	        \/* application data *\/$/;"	m	struct:_xmlAttribute	access:public
_xmlAttribute::atype	/usr/include/libxml2/libxml/tree.h	/^    xmlAttributeType       atype;	\/* The attribute type *\/$/;"	m	struct:_xmlAttribute	access:public
_xmlAttribute::children	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode    *children;	\/* NULL *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode	access:public
_xmlAttribute::def	/usr/include/libxml2/libxml/tree.h	/^    xmlAttributeDefault      def;	\/* the default *\/$/;"	m	struct:_xmlAttribute	access:public
_xmlAttribute::defaultValue	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar  *defaultValue;	\/* or the default value *\/$/;"	m	struct:_xmlAttribute	access:public
_xmlAttribute::doc	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc          *doc;       \/* the containing document *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlDoc	access:public
_xmlAttribute::elem	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar          *elem;	\/* Element holding the attribute *\/$/;"	m	struct:_xmlAttribute	access:public
_xmlAttribute::last	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode        *last;	\/* NULL *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode	access:public
_xmlAttribute::name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar          *name;	\/* Attribute name *\/$/;"	m	struct:_xmlAttribute	access:public
_xmlAttribute::next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode        *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode	access:public
_xmlAttribute::nexth	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlAttribute  *nexth;	\/* next in hash table *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlAttribute	access:public
_xmlAttribute::parent	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDtd       *parent;	\/* -> DTD *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlDtd	access:public
_xmlAttribute::prefix	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar        *prefix;	\/* the namespace prefix if any *\/$/;"	m	struct:_xmlAttribute	access:public
_xmlAttribute::prev	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode        *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode	access:public
_xmlAttribute::tree	/usr/include/libxml2/libxml/tree.h	/^    xmlEnumerationPtr       tree;       \/* or the enumeration tree if any *\/$/;"	m	struct:_xmlAttribute	access:public
_xmlAttribute::type	/usr/include/libxml2/libxml/tree.h	/^    xmlElementType          type;       \/* XML_ATTRIBUTE_DECL, must be second ! *\/$/;"	m	struct:_xmlAttribute	access:public
_xmlBuffer	/usr/include/libxml2/libxml/tree.h	/^struct _xmlBuffer {$/;"	s
_xmlBuffer::alloc	/usr/include/libxml2/libxml/tree.h	/^    xmlBufferAllocationScheme alloc; \/* The realloc method *\/$/;"	m	struct:_xmlBuffer	access:public
_xmlBuffer::content	/usr/include/libxml2/libxml/tree.h	/^    xmlChar *content;		\/* The buffer content UTF8 *\/$/;"	m	struct:_xmlBuffer	access:public
_xmlBuffer::contentIO	/usr/include/libxml2/libxml/tree.h	/^    xmlChar *contentIO;		\/* in IO mode we may have a different base *\/$/;"	m	struct:_xmlBuffer	access:public
_xmlBuffer::size	/usr/include/libxml2/libxml/tree.h	/^    unsigned int size;		\/* The buffer size *\/$/;"	m	struct:_xmlBuffer	access:public
_xmlBuffer::use	/usr/include/libxml2/libxml/tree.h	/^    unsigned int use;		\/* The buffer size used *\/$/;"	m	struct:_xmlBuffer	access:public
_xmlChLRange	/usr/include/libxml2/libxml/chvalid.h	/^struct _xmlChLRange {$/;"	s
_xmlChLRange::high	/usr/include/libxml2/libxml/chvalid.h	/^    unsigned int	high;$/;"	m	struct:_xmlChLRange	access:public
_xmlChLRange::low	/usr/include/libxml2/libxml/chvalid.h	/^    unsigned int	low;$/;"	m	struct:_xmlChLRange	access:public
_xmlChRangeGroup	/usr/include/libxml2/libxml/chvalid.h	/^struct _xmlChRangeGroup {$/;"	s
_xmlChRangeGroup::longRange	/usr/include/libxml2/libxml/chvalid.h	/^    const xmlChLRange	*longRange;$/;"	m	struct:_xmlChRangeGroup	access:public
_xmlChRangeGroup::nbLongRange	/usr/include/libxml2/libxml/chvalid.h	/^    int			nbLongRange;$/;"	m	struct:_xmlChRangeGroup	access:public
_xmlChRangeGroup::nbShortRange	/usr/include/libxml2/libxml/chvalid.h	/^    int			nbShortRange;$/;"	m	struct:_xmlChRangeGroup	access:public
_xmlChRangeGroup::shortRange	/usr/include/libxml2/libxml/chvalid.h	/^    const xmlChSRange	*shortRange;	\/* points to an array of ranges *\/$/;"	m	struct:_xmlChRangeGroup	access:public
_xmlChSRange	/usr/include/libxml2/libxml/chvalid.h	/^struct _xmlChSRange {$/;"	s
_xmlChSRange::high	/usr/include/libxml2/libxml/chvalid.h	/^    unsigned short	high;$/;"	m	struct:_xmlChSRange	access:public
_xmlChSRange::low	/usr/include/libxml2/libxml/chvalid.h	/^    unsigned short	low;$/;"	m	struct:_xmlChSRange	access:public
_xmlCharEncodingHandler	/usr/include/libxml2/libxml/encoding.h	/^struct _xmlCharEncodingHandler {$/;"	s
_xmlCharEncodingHandler::iconv_in	/usr/include/libxml2/libxml/encoding.h	/^    iconv_t                    iconv_in;$/;"	m	struct:_xmlCharEncodingHandler	access:public
_xmlCharEncodingHandler::iconv_out	/usr/include/libxml2/libxml/encoding.h	/^    iconv_t                    iconv_out;$/;"	m	struct:_xmlCharEncodingHandler	access:public
_xmlCharEncodingHandler::input	/usr/include/libxml2/libxml/encoding.h	/^    xmlCharEncodingInputFunc   input;$/;"	m	struct:_xmlCharEncodingHandler	access:public
_xmlCharEncodingHandler::name	/usr/include/libxml2/libxml/encoding.h	/^    char                       *name;$/;"	m	struct:_xmlCharEncodingHandler	access:public
_xmlCharEncodingHandler::output	/usr/include/libxml2/libxml/encoding.h	/^    xmlCharEncodingOutputFunc  output;$/;"	m	struct:_xmlCharEncodingHandler	access:public
_xmlCharEncodingHandler::uconv_in	/usr/include/libxml2/libxml/encoding.h	/^    uconv_t                    *uconv_in;$/;"	m	struct:_xmlCharEncodingHandler	access:public
_xmlCharEncodingHandler::uconv_out	/usr/include/libxml2/libxml/encoding.h	/^    uconv_t                    *uconv_out;$/;"	m	struct:_xmlCharEncodingHandler	access:public
_xmlDOMWrapCtxt	/usr/include/libxml2/libxml/tree.h	/^struct _xmlDOMWrapCtxt {$/;"	s
_xmlDOMWrapCtxt::_private	/usr/include/libxml2/libxml/tree.h	/^    void * _private;$/;"	m	struct:_xmlDOMWrapCtxt	access:public
_xmlDOMWrapCtxt::getNsForNodeFunc	/usr/include/libxml2/libxml/tree.h	/^    xmlDOMWrapAcquireNsFunction getNsForNodeFunc;$/;"	m	struct:_xmlDOMWrapCtxt	access:public
_xmlDOMWrapCtxt::namespaceMap	/usr/include/libxml2/libxml/tree.h	/^    void * namespaceMap;$/;"	m	struct:_xmlDOMWrapCtxt	access:public
_xmlDOMWrapCtxt::type	/usr/include/libxml2/libxml/tree.h	/^    int type;$/;"	m	struct:_xmlDOMWrapCtxt	access:public
_xmlDoc	/usr/include/libxml2/libxml/tree.h	/^struct _xmlDoc {$/;"	s
_xmlDoc::URL	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar  *URL;	\/* The URI for that document *\/$/;"	m	struct:_xmlDoc	access:public
_xmlDoc::_private	/usr/include/libxml2/libxml/tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlDoc	access:public
_xmlDoc::charset	/usr/include/libxml2/libxml/tree.h	/^    int             charset;    \/* encoding of the in-memory content$/;"	m	struct:_xmlDoc	access:public
_xmlDoc::children	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *children;	\/* the document tree *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode	access:public
_xmlDoc::compression	/usr/include/libxml2/libxml/tree.h	/^    int             compression;\/* level of zlib compression *\/$/;"	m	struct:_xmlDoc	access:public
_xmlDoc::dict	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDict *dict;      \/* dict used to allocate names or NULL *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDict	access:public
_xmlDoc::doc	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc  *doc;	\/* autoreference to itself *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDoc	access:public
_xmlDoc::encoding	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar  *encoding;   \/* external initial encoding, if any *\/$/;"	m	struct:_xmlDoc	access:public
_xmlDoc::extSubset	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDtd  *extSubset;	\/* the document external subset *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDtd	access:public
_xmlDoc::ids	/usr/include/libxml2/libxml/tree.h	/^    void           *ids;        \/* Hash table for ID attributes if any *\/$/;"	m	struct:_xmlDoc	access:public
_xmlDoc::intSubset	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDtd  *intSubset;	\/* the document internal subset *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDtd	access:public
_xmlDoc::last	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *last;	\/* last child link *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode	access:public
_xmlDoc::name	/usr/include/libxml2/libxml/tree.h	/^    char           *name;	\/* name\/filename\/URI of the document *\/$/;"	m	struct:_xmlDoc	access:public
_xmlDoc::next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode	access:public
_xmlDoc::oldNs	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNs   *oldNs;	\/* Global namespace, the old way *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNs	access:public
_xmlDoc::parent	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode	access:public
_xmlDoc::parseFlags	/usr/include/libxml2/libxml/tree.h	/^    int             parseFlags;	\/* set of xmlParserOption used to parse the$/;"	m	struct:_xmlDoc	access:public
_xmlDoc::prev	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode	access:public
_xmlDoc::properties	/usr/include/libxml2/libxml/tree.h	/^    int             properties;	\/* set of xmlDocProperties for this document$/;"	m	struct:_xmlDoc	access:public
_xmlDoc::psvi	/usr/include/libxml2/libxml/tree.h	/^    void           *psvi;	\/* for type\/PSVI informations *\/$/;"	m	struct:_xmlDoc	access:public
_xmlDoc::refs	/usr/include/libxml2/libxml/tree.h	/^    void           *refs;       \/* Hash table for IDREFs attributes if any *\/$/;"	m	struct:_xmlDoc	access:public
_xmlDoc::standalone	/usr/include/libxml2/libxml/tree.h	/^    int             standalone; \/* standalone document (no external refs) $/;"	m	struct:_xmlDoc	access:public
_xmlDoc::type	/usr/include/libxml2/libxml/tree.h	/^    xmlElementType  type;       \/* XML_DOCUMENT_NODE, must be second ! *\/$/;"	m	struct:_xmlDoc	access:public
_xmlDoc::version	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar  *version;	\/* the XML version string *\/$/;"	m	struct:_xmlDoc	access:public
_xmlDtd	/usr/include/libxml2/libxml/tree.h	/^struct _xmlDtd {$/;"	s
_xmlDtd::ExternalID	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar *ExternalID;	\/* External identifier for PUBLIC DTD *\/$/;"	m	struct:_xmlDtd	access:public
_xmlDtd::SystemID	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar *SystemID;	\/* URI for a SYSTEM or PUBLIC DTD *\/$/;"	m	struct:_xmlDtd	access:public
_xmlDtd::_private	/usr/include/libxml2/libxml/tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlDtd	access:public
_xmlDtd::attributes	/usr/include/libxml2/libxml/tree.h	/^    void          *attributes;  \/* Hash table for attributes if any *\/$/;"	m	struct:_xmlDtd	access:public
_xmlDtd::children	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *children;	\/* the value of the property link *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode	access:public
_xmlDtd::doc	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc  *doc;	\/* the containing document *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlDoc	access:public
_xmlDtd::elements	/usr/include/libxml2/libxml/tree.h	/^    void          *elements;    \/* Hash table for elements if any *\/$/;"	m	struct:_xmlDtd	access:public
_xmlDtd::entities	/usr/include/libxml2/libxml/tree.h	/^    void          *entities;    \/* Hash table for entities if any *\/$/;"	m	struct:_xmlDtd	access:public
_xmlDtd::last	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *last;	\/* last child link *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode	access:public
_xmlDtd::name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar *name;	\/* Name of the DTD *\/$/;"	m	struct:_xmlDtd	access:public
_xmlDtd::next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode	access:public
_xmlDtd::notations	/usr/include/libxml2/libxml/tree.h	/^    void          *notations;   \/* Hash table for notations if any *\/$/;"	m	struct:_xmlDtd	access:public
_xmlDtd::parent	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc  *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlDoc	access:public
_xmlDtd::pentities	/usr/include/libxml2/libxml/tree.h	/^    void          *pentities;   \/* Hash table for param entities if any *\/$/;"	m	struct:_xmlDtd	access:public
_xmlDtd::prev	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode	access:public
_xmlDtd::type	/usr/include/libxml2/libxml/tree.h	/^    xmlElementType  type;       \/* XML_DTD_NODE, must be second ! *\/$/;"	m	struct:_xmlDtd	access:public
_xmlElement	/usr/include/libxml2/libxml/tree.h	/^struct _xmlElement {$/;"	s
_xmlElement::_private	/usr/include/libxml2/libxml/tree.h	/^    void           *_private;	        \/* application data *\/$/;"	m	struct:_xmlElement	access:public
_xmlElement::attributes	/usr/include/libxml2/libxml/tree.h	/^    xmlAttributePtr   attributes;	\/* List of the declared attributes *\/$/;"	m	struct:_xmlElement	access:public
_xmlElement::children	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode    *children;	\/* NULL *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode	access:public
_xmlElement::contModel	/usr/include/libxml2/libxml/tree.h	/^    void	      *contModel;$/;"	m	struct:_xmlElement	access:public
_xmlElement::contModel	/usr/include/libxml2/libxml/tree.h	/^    xmlRegexpPtr       contModel;	\/* the validating regexp *\/$/;"	m	struct:_xmlElement	access:public
_xmlElement::content	/usr/include/libxml2/libxml/tree.h	/^    xmlElementContentPtr content;	\/* the allowed element content *\/$/;"	m	struct:_xmlElement	access:public
_xmlElement::doc	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc          *doc;       \/* the containing document *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlDoc	access:public
_xmlElement::etype	/usr/include/libxml2/libxml/tree.h	/^    xmlElementTypeVal      etype;	\/* The type *\/$/;"	m	struct:_xmlElement	access:public
_xmlElement::last	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode        *last;	\/* NULL *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode	access:public
_xmlElement::name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar          *name;	\/* Element name *\/$/;"	m	struct:_xmlElement	access:public
_xmlElement::next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode        *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode	access:public
_xmlElement::parent	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDtd       *parent;	\/* -> DTD *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlDtd	access:public
_xmlElement::prefix	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar        *prefix;	\/* the namespace prefix if any *\/$/;"	m	struct:_xmlElement	access:public
_xmlElement::prev	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode        *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode	access:public
_xmlElement::type	/usr/include/libxml2/libxml/tree.h	/^    xmlElementType          type;       \/* XML_ELEMENT_DECL, must be second ! *\/$/;"	m	struct:_xmlElement	access:public
_xmlElementContent	/usr/include/libxml2/libxml/tree.h	/^struct _xmlElementContent {$/;"	s
_xmlElementContent::c1	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlElementContent *c1;	\/* first child *\/$/;"	m	struct:_xmlElementContent	typeref:struct:_xmlElementContent::_xmlElementContent	access:public
_xmlElementContent::c2	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlElementContent *c2;	\/* second child *\/$/;"	m	struct:_xmlElementContent	typeref:struct:_xmlElementContent::_xmlElementContent	access:public
_xmlElementContent::name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar             *name;	\/* Element name *\/$/;"	m	struct:_xmlElementContent	access:public
_xmlElementContent::ocur	/usr/include/libxml2/libxml/tree.h	/^    xmlElementContentOccur    ocur;	\/* ONCE, OPT, MULT or PLUS *\/$/;"	m	struct:_xmlElementContent	access:public
_xmlElementContent::parent	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlElementContent *parent;	\/* parent *\/$/;"	m	struct:_xmlElementContent	typeref:struct:_xmlElementContent::_xmlElementContent	access:public
_xmlElementContent::prefix	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar             *prefix;	\/* Namespace prefix *\/$/;"	m	struct:_xmlElementContent	access:public
_xmlElementContent::type	/usr/include/libxml2/libxml/tree.h	/^    xmlElementContentType     type;	\/* PCDATA, ELEMENT, SEQ or OR *\/$/;"	m	struct:_xmlElementContent	access:public
_xmlEntity	/usr/include/libxml2/libxml/entities.h	/^struct _xmlEntity {$/;"	s
_xmlEntity::ExternalID	/usr/include/libxml2/libxml/entities.h	/^    const xmlChar    *ExternalID;	\/* External identifier for PUBLIC *\/$/;"	m	struct:_xmlEntity	access:public
_xmlEntity::SystemID	/usr/include/libxml2/libxml/entities.h	/^    const xmlChar      *SystemID;	\/* URI for a SYSTEM or PUBLIC Entity *\/$/;"	m	struct:_xmlEntity	access:public
_xmlEntity::URI	/usr/include/libxml2/libxml/entities.h	/^    const xmlChar           *URI;	\/* the full URI as computed *\/$/;"	m	struct:_xmlEntity	access:public
_xmlEntity::_private	/usr/include/libxml2/libxml/entities.h	/^    void           *_private;	        \/* application data *\/$/;"	m	struct:_xmlEntity	access:public
_xmlEntity::checked	/usr/include/libxml2/libxml/entities.h	/^    int			 checked;	\/* was the entity content checked *\/$/;"	m	struct:_xmlEntity	access:public
_xmlEntity::children	/usr/include/libxml2/libxml/entities.h	/^    struct _xmlNode    *children;	\/* First child link *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode	access:public
_xmlEntity::content	/usr/include/libxml2/libxml/entities.h	/^    xmlChar             *content;	\/* content or ndata if unparsed *\/$/;"	m	struct:_xmlEntity	access:public
_xmlEntity::doc	/usr/include/libxml2/libxml/entities.h	/^    struct _xmlDoc          *doc;       \/* the containing document *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlDoc	access:public
_xmlEntity::etype	/usr/include/libxml2/libxml/entities.h	/^    xmlEntityType          etype;	\/* The entity type *\/$/;"	m	struct:_xmlEntity	access:public
_xmlEntity::last	/usr/include/libxml2/libxml/entities.h	/^    struct _xmlNode        *last;	\/* Last child link *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode	access:public
_xmlEntity::length	/usr/include/libxml2/libxml/entities.h	/^    int                   length;	\/* the content length *\/$/;"	m	struct:_xmlEntity	access:public
_xmlEntity::name	/usr/include/libxml2/libxml/entities.h	/^    const xmlChar          *name;	\/* Entity name *\/$/;"	m	struct:_xmlEntity	access:public
_xmlEntity::next	/usr/include/libxml2/libxml/entities.h	/^    struct _xmlNode        *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode	access:public
_xmlEntity::nexte	/usr/include/libxml2/libxml/entities.h	/^    struct _xmlEntity     *nexte;	\/* unused *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlEntity	access:public
_xmlEntity::orig	/usr/include/libxml2/libxml/entities.h	/^    xmlChar                *orig;	\/* content without ref substitution *\/$/;"	m	struct:_xmlEntity	access:public
_xmlEntity::owner	/usr/include/libxml2/libxml/entities.h	/^    int                    owner;	\/* does the entity own the childrens *\/$/;"	m	struct:_xmlEntity	access:public
_xmlEntity::parent	/usr/include/libxml2/libxml/entities.h	/^    struct _xmlDtd       *parent;	\/* -> DTD *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlDtd	access:public
_xmlEntity::prev	/usr/include/libxml2/libxml/entities.h	/^    struct _xmlNode        *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode	access:public
_xmlEntity::type	/usr/include/libxml2/libxml/entities.h	/^    xmlElementType          type;       \/* XML_ENTITY_DECL, must be second ! *\/$/;"	m	struct:_xmlEntity	access:public
_xmlEnumeration	/usr/include/libxml2/libxml/tree.h	/^struct _xmlEnumeration {$/;"	s
_xmlEnumeration::name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar            *name;	\/* Enumeration name *\/$/;"	m	struct:_xmlEnumeration	access:public
_xmlEnumeration::next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlEnumeration    *next;	\/* next one *\/$/;"	m	struct:_xmlEnumeration	typeref:struct:_xmlEnumeration::_xmlEnumeration	access:public
_xmlError	/usr/include/libxml2/libxml/xmlerror.h	/^struct _xmlError {$/;"	s
_xmlError::code	/usr/include/libxml2/libxml/xmlerror.h	/^    int		code;	\/* The error code, e.g. an xmlParserError *\/$/;"	m	struct:_xmlError	access:public
_xmlError::ctxt	/usr/include/libxml2/libxml/xmlerror.h	/^    void       *ctxt;   \/* the parser context if available *\/$/;"	m	struct:_xmlError	access:public
_xmlError::domain	/usr/include/libxml2/libxml/xmlerror.h	/^    int		domain;	\/* What part of the library raised this error *\/$/;"	m	struct:_xmlError	access:public
_xmlError::file	/usr/include/libxml2/libxml/xmlerror.h	/^    char       *file;	\/* the filename *\/$/;"	m	struct:_xmlError	access:public
_xmlError::int1	/usr/include/libxml2/libxml/xmlerror.h	/^    int		int1;	\/* extra number information *\/$/;"	m	struct:_xmlError	access:public
_xmlError::int2	/usr/include/libxml2/libxml/xmlerror.h	/^    int		int2;	\/* column number of the error or 0 if N\/A (todo: rename this field when we would break ABI) *\/$/;"	m	struct:_xmlError	access:public
_xmlError::level	/usr/include/libxml2/libxml/xmlerror.h	/^    xmlErrorLevel level;\/* how consequent is the error *\/$/;"	m	struct:_xmlError	access:public
_xmlError::line	/usr/include/libxml2/libxml/xmlerror.h	/^    int		line;	\/* the line number if available *\/$/;"	m	struct:_xmlError	access:public
_xmlError::message	/usr/include/libxml2/libxml/xmlerror.h	/^    char       *message;\/* human-readable informative error message *\/$/;"	m	struct:_xmlError	access:public
_xmlError::node	/usr/include/libxml2/libxml/xmlerror.h	/^    void       *node;   \/* the node in the tree *\/$/;"	m	struct:_xmlError	access:public
_xmlError::str1	/usr/include/libxml2/libxml/xmlerror.h	/^    char       *str1;	\/* extra string information *\/$/;"	m	struct:_xmlError	access:public
_xmlError::str2	/usr/include/libxml2/libxml/xmlerror.h	/^    char       *str2;	\/* extra string information *\/$/;"	m	struct:_xmlError	access:public
_xmlError::str3	/usr/include/libxml2/libxml/xmlerror.h	/^    char       *str3;	\/* extra string information *\/$/;"	m	struct:_xmlError	access:public
_xmlGlobalState	/usr/include/libxml2/libxml/globals.h	/^struct _xmlGlobalState$/;"	s
_xmlGlobalState::docbDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	/^	xmlSAXHandlerV1 docbDefaultSAXHandler;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::htmlDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	/^	xmlSAXHandlerV1 htmlDefaultSAXHandler;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::oldXMLWDcompatibility	/usr/include/libxml2/libxml/globals.h	/^	int oldXMLWDcompatibility;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlBufferAllocScheme	/usr/include/libxml2/libxml/globals.h	/^	xmlBufferAllocationScheme xmlBufferAllocScheme;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlDefaultBufferSize	/usr/include/libxml2/libxml/globals.h	/^	int xmlDefaultBufferSize;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	/^	xmlSAXHandlerV1 xmlDefaultSAXHandler;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlDefaultSAXLocator	/usr/include/libxml2/libxml/globals.h	/^	xmlSAXLocator xmlDefaultSAXLocator;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlDeregisterNodeDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	xmlDeregisterNodeFunc xmlDeregisterNodeDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlDoValidityCheckingDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	int xmlDoValidityCheckingDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlFree	/usr/include/libxml2/libxml/globals.h	/^	xmlFreeFunc xmlFree;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlGenericError	/usr/include/libxml2/libxml/globals.h	/^	xmlGenericErrorFunc xmlGenericError;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlGenericErrorContext	/usr/include/libxml2/libxml/globals.h	/^	void *xmlGenericErrorContext;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlGetWarningsDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	int xmlGetWarningsDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlIndentTreeOutput	/usr/include/libxml2/libxml/globals.h	/^	int xmlIndentTreeOutput;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlKeepBlanksDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	int xmlKeepBlanksDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlLastError	/usr/include/libxml2/libxml/globals.h	/^	xmlError xmlLastError;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlLineNumbersDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	int xmlLineNumbersDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlLoadExtDtdDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	int xmlLoadExtDtdDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlMalloc	/usr/include/libxml2/libxml/globals.h	/^	xmlMallocFunc xmlMalloc;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlMallocAtomic	/usr/include/libxml2/libxml/globals.h	/^	xmlMallocFunc xmlMallocAtomic;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlMemStrdup	/usr/include/libxml2/libxml/globals.h	/^	xmlStrdupFunc xmlMemStrdup;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlOutputBufferCreateFilenameValue	/usr/include/libxml2/libxml/globals.h	/^	xmlOutputBufferCreateFilenameFunc xmlOutputBufferCreateFilenameValue;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlParserDebugEntities	/usr/include/libxml2/libxml/globals.h	/^	int xmlParserDebugEntities;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlParserInputBufferCreateFilenameValue	/usr/include/libxml2/libxml/globals.h	/^	xmlParserInputBufferCreateFilenameFunc xmlParserInputBufferCreateFilenameValue;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlParserVersion	/usr/include/libxml2/libxml/globals.h	/^	const char *xmlParserVersion;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlPedanticParserDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	int xmlPedanticParserDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlRealloc	/usr/include/libxml2/libxml/globals.h	/^	xmlReallocFunc xmlRealloc;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlRegisterNodeDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	xmlRegisterNodeFunc xmlRegisterNodeDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlSaveNoEmptyTags	/usr/include/libxml2/libxml/globals.h	/^	int xmlSaveNoEmptyTags;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlStructuredError	/usr/include/libxml2/libxml/globals.h	/^	xmlStructuredErrorFunc xmlStructuredError;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlStructuredErrorContext	/usr/include/libxml2/libxml/globals.h	/^	void *xmlStructuredErrorContext;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlSubstituteEntitiesDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	int xmlSubstituteEntitiesDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
_xmlGlobalState::xmlTreeIndentString	/usr/include/libxml2/libxml/globals.h	/^	const char *xmlTreeIndentString;$/;"	m	struct:_xmlGlobalState	access:public
_xmlID	/usr/include/libxml2/libxml/tree.h	/^struct _xmlID {$/;"	s
_xmlID::attr	/usr/include/libxml2/libxml/tree.h	/^    xmlAttrPtr        attr;	\/* The attribute holding it *\/$/;"	m	struct:_xmlID	access:public
_xmlID::doc	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc   *doc;	\/* The document holding the ID *\/$/;"	m	struct:_xmlID	typeref:struct:_xmlID::_xmlDoc	access:public
_xmlID::lineno	/usr/include/libxml2/libxml/tree.h	/^    int               lineno;	\/* The line number if attr is not available *\/$/;"	m	struct:_xmlID	access:public
_xmlID::name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar    *name;	\/* The attribute if attr is not available *\/$/;"	m	struct:_xmlID	access:public
_xmlID::next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlID    *next;	\/* next ID *\/$/;"	m	struct:_xmlID	typeref:struct:_xmlID::_xmlID	access:public
_xmlID::value	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar    *value;	\/* The ID name *\/$/;"	m	struct:_xmlID	access:public
_xmlLocationSet	/usr/include/libxml2/libxml/xpointer.h	/^struct _xmlLocationSet {$/;"	s
_xmlLocationSet::locMax	/usr/include/libxml2/libxml/xpointer.h	/^    int locMax;		      \/* size of the array as allocated *\/$/;"	m	struct:_xmlLocationSet	access:public
_xmlLocationSet::locNr	/usr/include/libxml2/libxml/xpointer.h	/^    int locNr;		      \/* number of locations in the set *\/$/;"	m	struct:_xmlLocationSet	access:public
_xmlLocationSet::locTab	/usr/include/libxml2/libxml/xpointer.h	/^    xmlXPathObjectPtr *locTab;\/* array of locations *\/$/;"	m	struct:_xmlLocationSet	access:public
_xmlNode	/usr/include/libxml2/libxml/tree.h	/^struct _xmlNode {$/;"	s
_xmlNode::_private	/usr/include/libxml2/libxml/tree.h	/^    void           *_private;	\/* application data *\/$/;"	m	struct:_xmlNode	access:public
_xmlNode::children	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *children;	\/* parent->childs link *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode	access:public
_xmlNode::content	/usr/include/libxml2/libxml/tree.h	/^    xmlChar         *content;   \/* the content *\/$/;"	m	struct:_xmlNode	access:public
_xmlNode::doc	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc  *doc;	\/* the containing document *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlDoc	access:public
_xmlNode::extra	/usr/include/libxml2/libxml/tree.h	/^    unsigned short   extra;	\/* extra data for XPath\/XSLT *\/$/;"	m	struct:_xmlNode	access:public
_xmlNode::last	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *last;	\/* last child link *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode	access:public
_xmlNode::line	/usr/include/libxml2/libxml/tree.h	/^    unsigned short   line;	\/* line number *\/$/;"	m	struct:_xmlNode	access:public
_xmlNode::name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar   *name;      \/* the name of the node, or the entity *\/$/;"	m	struct:_xmlNode	access:public
_xmlNode::next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode	access:public
_xmlNode::ns	/usr/include/libxml2/libxml/tree.h	/^    xmlNs           *ns;        \/* pointer to the associated namespace *\/$/;"	m	struct:_xmlNode	access:public
_xmlNode::nsDef	/usr/include/libxml2/libxml/tree.h	/^    xmlNs           *nsDef;     \/* namespace definitions on this node *\/$/;"	m	struct:_xmlNode	access:public
_xmlNode::parent	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode	access:public
_xmlNode::prev	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode	access:public
_xmlNode::properties	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlAttr *properties;\/* properties list *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlAttr	access:public
_xmlNode::psvi	/usr/include/libxml2/libxml/tree.h	/^    void            *psvi;	\/* for type\/PSVI informations *\/$/;"	m	struct:_xmlNode	access:public
_xmlNode::type	/usr/include/libxml2/libxml/tree.h	/^    xmlElementType   type;	\/* type number, must be second ! *\/$/;"	m	struct:_xmlNode	access:public
_xmlNodeSet	/usr/include/libxml2/libxml/xpath.h	/^struct _xmlNodeSet {$/;"	s
_xmlNodeSet::nodeMax	/usr/include/libxml2/libxml/xpath.h	/^    int nodeMax;		\/* size of the array as allocated *\/$/;"	m	struct:_xmlNodeSet	access:public
_xmlNodeSet::nodeNr	/usr/include/libxml2/libxml/xpath.h	/^    int nodeNr;			\/* number of nodes in the set *\/$/;"	m	struct:_xmlNodeSet	access:public
_xmlNodeSet::nodeTab	/usr/include/libxml2/libxml/xpath.h	/^    xmlNodePtr *nodeTab;	\/* array of nodes in no particular order *\/$/;"	m	struct:_xmlNodeSet	access:public
_xmlNotation	/usr/include/libxml2/libxml/tree.h	/^struct _xmlNotation {$/;"	s
_xmlNotation::PublicID	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar               *PublicID;	\/* Public identifier, if any *\/$/;"	m	struct:_xmlNotation	access:public
_xmlNotation::SystemID	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar               *SystemID;	\/* System identifier, if any *\/$/;"	m	struct:_xmlNotation	access:public
_xmlNotation::name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar               *name;	        \/* Notation name *\/$/;"	m	struct:_xmlNotation	access:public
_xmlNs	/usr/include/libxml2/libxml/tree.h	/^struct _xmlNs {$/;"	s
_xmlNs::_private	/usr/include/libxml2/libxml/tree.h	/^    void           *_private;   \/* application data *\/$/;"	m	struct:_xmlNs	access:public
_xmlNs::context	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc *context;		\/* normally an xmlDoc *\/$/;"	m	struct:_xmlNs	typeref:struct:_xmlNs::_xmlDoc	access:public
_xmlNs::href	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar *href;	\/* URL for the namespace *\/$/;"	m	struct:_xmlNs	access:public
_xmlNs::next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNs  *next;	\/* next Ns link for this node  *\/$/;"	m	struct:_xmlNs	typeref:struct:_xmlNs::_xmlNs	access:public
_xmlNs::prefix	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar *prefix;	\/* prefix for the namespace *\/$/;"	m	struct:_xmlNs	access:public
_xmlNs::type	/usr/include/libxml2/libxml/tree.h	/^    xmlNsType      type;	\/* global or local *\/$/;"	m	struct:_xmlNs	access:public
_xmlOutputBuffer	/usr/include/libxml2/libxml/xmlIO.h	/^struct _xmlOutputBuffer {$/;"	s
_xmlOutputBuffer::buffer	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlBufferPtr buffer;    \/* Local buffer encoded in UTF-8 or ISOLatin *\/$/;"	m	struct:_xmlOutputBuffer	access:public
_xmlOutputBuffer::closecallback	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlOutputCloseCallback  closecallback;$/;"	m	struct:_xmlOutputBuffer	access:public
_xmlOutputBuffer::context	/usr/include/libxml2/libxml/xmlIO.h	/^    void*                   context;$/;"	m	struct:_xmlOutputBuffer	access:public
_xmlOutputBuffer::conv	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlBufferPtr conv;      \/* if encoder != NULL buffer for output *\/$/;"	m	struct:_xmlOutputBuffer	access:public
_xmlOutputBuffer::encoder	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlCharEncodingHandlerPtr encoder; \/* I18N conversions to UTF-8 *\/$/;"	m	struct:_xmlOutputBuffer	access:public
_xmlOutputBuffer::error	/usr/include/libxml2/libxml/xmlIO.h	/^    int error;$/;"	m	struct:_xmlOutputBuffer	access:public
_xmlOutputBuffer::writecallback	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlOutputWriteCallback  writecallback;$/;"	m	struct:_xmlOutputBuffer	access:public
_xmlOutputBuffer::written	/usr/include/libxml2/libxml/xmlIO.h	/^    int written;            \/* total number of byte written *\/$/;"	m	struct:_xmlOutputBuffer	access:public
_xmlParserCtxt	/usr/include/libxml2/libxml/parser.h	/^struct _xmlParserCtxt {$/;"	s
_xmlParserCtxt::_private	/usr/include/libxml2/libxml/parser.h	/^    void              *_private;      \/* For user data, libxml won't touch it *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::attallocs	/usr/include/libxml2/libxml/parser.h	/^    int               *attallocs;     \/* which attribute were allocated *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::atts	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *   *atts;          \/* array for the attributes callbacks *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::attsDefault	/usr/include/libxml2/libxml/parser.h	/^    xmlHashTablePtr    attsDefault;   \/* defaulted attributes if any *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::attsSpecial	/usr/include/libxml2/libxml/parser.h	/^    xmlHashTablePtr    attsSpecial;   \/* non-CDATA attributes if any *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::catalogs	/usr/include/libxml2/libxml/parser.h	/^    void              *catalogs;      \/* document's own catalog *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::charset	/usr/include/libxml2/libxml/parser.h	/^    int                charset;       \/* encoding of the in-memory content$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::checkIndex	/usr/include/libxml2/libxml/parser.h	/^    long            checkIndex;       \/* used by progressive parsing lookup *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::depth	/usr/include/libxml2/libxml/parser.h	/^    int                depth;         \/* to prevent entity substitution loops *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::dict	/usr/include/libxml2/libxml/parser.h	/^    xmlDictPtr         dict;          \/* dictionnary for the parser *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::dictNames	/usr/include/libxml2/libxml/parser.h	/^    int               dictNames;    \/* Use dictionary names for the tree *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::directory	/usr/include/libxml2/libxml/parser.h	/^    char           *directory;        \/* the data directory *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::disableSAX	/usr/include/libxml2/libxml/parser.h	/^    int             disableSAX;       \/* SAX callbacks are disabled *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::docdict	/usr/include/libxml2/libxml/parser.h	/^    int                docdict;       \/* use strings from dict to build tree *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::encoding	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar   *encoding;        \/* the declared encoding, if any *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::entity	/usr/include/libxml2/libxml/parser.h	/^    xmlParserInputPtr  entity;        \/* used to check entities boundaries *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::errNo	/usr/include/libxml2/libxml/parser.h	/^    int errNo;                        \/* error code *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::extSubSystem	/usr/include/libxml2/libxml/parser.h	/^    xmlChar *          extSubSystem;  \/* SYSTEM ID of external subset *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::extSubURI	/usr/include/libxml2/libxml/parser.h	/^    xmlChar *          extSubURI;     \/* URI of external subset *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::external	/usr/include/libxml2/libxml/parser.h	/^    int              external;        \/* are we parsing an external entity *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::freeAttrs	/usr/include/libxml2/libxml/parser.h	/^    xmlAttrPtr        freeAttrs;    \/* List of freed attributes nodes *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::freeAttrsNr	/usr/include/libxml2/libxml/parser.h	/^    int               freeAttrsNr;  \/* number of freed attributes nodes *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::freeElems	/usr/include/libxml2/libxml/parser.h	/^    xmlNodePtr        freeElems;    \/* List of freed element nodes *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::freeElemsNr	/usr/include/libxml2/libxml/parser.h	/^    int               freeElemsNr;  \/* number of freed element nodes *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::hasExternalSubset	/usr/include/libxml2/libxml/parser.h	/^    int     hasExternalSubset;        \/* reference and external subset *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::hasPErefs	/usr/include/libxml2/libxml/parser.h	/^    int             hasPErefs;        \/* the internal subset has PE refs *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::html	/usr/include/libxml2/libxml/parser.h	/^    int                  html;        \/* an HTML(1)\/Docbook(2) document$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::inSubset	/usr/include/libxml2/libxml/parser.h	/^    int               inSubset;       \/* Parsing is in int 1\/ext 2 subset *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::input	/usr/include/libxml2/libxml/parser.h	/^    xmlParserInputPtr  input;         \/* Current input stream *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::inputMax	/usr/include/libxml2/libxml/parser.h	/^    int                inputMax;      \/* Max number of input streams *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::inputNr	/usr/include/libxml2/libxml/parser.h	/^    int                inputNr;       \/* Number of current input streams *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::inputTab	/usr/include/libxml2/libxml/parser.h	/^    xmlParserInputPtr *inputTab;      \/* stack of inputs *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::input_id	/usr/include/libxml2/libxml/parser.h	/^    int                input_id;      \/* we need to label inputs *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::instate	/usr/include/libxml2/libxml/parser.h	/^    xmlParserInputState instate;      \/* current type of input *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::intSubName	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *    intSubName;    \/* name of subset *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::keepBlanks	/usr/include/libxml2/libxml/parser.h	/^    int             keepBlanks;       \/* ugly but ... *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::lastError	/usr/include/libxml2/libxml/parser.h	/^    xmlError          lastError;$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::linenumbers	/usr/include/libxml2/libxml/parser.h	/^    int                linenumbers;   \/* set line number in element content *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::loadsubset	/usr/include/libxml2/libxml/parser.h	/^    int                loadsubset;    \/* should the external subset be loaded *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::maxatts	/usr/include/libxml2/libxml/parser.h	/^    int                maxatts;       \/* the size of the array *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::myDoc	/usr/include/libxml2/libxml/parser.h	/^    xmlDocPtr           myDoc;        \/* the document being built *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::name	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar     *name;          \/* Current parsed Node *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nameMax	/usr/include/libxml2/libxml/parser.h	/^    int                nameMax;       \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nameNr	/usr/include/libxml2/libxml/parser.h	/^    int                nameNr;        \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nameTab	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *   *nameTab;       \/* array of nodes *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nbChars	/usr/include/libxml2/libxml/parser.h	/^    long               nbChars;       \/* number of xmlChar processed *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nbentities	/usr/include/libxml2/libxml/parser.h	/^    unsigned long    nbentities;    \/* number of entities references *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::node	/usr/include/libxml2/libxml/parser.h	/^    xmlNodePtr         node;          \/* Current parsed Node *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nodeInfo	/usr/include/libxml2/libxml/parser.h	/^    xmlParserNodeInfo *nodeInfo;      \/* Current NodeInfo *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nodeInfoMax	/usr/include/libxml2/libxml/parser.h	/^    int                nodeInfoMax;   \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nodeInfoNr	/usr/include/libxml2/libxml/parser.h	/^    int                nodeInfoNr;    \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nodeInfoTab	/usr/include/libxml2/libxml/parser.h	/^    xmlParserNodeInfo *nodeInfoTab;   \/* array of nodeInfos *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nodeMax	/usr/include/libxml2/libxml/parser.h	/^    int                nodeMax;       \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nodeNr	/usr/include/libxml2/libxml/parser.h	/^    int                nodeNr;        \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nodeTab	/usr/include/libxml2/libxml/parser.h	/^    xmlNodePtr        *nodeTab;       \/* array of nodes *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::node_seq	/usr/include/libxml2/libxml/parser.h	/^    xmlParserNodeInfoSeq node_seq;    \/* info about each node parsed *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nodelen	/usr/include/libxml2/libxml/parser.h	/^    int                nodelen;       \/* Those two fields are there to *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nodemem	/usr/include/libxml2/libxml/parser.h	/^    int                nodemem;       \/* Speed up large node parsing *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nsMax	/usr/include/libxml2/libxml/parser.h	/^    int                nsMax;         \/* the size of the arrays *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nsNr	/usr/include/libxml2/libxml/parser.h	/^    int                nsNr;          \/* the number of inherited namespaces *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nsTab	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *   *nsTab;         \/* the array of prefix\/namespace name *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::nsWellFormed	/usr/include/libxml2/libxml/parser.h	/^    int                nsWellFormed;  \/* is the document XML Nanespace okay *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::options	/usr/include/libxml2/libxml/parser.h	/^    int                options;       \/* Extra options *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::parseMode	/usr/include/libxml2/libxml/parser.h	/^    xmlParserMode     parseMode;    \/* the parser mode *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::pedantic	/usr/include/libxml2/libxml/parser.h	/^    int                pedantic;      \/* signal pedantic warnings *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::progressive	/usr/include/libxml2/libxml/parser.h	/^    int                progressive;   \/* is this a progressive parsing *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::pushTab	/usr/include/libxml2/libxml/parser.h	/^    void *            *pushTab;       \/* array of data for push *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::record_info	/usr/include/libxml2/libxml/parser.h	/^    int record_info;                  \/* Whether node info should be kept *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::recovery	/usr/include/libxml2/libxml/parser.h	/^    int                recovery;      \/* run in recovery mode *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::replaceEntities	/usr/include/libxml2/libxml/parser.h	/^    int       replaceEntities;        \/* shall we replace entities ? *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::sax	/usr/include/libxml2/libxml/parser.h	/^    struct _xmlSAXHandler *sax;       \/* The SAX handler *\/$/;"	m	struct:_xmlParserCtxt	typeref:struct:_xmlParserCtxt::_xmlSAXHandler	access:public
_xmlParserCtxt::sax2	/usr/include/libxml2/libxml/parser.h	/^    int                sax2;          \/* operating in the new SAX mode *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::sizeentities	/usr/include/libxml2/libxml/parser.h	/^    unsigned long  sizeentities;    \/* size of parsed entities *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::space	/usr/include/libxml2/libxml/parser.h	/^    int *              space;         \/* Should the parser preserve spaces *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::spaceMax	/usr/include/libxml2/libxml/parser.h	/^    int                spaceMax;      \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::spaceNr	/usr/include/libxml2/libxml/parser.h	/^    int                spaceNr;       \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::spaceTab	/usr/include/libxml2/libxml/parser.h	/^    int *              spaceTab;      \/* array of space infos *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::standalone	/usr/include/libxml2/libxml/parser.h	/^    int            standalone;        \/* standalone document *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::str_xml	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *str_xml;$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::str_xml_ns	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *str_xml_ns;$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::str_xmlns	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *str_xmlns;$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::token	/usr/include/libxml2/libxml/parser.h	/^    int                 token;        \/* next char look-ahead *\/    $/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::userData	/usr/include/libxml2/libxml/parser.h	/^    void            *userData;        \/* For SAX interface only, used by DOM build *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::valid	/usr/include/libxml2/libxml/parser.h	/^    int                 valid;        \/* is the document valid *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::validate	/usr/include/libxml2/libxml/parser.h	/^    int              validate;        \/* shall we try to validate ? *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::vctxt	/usr/include/libxml2/libxml/parser.h	/^    xmlValidCtxt        vctxt;        \/* The validity context *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::version	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar    *version;        \/* the XML version string *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserCtxt::wellFormed	/usr/include/libxml2/libxml/parser.h	/^    int            wellFormed;        \/* is the document well formed *\/$/;"	m	struct:_xmlParserCtxt	access:public
_xmlParserInput	/usr/include/libxml2/libxml/parser.h	/^struct _xmlParserInput {$/;"	s
_xmlParserInput::base	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *base;              \/* Base of the array to parse *\/$/;"	m	struct:_xmlParserInput	access:public
_xmlParserInput::buf	/usr/include/libxml2/libxml/parser.h	/^    xmlParserInputBufferPtr buf;      \/* UTF-8 encoded buffer *\/$/;"	m	struct:_xmlParserInput	access:public
_xmlParserInput::col	/usr/include/libxml2/libxml/parser.h	/^    int col;                          \/* Current column *\/$/;"	m	struct:_xmlParserInput	access:public
_xmlParserInput::consumed	/usr/include/libxml2/libxml/parser.h	/^    unsigned long consumed;           \/* How many xmlChars already consumed *\/$/;"	m	struct:_xmlParserInput	access:public
_xmlParserInput::cur	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *cur;               \/* Current char being parsed *\/$/;"	m	struct:_xmlParserInput	access:public
_xmlParserInput::directory	/usr/include/libxml2/libxml/parser.h	/^    const char *directory;            \/* the directory\/base of the file *\/$/;"	m	struct:_xmlParserInput	access:public
_xmlParserInput::encoding	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *encoding;          \/* the encoding string for entity *\/$/;"	m	struct:_xmlParserInput	access:public
_xmlParserInput::end	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *end;               \/* end of the array to parse *\/$/;"	m	struct:_xmlParserInput	access:public
_xmlParserInput::filename	/usr/include/libxml2/libxml/parser.h	/^    const char *filename;             \/* The file analyzed, if any *\/$/;"	m	struct:_xmlParserInput	access:public
_xmlParserInput::free	/usr/include/libxml2/libxml/parser.h	/^    xmlParserInputDeallocate free;    \/* function to deallocate the base *\/$/;"	m	struct:_xmlParserInput	access:public
_xmlParserInput::id	/usr/include/libxml2/libxml/parser.h	/^    int id;                           \/* an unique identifier for the entity *\/$/;"	m	struct:_xmlParserInput	access:public
_xmlParserInput::length	/usr/include/libxml2/libxml/parser.h	/^    int length;                       \/* length if known *\/$/;"	m	struct:_xmlParserInput	access:public
_xmlParserInput::line	/usr/include/libxml2/libxml/parser.h	/^    int line;                         \/* Current line *\/$/;"	m	struct:_xmlParserInput	access:public
_xmlParserInput::standalone	/usr/include/libxml2/libxml/parser.h	/^    int standalone;                   \/* Was that entity marked standalone *\/$/;"	m	struct:_xmlParserInput	access:public
_xmlParserInput::version	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *version;           \/* the version string for entity *\/$/;"	m	struct:_xmlParserInput	access:public
_xmlParserInputBuffer	/usr/include/libxml2/libxml/xmlIO.h	/^struct _xmlParserInputBuffer {$/;"	s
_xmlParserInputBuffer::buffer	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlBufferPtr buffer;    \/* Local buffer encoded in UTF-8 *\/$/;"	m	struct:_xmlParserInputBuffer	access:public
_xmlParserInputBuffer::closecallback	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlInputCloseCallback  closecallback;$/;"	m	struct:_xmlParserInputBuffer	access:public
_xmlParserInputBuffer::compressed	/usr/include/libxml2/libxml/xmlIO.h	/^    int	compressed;	    \/* -1=unknown, 0=not compressed, 1=compressed *\/$/;"	m	struct:_xmlParserInputBuffer	access:public
_xmlParserInputBuffer::context	/usr/include/libxml2/libxml/xmlIO.h	/^    void*                  context;$/;"	m	struct:_xmlParserInputBuffer	access:public
_xmlParserInputBuffer::encoder	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlCharEncodingHandlerPtr encoder; \/* I18N conversions to UTF-8 *\/$/;"	m	struct:_xmlParserInputBuffer	access:public
_xmlParserInputBuffer::error	/usr/include/libxml2/libxml/xmlIO.h	/^    int error;$/;"	m	struct:_xmlParserInputBuffer	access:public
_xmlParserInputBuffer::raw	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlBufferPtr raw;       \/* if encoder != NULL buffer for raw input *\/$/;"	m	struct:_xmlParserInputBuffer	access:public
_xmlParserInputBuffer::rawconsumed	/usr/include/libxml2/libxml/xmlIO.h	/^    unsigned long rawconsumed;\/* amount consumed from raw *\/$/;"	m	struct:_xmlParserInputBuffer	access:public
_xmlParserInputBuffer::readcallback	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlInputReadCallback   readcallback;$/;"	m	struct:_xmlParserInputBuffer	access:public
_xmlParserNodeInfo	/usr/include/libxml2/libxml/parser.h	/^struct _xmlParserNodeInfo {$/;"	s
_xmlParserNodeInfo::begin_line	/usr/include/libxml2/libxml/parser.h	/^  unsigned long begin_line;$/;"	m	struct:_xmlParserNodeInfo	access:public
_xmlParserNodeInfo::begin_pos	/usr/include/libxml2/libxml/parser.h	/^  unsigned long begin_pos;$/;"	m	struct:_xmlParserNodeInfo	access:public
_xmlParserNodeInfo::end_line	/usr/include/libxml2/libxml/parser.h	/^  unsigned long end_line;$/;"	m	struct:_xmlParserNodeInfo	access:public
_xmlParserNodeInfo::end_pos	/usr/include/libxml2/libxml/parser.h	/^  unsigned long end_pos;$/;"	m	struct:_xmlParserNodeInfo	access:public
_xmlParserNodeInfo::node	/usr/include/libxml2/libxml/parser.h	/^  const struct _xmlNode* node;$/;"	m	struct:_xmlParserNodeInfo	typeref:struct:_xmlParserNodeInfo::_xmlNode	access:public
_xmlParserNodeInfoSeq	/usr/include/libxml2/libxml/parser.h	/^struct _xmlParserNodeInfoSeq {$/;"	s
_xmlParserNodeInfoSeq::buffer	/usr/include/libxml2/libxml/parser.h	/^  xmlParserNodeInfo* buffer;$/;"	m	struct:_xmlParserNodeInfoSeq	access:public
_xmlParserNodeInfoSeq::length	/usr/include/libxml2/libxml/parser.h	/^  unsigned long length;$/;"	m	struct:_xmlParserNodeInfoSeq	access:public
_xmlParserNodeInfoSeq::maximum	/usr/include/libxml2/libxml/parser.h	/^  unsigned long maximum;$/;"	m	struct:_xmlParserNodeInfoSeq	access:public
_xmlRef	/usr/include/libxml2/libxml/tree.h	/^struct _xmlRef {$/;"	s
_xmlRef::attr	/usr/include/libxml2/libxml/tree.h	/^    xmlAttrPtr        attr;	\/* The attribute holding it *\/$/;"	m	struct:_xmlRef	access:public
_xmlRef::lineno	/usr/include/libxml2/libxml/tree.h	/^    int               lineno;	\/* The line number if attr is not available *\/$/;"	m	struct:_xmlRef	access:public
_xmlRef::name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar    *name;	\/* The attribute if attr is not available *\/$/;"	m	struct:_xmlRef	access:public
_xmlRef::next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlRef    *next;	\/* next Ref *\/$/;"	m	struct:_xmlRef	typeref:struct:_xmlRef::_xmlRef	access:public
_xmlRef::value	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar     *value;	\/* The Ref name *\/$/;"	m	struct:_xmlRef	access:public
_xmlSAXHandler	/usr/include/libxml2/libxml/parser.h	/^struct _xmlSAXHandler {$/;"	s
_xmlSAXHandler::_private	/usr/include/libxml2/libxml/parser.h	/^    void *_private;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::attributeDecl	/usr/include/libxml2/libxml/parser.h	/^    attributeDeclSAXFunc attributeDecl;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::cdataBlock	/usr/include/libxml2/libxml/parser.h	/^    cdataBlockSAXFunc cdataBlock;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::characters	/usr/include/libxml2/libxml/parser.h	/^    charactersSAXFunc characters;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::comment	/usr/include/libxml2/libxml/parser.h	/^    commentSAXFunc comment;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::elementDecl	/usr/include/libxml2/libxml/parser.h	/^    elementDeclSAXFunc elementDecl;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::endDocument	/usr/include/libxml2/libxml/parser.h	/^    endDocumentSAXFunc endDocument;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::endElement	/usr/include/libxml2/libxml/parser.h	/^    endElementSAXFunc endElement;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::endElementNs	/usr/include/libxml2/libxml/parser.h	/^    endElementNsSAX2Func endElementNs;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::entityDecl	/usr/include/libxml2/libxml/parser.h	/^    entityDeclSAXFunc entityDecl;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::error	/usr/include/libxml2/libxml/parser.h	/^    errorSAXFunc error;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::externalSubset	/usr/include/libxml2/libxml/parser.h	/^    externalSubsetSAXFunc externalSubset;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::fatalError	/usr/include/libxml2/libxml/parser.h	/^    fatalErrorSAXFunc fatalError; \/* unused error() get all the errors *\/$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::getEntity	/usr/include/libxml2/libxml/parser.h	/^    getEntitySAXFunc getEntity;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::getParameterEntity	/usr/include/libxml2/libxml/parser.h	/^    getParameterEntitySAXFunc getParameterEntity;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::hasExternalSubset	/usr/include/libxml2/libxml/parser.h	/^    hasExternalSubsetSAXFunc hasExternalSubset;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::hasInternalSubset	/usr/include/libxml2/libxml/parser.h	/^    hasInternalSubsetSAXFunc hasInternalSubset;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::ignorableWhitespace	/usr/include/libxml2/libxml/parser.h	/^    ignorableWhitespaceSAXFunc ignorableWhitespace;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::initialized	/usr/include/libxml2/libxml/parser.h	/^    unsigned int initialized;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::internalSubset	/usr/include/libxml2/libxml/parser.h	/^    internalSubsetSAXFunc internalSubset;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::isStandalone	/usr/include/libxml2/libxml/parser.h	/^    isStandaloneSAXFunc isStandalone;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::notationDecl	/usr/include/libxml2/libxml/parser.h	/^    notationDeclSAXFunc notationDecl;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::processingInstruction	/usr/include/libxml2/libxml/parser.h	/^    processingInstructionSAXFunc processingInstruction;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::reference	/usr/include/libxml2/libxml/parser.h	/^    referenceSAXFunc reference;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::resolveEntity	/usr/include/libxml2/libxml/parser.h	/^    resolveEntitySAXFunc resolveEntity;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::serror	/usr/include/libxml2/libxml/parser.h	/^    xmlStructuredErrorFunc serror;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::setDocumentLocator	/usr/include/libxml2/libxml/parser.h	/^    setDocumentLocatorSAXFunc setDocumentLocator;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::startDocument	/usr/include/libxml2/libxml/parser.h	/^    startDocumentSAXFunc startDocument;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::startElement	/usr/include/libxml2/libxml/parser.h	/^    startElementSAXFunc startElement;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::startElementNs	/usr/include/libxml2/libxml/parser.h	/^    startElementNsSAX2Func startElementNs;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::unparsedEntityDecl	/usr/include/libxml2/libxml/parser.h	/^    unparsedEntityDeclSAXFunc unparsedEntityDecl;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandler::warning	/usr/include/libxml2/libxml/parser.h	/^    warningSAXFunc warning;$/;"	m	struct:_xmlSAXHandler	access:public
_xmlSAXHandlerV1	/usr/include/libxml2/libxml/parser.h	/^struct _xmlSAXHandlerV1 {$/;"	s
_xmlSAXHandlerV1::attributeDecl	/usr/include/libxml2/libxml/parser.h	/^    attributeDeclSAXFunc attributeDecl;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::cdataBlock	/usr/include/libxml2/libxml/parser.h	/^    cdataBlockSAXFunc cdataBlock;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::characters	/usr/include/libxml2/libxml/parser.h	/^    charactersSAXFunc characters;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::comment	/usr/include/libxml2/libxml/parser.h	/^    commentSAXFunc comment;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::elementDecl	/usr/include/libxml2/libxml/parser.h	/^    elementDeclSAXFunc elementDecl;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::endDocument	/usr/include/libxml2/libxml/parser.h	/^    endDocumentSAXFunc endDocument;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::endElement	/usr/include/libxml2/libxml/parser.h	/^    endElementSAXFunc endElement;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::entityDecl	/usr/include/libxml2/libxml/parser.h	/^    entityDeclSAXFunc entityDecl;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::error	/usr/include/libxml2/libxml/parser.h	/^    errorSAXFunc error;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::externalSubset	/usr/include/libxml2/libxml/parser.h	/^    externalSubsetSAXFunc externalSubset;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::fatalError	/usr/include/libxml2/libxml/parser.h	/^    fatalErrorSAXFunc fatalError; \/* unused error() get all the errors *\/$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::getEntity	/usr/include/libxml2/libxml/parser.h	/^    getEntitySAXFunc getEntity;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::getParameterEntity	/usr/include/libxml2/libxml/parser.h	/^    getParameterEntitySAXFunc getParameterEntity;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::hasExternalSubset	/usr/include/libxml2/libxml/parser.h	/^    hasExternalSubsetSAXFunc hasExternalSubset;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::hasInternalSubset	/usr/include/libxml2/libxml/parser.h	/^    hasInternalSubsetSAXFunc hasInternalSubset;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::ignorableWhitespace	/usr/include/libxml2/libxml/parser.h	/^    ignorableWhitespaceSAXFunc ignorableWhitespace;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::initialized	/usr/include/libxml2/libxml/parser.h	/^    unsigned int initialized;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::internalSubset	/usr/include/libxml2/libxml/parser.h	/^    internalSubsetSAXFunc internalSubset;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::isStandalone	/usr/include/libxml2/libxml/parser.h	/^    isStandaloneSAXFunc isStandalone;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::notationDecl	/usr/include/libxml2/libxml/parser.h	/^    notationDeclSAXFunc notationDecl;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::processingInstruction	/usr/include/libxml2/libxml/parser.h	/^    processingInstructionSAXFunc processingInstruction;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::reference	/usr/include/libxml2/libxml/parser.h	/^    referenceSAXFunc reference;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::resolveEntity	/usr/include/libxml2/libxml/parser.h	/^    resolveEntitySAXFunc resolveEntity;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::setDocumentLocator	/usr/include/libxml2/libxml/parser.h	/^    setDocumentLocatorSAXFunc setDocumentLocator;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::startDocument	/usr/include/libxml2/libxml/parser.h	/^    startDocumentSAXFunc startDocument;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::startElement	/usr/include/libxml2/libxml/parser.h	/^    startElementSAXFunc startElement;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::unparsedEntityDecl	/usr/include/libxml2/libxml/parser.h	/^    unparsedEntityDeclSAXFunc unparsedEntityDecl;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXHandlerV1::warning	/usr/include/libxml2/libxml/parser.h	/^    warningSAXFunc warning;$/;"	m	struct:_xmlSAXHandlerV1	access:public
_xmlSAXLocator	/usr/include/libxml2/libxml/parser.h	/^struct _xmlSAXLocator {$/;"	s
_xmlSAXLocator::getColumnNumber	/usr/include/libxml2/libxml/parser.h	/^    int (*getColumnNumber)(void *ctx);$/;"	m	struct:_xmlSAXLocator	access:public
_xmlSAXLocator::getLineNumber	/usr/include/libxml2/libxml/parser.h	/^    int (*getLineNumber)(void *ctx);$/;"	m	struct:_xmlSAXLocator	access:public
_xmlSAXLocator::getPublicId	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *(*getPublicId)(void *ctx);$/;"	m	struct:_xmlSAXLocator	access:public
_xmlSAXLocator::getSystemId	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *(*getSystemId)(void *ctx);$/;"	m	struct:_xmlSAXLocator	access:public
_xmlSchema	/usr/include/libxml2/libxml/schemasInternals.h	/^struct _xmlSchema {$/;"	s
_xmlSchema::_private	/usr/include/libxml2/libxml/schemasInternals.h	/^    void *_private;        \/* unused by the library for users or bindings *\/$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::attrDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr attrDecl;$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::attrgrpDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr attrgrpDecl;$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::counter	/usr/include/libxml2/libxml/schemasInternals.h	/^    int counter; \/* used to give ononymous components unique names *\/$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::dict	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlDictPtr      dict;$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::doc	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlDocPtr doc;$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::elemDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr elemDecl;$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::flags	/usr/include/libxml2/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::groupDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr groupDecl;$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::id	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *id; \/* Obsolete *\/$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::idcDef	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr idcDef; \/* All identity-constraint defs. *\/$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::includes	/usr/include/libxml2/libxml/schemasInternals.h	/^    void *includes;     \/* the includes, this is opaque for now *\/$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::name	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *name; \/* schema name *\/$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::notaDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr notaDecl;$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::preserve	/usr/include/libxml2/libxml/schemasInternals.h	/^    int preserve;        \/* whether to free the document *\/$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::schemasImports	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr schemasImports;$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::targetNamespace	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace; \/* the target namespace *\/$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::typeDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr typeDecl;$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::version	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *version;$/;"	m	struct:_xmlSchema	access:public
_xmlSchema::volatiles	/usr/include/libxml2/libxml/schemasInternals.h	/^    void *volatiles; \/* Obsolete *\/$/;"	m	struct:_xmlSchema	access:public
_xmlSchemaAnnot	/usr/include/libxml2/libxml/schemasInternals.h	/^struct _xmlSchemaAnnot {$/;"	s
_xmlSchemaAnnot::content	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlNodePtr content;         \/* the annotation *\/$/;"	m	struct:_xmlSchemaAnnot	access:public
_xmlSchemaAnnot::next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaAnnot *next;$/;"	m	struct:_xmlSchemaAnnot	typeref:struct:_xmlSchemaAnnot::_xmlSchemaAnnot	access:public
_xmlSchemaAttribute	/usr/include/libxml2/libxml/schemasInternals.h	/^struct _xmlSchemaAttribute {$/;"	s
_xmlSchemaAttribute::annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::base	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypePtr base; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::defVal	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaValPtr defVal; \/* The compiled value constraint *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::defValue	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *defValue; \/* The initial value of the value constraint *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::flags	/usr/include/libxml2/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::id	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *id; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::name	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *name; \/* the name of the declaration *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaAttribute *next; \/* the next attribute (not used?) *\/$/;"	m	struct:_xmlSchemaAttribute	typeref:struct:_xmlSchemaAttribute::_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::node	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::occurs	/usr/include/libxml2/libxml/schemasInternals.h	/^    int occurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::ref	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *ref; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::refDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAttributePtr refDecl; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::refNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refNs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::refPrefix	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refPrefix; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::subtypes	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypePtr subtypes; \/* the type definition *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::targetNamespace	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeType type;$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::typeName	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *typeName; \/* the local name of the type definition *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttribute::typeNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *typeNs; \/* the ns URI of the type definition *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
_xmlSchemaAttributeGroup	/usr/include/libxml2/libxml/schemasInternals.h	/^struct _xmlSchemaAttributeGroup {$/;"	s
_xmlSchemaAttributeGroup::annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
_xmlSchemaAttributeGroup::attrUses	/usr/include/libxml2/libxml/schemasInternals.h	/^    void *attrUses;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
_xmlSchemaAttributeGroup::attributeWildcard	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaWildcardPtr attributeWildcard;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
_xmlSchemaAttributeGroup::attributes	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAttributePtr attributes; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
_xmlSchemaAttributeGroup::flags	/usr/include/libxml2/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
_xmlSchemaAttributeGroup::id	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *id;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
_xmlSchemaAttributeGroup::name	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
_xmlSchemaAttributeGroup::next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaAttribute *next;\/* the next attribute if in a group ... *\/$/;"	m	struct:_xmlSchemaAttributeGroup	typeref:struct:_xmlSchemaAttributeGroup::_xmlSchemaAttribute	access:public
_xmlSchemaAttributeGroup::node	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
_xmlSchemaAttributeGroup::ref	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *ref; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
_xmlSchemaAttributeGroup::refItem	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAttributeGroupPtr refItem; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
_xmlSchemaAttributeGroup::refNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refNs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
_xmlSchemaAttributeGroup::refPrefix	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refPrefix; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
_xmlSchemaAttributeGroup::targetNamespace	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
_xmlSchemaAttributeGroup::type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
_xmlSchemaAttributeLink	/usr/include/libxml2/libxml/schemasInternals.h	/^struct _xmlSchemaAttributeLink {$/;"	s
_xmlSchemaAttributeLink::attr	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaAttribute *attr;\/* the linked attribute *\/$/;"	m	struct:_xmlSchemaAttributeLink	typeref:struct:_xmlSchemaAttributeLink::_xmlSchemaAttribute	access:public
_xmlSchemaAttributeLink::next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaAttributeLink *next;\/* the next attribute link ... *\/$/;"	m	struct:_xmlSchemaAttributeLink	typeref:struct:_xmlSchemaAttributeLink::_xmlSchemaAttributeLink	access:public
_xmlSchemaElement	/usr/include/libxml2/libxml/schemasInternals.h	/^struct _xmlSchemaElement {$/;"	s
_xmlSchemaElement::annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::attributes	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAttributePtr attributes;$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::contModel	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlRegexpPtr contModel; \/* Obsolete for WXS, maybe used for RelaxNG *\/$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::contentType	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaContentType contentType;$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::defVal	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaValPtr defVal; \/* The compiled value contraint. *\/$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::flags	/usr/include/libxml2/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::id	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *id; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::idcs	/usr/include/libxml2/libxml/schemasInternals.h	/^    void *idcs; \/* The identity-constraint defs *\/$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::maxOccurs	/usr/include/libxml2/libxml/schemasInternals.h	/^    int maxOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::minOccurs	/usr/include/libxml2/libxml/schemasInternals.h	/^    int minOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::name	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::namedType	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *namedType;$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::namedTypeNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *namedTypeNs;$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaType *next; \/* Not used? *\/$/;"	m	struct:_xmlSchemaElement	typeref:struct:_xmlSchemaElement::_xmlSchemaType	access:public
_xmlSchemaElement::node	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::ref	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *ref; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::refDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaElement *refDecl; \/* This will now be used for the$/;"	m	struct:_xmlSchemaElement	typeref:struct:_xmlSchemaElement::_xmlSchemaElement	access:public
_xmlSchemaElement::refNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refNs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::refPrefix	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refPrefix; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::scope	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *scope;$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::substGroup	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *substGroup;$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::substGroupNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *substGroupNs;$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::subtypes	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypePtr subtypes; \/* the type definition *\/$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::targetNamespace	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeType type; \/* The kind of type *\/$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaElement::value	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *value; \/* The original value of the value constraint. *\/$/;"	m	struct:_xmlSchemaElement	access:public
_xmlSchemaFacet	/usr/include/libxml2/libxml/schemasInternals.h	/^struct _xmlSchemaFacet {$/;"	s
_xmlSchemaFacet::annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaFacet	access:public
_xmlSchemaFacet::fixed	/usr/include/libxml2/libxml/schemasInternals.h	/^    int fixed; \/* XML_SCHEMAS_FACET_PRESERVE, etc. *\/$/;"	m	struct:_xmlSchemaFacet	access:public
_xmlSchemaFacet::id	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *id; \/* Obsolete *\/$/;"	m	struct:_xmlSchemaFacet	access:public
_xmlSchemaFacet::next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaFacet *next;\/* the next type if in a sequence ... *\/$/;"	m	struct:_xmlSchemaFacet	typeref:struct:_xmlSchemaFacet::_xmlSchemaFacet	access:public
_xmlSchemaFacet::node	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaFacet	access:public
_xmlSchemaFacet::regexp	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlRegexpPtr    regexp; \/* The regex for patterns *\/$/;"	m	struct:_xmlSchemaFacet	access:public
_xmlSchemaFacet::type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaFacet	access:public
_xmlSchemaFacet::val	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaValPtr val; \/* The compiled value *\/$/;"	m	struct:_xmlSchemaFacet	access:public
_xmlSchemaFacet::value	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *value; \/* The original value *\/$/;"	m	struct:_xmlSchemaFacet	access:public
_xmlSchemaFacet::whitespace	/usr/include/libxml2/libxml/schemasInternals.h	/^    int whitespace;$/;"	m	struct:_xmlSchemaFacet	access:public
_xmlSchemaFacetLink	/usr/include/libxml2/libxml/schemasInternals.h	/^struct _xmlSchemaFacetLink {$/;"	s
_xmlSchemaFacetLink::facet	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaFacetPtr facet;\/* the linked facet *\/$/;"	m	struct:_xmlSchemaFacetLink	access:public
_xmlSchemaFacetLink::next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaFacetLink *next;\/* the next facet link ... *\/$/;"	m	struct:_xmlSchemaFacetLink	typeref:struct:_xmlSchemaFacetLink::_xmlSchemaFacetLink	access:public
_xmlSchemaNotation	/usr/include/libxml2/libxml/schemasInternals.h	/^struct _xmlSchemaNotation {$/;"	s
_xmlSchemaNotation::annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaNotation	access:public
_xmlSchemaNotation::identifier	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *identifier;$/;"	m	struct:_xmlSchemaNotation	access:public
_xmlSchemaNotation::name	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaNotation	access:public
_xmlSchemaNotation::targetNamespace	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaNotation	access:public
_xmlSchemaNotation::type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeType type; \/* The kind of type *\/$/;"	m	struct:_xmlSchemaNotation	access:public
_xmlSchemaType	/usr/include/libxml2/libxml/schemasInternals.h	/^struct _xmlSchemaType {$/;"	s
_xmlSchemaType::annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::attrUses	/usr/include/libxml2/libxml/schemasInternals.h	/^    void *attrUses;$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::attributeUses	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAttributeLinkPtr *attributeUses; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::attributeWildcard	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaWildcardPtr attributeWildcard;$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::attributes	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAttributePtr attributes; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::base	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *base; \/* Base type's local name *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::baseNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *baseNs; \/* Base type's target namespace *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::baseType	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypePtr baseType; \/* The base type component *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::builtInType	/usr/include/libxml2/libxml/schemasInternals.h	/^    int builtInType; \/* Type of built-in types. *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::contModel	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlRegexpPtr contModel; \/* Holds the automaton of the content model *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::contentType	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaContentType contentType;$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::contentTypeDef	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypePtr contentTypeDef; \/* Used for the simple content of complex types.$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::facetSet	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaFacetLinkPtr facetSet; \/* All facets (incl. inherited) *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::facets	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaFacetPtr facets; \/* Local facets *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::flags	/usr/include/libxml2/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::id	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *id ; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::maxOccurs	/usr/include/libxml2/libxml/schemasInternals.h	/^    int maxOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::memberTypes	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeLinkPtr memberTypes; \/* member-types if a union type. *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::minOccurs	/usr/include/libxml2/libxml/schemasInternals.h	/^    int minOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::name	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaType *next; \/* the next type if in a sequence ... *\/$/;"	m	struct:_xmlSchemaType	typeref:struct:_xmlSchemaType::_xmlSchemaType	access:public
_xmlSchemaType::node	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::recurse	/usr/include/libxml2/libxml/schemasInternals.h	/^    int recurse; \/* Obsolete *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::redef	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaType *redef; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	typeref:struct:_xmlSchemaType::_xmlSchemaType	access:public
_xmlSchemaType::ref	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *ref; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::refNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refNs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::refPrefix	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refPrefix; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::subtypes	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypePtr subtypes;$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::targetNamespace	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaType::type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeType type; \/* The kind of type *\/$/;"	m	struct:_xmlSchemaType	access:public
_xmlSchemaTypeLink	/usr/include/libxml2/libxml/schemasInternals.h	/^struct _xmlSchemaTypeLink {$/;"	s
_xmlSchemaTypeLink::next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaTypeLink *next;\/* the next type link ... *\/$/;"	m	struct:_xmlSchemaTypeLink	typeref:struct:_xmlSchemaTypeLink::_xmlSchemaTypeLink	access:public
_xmlSchemaTypeLink::type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypePtr type;\/* the linked type *\/$/;"	m	struct:_xmlSchemaTypeLink	access:public
_xmlSchemaWildcard	/usr/include/libxml2/libxml/schemasInternals.h	/^struct _xmlSchemaWildcard {$/;"	s
_xmlSchemaWildcard::annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaWildcard	access:public
_xmlSchemaWildcard::any	/usr/include/libxml2/libxml/schemasInternals.h	/^    int any; \/* Indicates if the ns constraint is of ##any *\/$/;"	m	struct:_xmlSchemaWildcard	access:public
_xmlSchemaWildcard::flags	/usr/include/libxml2/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaWildcard	access:public
_xmlSchemaWildcard::id	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *id; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaWildcard	access:public
_xmlSchemaWildcard::maxOccurs	/usr/include/libxml2/libxml/schemasInternals.h	/^    int maxOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaWildcard	access:public
_xmlSchemaWildcard::minOccurs	/usr/include/libxml2/libxml/schemasInternals.h	/^    int minOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaWildcard	access:public
_xmlSchemaWildcard::negNsSet	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaWildcardNsPtr negNsSet; \/* The negated namespace *\/$/;"	m	struct:_xmlSchemaWildcard	access:public
_xmlSchemaWildcard::node	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaWildcard	access:public
_xmlSchemaWildcard::nsSet	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaWildcardNsPtr nsSet; \/* The list of allowed namespaces *\/$/;"	m	struct:_xmlSchemaWildcard	access:public
_xmlSchemaWildcard::processContents	/usr/include/libxml2/libxml/schemasInternals.h	/^    int processContents;$/;"	m	struct:_xmlSchemaWildcard	access:public
_xmlSchemaWildcard::type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaWildcard	access:public
_xmlSchemaWildcardNs	/usr/include/libxml2/libxml/schemasInternals.h	/^struct _xmlSchemaWildcardNs {$/;"	s
_xmlSchemaWildcardNs::next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaWildcardNs *next;\/* the next constraint link ... *\/$/;"	m	struct:_xmlSchemaWildcardNs	typeref:struct:_xmlSchemaWildcardNs::_xmlSchemaWildcardNs	access:public
_xmlSchemaWildcardNs::value	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *value;\/* the value *\/$/;"	m	struct:_xmlSchemaWildcardNs	access:public
_xmlShellCtxt	/usr/include/libxml2/libxml/debugXML.h	/^struct _xmlShellCtxt {$/;"	s
_xmlShellCtxt::doc	/usr/include/libxml2/libxml/debugXML.h	/^    xmlDocPtr doc;$/;"	m	struct:_xmlShellCtxt	access:public
_xmlShellCtxt::filename	/usr/include/libxml2/libxml/debugXML.h	/^    char *filename;$/;"	m	struct:_xmlShellCtxt	access:public
_xmlShellCtxt::input	/usr/include/libxml2/libxml/debugXML.h	/^    xmlShellReadlineFunc input;$/;"	m	struct:_xmlShellCtxt	access:public
_xmlShellCtxt::loaded	/usr/include/libxml2/libxml/debugXML.h	/^    int loaded;$/;"	m	struct:_xmlShellCtxt	access:public
_xmlShellCtxt::node	/usr/include/libxml2/libxml/debugXML.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlShellCtxt	access:public
_xmlShellCtxt::output	/usr/include/libxml2/libxml/debugXML.h	/^    FILE *output;$/;"	m	struct:_xmlShellCtxt	access:public
_xmlShellCtxt::pctxt	/usr/include/libxml2/libxml/debugXML.h	/^    xmlXPathContextPtr pctxt;$/;"	m	struct:_xmlShellCtxt	access:public
_xmlURI	/usr/include/libxml2/libxml/uri.h	/^struct _xmlURI {$/;"	s
_xmlURI::authority	/usr/include/libxml2/libxml/uri.h	/^    char *authority;	\/* the authority part *\/$/;"	m	struct:_xmlURI	access:public
_xmlURI::cleanup	/usr/include/libxml2/libxml/uri.h	/^    int  cleanup;	\/* parsing potentially unclean URI *\/$/;"	m	struct:_xmlURI	access:public
_xmlURI::fragment	/usr/include/libxml2/libxml/uri.h	/^    char *fragment;	\/* the fragment identifier *\/$/;"	m	struct:_xmlURI	access:public
_xmlURI::opaque	/usr/include/libxml2/libxml/uri.h	/^    char *opaque;	\/* opaque part *\/$/;"	m	struct:_xmlURI	access:public
_xmlURI::path	/usr/include/libxml2/libxml/uri.h	/^    char *path;		\/* the path string *\/$/;"	m	struct:_xmlURI	access:public
_xmlURI::port	/usr/include/libxml2/libxml/uri.h	/^    int port;		\/* the port number *\/$/;"	m	struct:_xmlURI	access:public
_xmlURI::query	/usr/include/libxml2/libxml/uri.h	/^    char *query;	\/* the query string (deprecated - use with caution) *\/$/;"	m	struct:_xmlURI	access:public
_xmlURI::query_raw	/usr/include/libxml2/libxml/uri.h	/^    char *query_raw;	\/* the query string (as it appears in the URI) *\/$/;"	m	struct:_xmlURI	access:public
_xmlURI::scheme	/usr/include/libxml2/libxml/uri.h	/^    char *scheme;	\/* the URI scheme *\/$/;"	m	struct:_xmlURI	access:public
_xmlURI::server	/usr/include/libxml2/libxml/uri.h	/^    char *server;	\/* the server part *\/$/;"	m	struct:_xmlURI	access:public
_xmlURI::user	/usr/include/libxml2/libxml/uri.h	/^    char *user;		\/* the user part *\/$/;"	m	struct:_xmlURI	access:public
_xmlValidCtxt	/usr/include/libxml2/libxml/valid.h	/^struct _xmlValidCtxt {$/;"	s
_xmlValidCtxt::am	/usr/include/libxml2/libxml/valid.h	/^    void                     *am;$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::am	/usr/include/libxml2/libxml/valid.h	/^    xmlAutomataPtr            am;     \/* the automata *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::doc	/usr/include/libxml2/libxml/valid.h	/^    xmlDocPtr              doc;       \/* the document *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::error	/usr/include/libxml2/libxml/valid.h	/^    xmlValidityErrorFunc error;		\/* the callback in case of errors *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::finishDtd	/usr/include/libxml2/libxml/valid.h	/^    unsigned int     finishDtd;       \/* finished validating the Dtd ? *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::node	/usr/include/libxml2/libxml/valid.h	/^    xmlNodePtr         node;          \/* Current parsed Node *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::nodeMax	/usr/include/libxml2/libxml/valid.h	/^    int                nodeMax;       \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::nodeNr	/usr/include/libxml2/libxml/valid.h	/^    int                nodeNr;        \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::nodeTab	/usr/include/libxml2/libxml/valid.h	/^    xmlNodePtr        *nodeTab;       \/* array of nodes *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::state	/usr/include/libxml2/libxml/valid.h	/^    void                  *state;$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::state	/usr/include/libxml2/libxml/valid.h	/^    xmlAutomataStatePtr    state;     \/* used to build the automata *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::userData	/usr/include/libxml2/libxml/valid.h	/^    void *userData;			\/* user specific data block *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::valid	/usr/include/libxml2/libxml/valid.h	/^    int                  valid;       \/* temporary validity check result *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::vstate	/usr/include/libxml2/libxml/valid.h	/^    xmlValidState     *vstate;        \/* current state *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::vstateMax	/usr/include/libxml2/libxml/valid.h	/^    int                vstateMax;     \/* Max depth of the validation stack *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::vstateNr	/usr/include/libxml2/libxml/valid.h	/^    int                vstateNr;      \/* Depth of the validation stack *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::vstateTab	/usr/include/libxml2/libxml/valid.h	/^    xmlValidState     *vstateTab;     \/* array of validation states *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlValidCtxt::warning	/usr/include/libxml2/libxml/valid.h	/^    xmlValidityWarningFunc warning;	\/* the callback in case of warning *\/$/;"	m	struct:_xmlValidCtxt	access:public
_xmlXPathAxis	/usr/include/libxml2/libxml/xpath.h	/^struct _xmlXPathAxis {$/;"	s
_xmlXPathAxis::func	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathAxisFunc func;		\/* the search function *\/$/;"	m	struct:_xmlXPathAxis	access:public
_xmlXPathAxis::name	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar      *name;		\/* the axis name *\/$/;"	m	struct:_xmlXPathAxis	access:public
_xmlXPathContext	/usr/include/libxml2/libxml/xpath.h	/^struct _xmlXPathContext {$/;"	s
_xmlXPathContext::axis	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathAxisPtr axis;		\/* Array of defined axis *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::cache	/usr/include/libxml2/libxml/xpath.h	/^    void *cache;$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::contextSize	/usr/include/libxml2/libxml/xpath.h	/^    int contextSize;			\/* the context size *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::debugNode	/usr/include/libxml2/libxml/xpath.h	/^    xmlNodePtr debugNode;		\/* the source node XSLT *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::dict	/usr/include/libxml2/libxml/xpath.h	/^    xmlDictPtr dict;			\/* dictionary if any *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::doc	/usr/include/libxml2/libxml/xpath.h	/^    xmlDocPtr doc;			\/* The current document *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::error	/usr/include/libxml2/libxml/xpath.h	/^    xmlStructuredErrorFunc error;       \/* the callback in case of errors *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::extra	/usr/include/libxml2/libxml/xpath.h	/^    void *extra;                        \/* needed for XSLT *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::flags	/usr/include/libxml2/libxml/xpath.h	/^    int flags;				\/* flags to control compilation *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::funcHash	/usr/include/libxml2/libxml/xpath.h	/^    xmlHashTablePtr funcHash;		\/* Hash table of defined funcs *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::funcLookupData	/usr/include/libxml2/libxml/xpath.h	/^    void *funcLookupData;		\/* function lookup data *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::funcLookupFunc	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathFuncLookupFunc funcLookupFunc;\/* function lookup func *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::function	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar *function;$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::functionURI	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar *functionURI;$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::here	/usr/include/libxml2/libxml/xpath.h	/^    xmlNodePtr here;			\/* for here() *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::lastError	/usr/include/libxml2/libxml/xpath.h	/^    xmlError lastError;			\/* the last error *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::max_axis	/usr/include/libxml2/libxml/xpath.h	/^    int max_axis;			\/* max number of axis *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::max_funcs_unused	/usr/include/libxml2/libxml/xpath.h	/^    int max_funcs_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::max_types	/usr/include/libxml2/libxml/xpath.h	/^    int max_types;			\/* max number of types *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::max_variables_unused	/usr/include/libxml2/libxml/xpath.h	/^    int max_variables_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::namespaces	/usr/include/libxml2/libxml/xpath.h	/^    xmlNsPtr *namespaces;		\/* Array of namespaces *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::nb_axis	/usr/include/libxml2/libxml/xpath.h	/^    int nb_axis;			\/* number of defined axis *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::nb_funcs_unused	/usr/include/libxml2/libxml/xpath.h	/^    int nb_funcs_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::nb_types	/usr/include/libxml2/libxml/xpath.h	/^    int nb_types;			\/* number of defined types *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::nb_variables_unused	/usr/include/libxml2/libxml/xpath.h	/^    int nb_variables_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::node	/usr/include/libxml2/libxml/xpath.h	/^    xmlNodePtr node;			\/* The current node *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::nsHash	/usr/include/libxml2/libxml/xpath.h	/^    xmlHashTablePtr nsHash;		\/* The namespaces hash table *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::nsNr	/usr/include/libxml2/libxml/xpath.h	/^    int nsNr;				\/* number of namespace in scope *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::origin	/usr/include/libxml2/libxml/xpath.h	/^    xmlNodePtr origin;			\/* for origin() *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::proximityPosition	/usr/include/libxml2/libxml/xpath.h	/^    int proximityPosition;		\/* the proximity position *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::tmpNsList	/usr/include/libxml2/libxml/xpath.h	/^    xmlNsPtr *tmpNsList;		\/* Array of namespaces *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::tmpNsNr	/usr/include/libxml2/libxml/xpath.h	/^    int tmpNsNr;			\/* number of namespaces in scope *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::types	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathTypePtr types;		\/* Array of defined types *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::user	/usr/include/libxml2/libxml/xpath.h	/^    void *user;				\/* function to free *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::userData	/usr/include/libxml2/libxml/xpath.h	/^    void *userData;                     \/* user specific data block *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::varHash	/usr/include/libxml2/libxml/xpath.h	/^    xmlHashTablePtr varHash;		\/* Hash table of defined variables *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::varLookupData	/usr/include/libxml2/libxml/xpath.h	/^    void *varLookupData;		\/* variable lookup data *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::varLookupFunc	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathVariableLookupFunc varLookupFunc;\/* variable lookup func *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathContext::xptr	/usr/include/libxml2/libxml/xpath.h	/^    int xptr;				\/* is this an XPointer context? *\/$/;"	m	struct:_xmlXPathContext	access:public
_xmlXPathFunct	/usr/include/libxml2/libxml/xpath.h	/^struct _xmlXPathFunct {$/;"	s
_xmlXPathFunct::func	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathEvalFunc func;		\/* the evaluation function *\/$/;"	m	struct:_xmlXPathFunct	access:public
_xmlXPathFunct::name	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar      *name;		\/* the function name *\/$/;"	m	struct:_xmlXPathFunct	access:public
_xmlXPathObject	/usr/include/libxml2/libxml/xpath.h	/^struct _xmlXPathObject {$/;"	s
_xmlXPathObject::boolval	/usr/include/libxml2/libxml/xpath.h	/^    int boolval;$/;"	m	struct:_xmlXPathObject	access:public
_xmlXPathObject::floatval	/usr/include/libxml2/libxml/xpath.h	/^    double floatval;$/;"	m	struct:_xmlXPathObject	access:public
_xmlXPathObject::index	/usr/include/libxml2/libxml/xpath.h	/^    int index;$/;"	m	struct:_xmlXPathObject	access:public
_xmlXPathObject::index2	/usr/include/libxml2/libxml/xpath.h	/^    int index2;$/;"	m	struct:_xmlXPathObject	access:public
_xmlXPathObject::nodesetval	/usr/include/libxml2/libxml/xpath.h	/^    xmlNodeSetPtr nodesetval;$/;"	m	struct:_xmlXPathObject	access:public
_xmlXPathObject::stringval	/usr/include/libxml2/libxml/xpath.h	/^    xmlChar *stringval;$/;"	m	struct:_xmlXPathObject	access:public
_xmlXPathObject::type	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathObjectType type;$/;"	m	struct:_xmlXPathObject	access:public
_xmlXPathObject::user	/usr/include/libxml2/libxml/xpath.h	/^    void *user;$/;"	m	struct:_xmlXPathObject	access:public
_xmlXPathObject::user2	/usr/include/libxml2/libxml/xpath.h	/^    void *user2;$/;"	m	struct:_xmlXPathObject	access:public
_xmlXPathParserContext	/usr/include/libxml2/libxml/xpath.h	/^struct _xmlXPathParserContext {$/;"	s
_xmlXPathParserContext::ancestor	/usr/include/libxml2/libxml/xpath.h	/^    xmlNodePtr         ancestor;	\/* used for walking preceding axis *\/$/;"	m	struct:_xmlXPathParserContext	access:public
_xmlXPathParserContext::base	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar *base;			\/* the full expression *\/$/;"	m	struct:_xmlXPathParserContext	access:public
_xmlXPathParserContext::comp	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathCompExprPtr comp;		\/* the precompiled expression *\/$/;"	m	struct:_xmlXPathParserContext	access:public
_xmlXPathParserContext::context	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathContextPtr  context;	\/* the evaluation context *\/$/;"	m	struct:_xmlXPathParserContext	access:public
_xmlXPathParserContext::cur	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar *cur;			\/* the current char being parsed *\/$/;"	m	struct:_xmlXPathParserContext	access:public
_xmlXPathParserContext::error	/usr/include/libxml2/libxml/xpath.h	/^    int error;				\/* error code *\/$/;"	m	struct:_xmlXPathParserContext	access:public
_xmlXPathParserContext::value	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathObjectPtr     value;	\/* the current value *\/$/;"	m	struct:_xmlXPathParserContext	access:public
_xmlXPathParserContext::valueFrame	/usr/include/libxml2/libxml/xpath.h	/^    int              valueFrame;        \/* used to limit Pop on the stack *\/$/;"	m	struct:_xmlXPathParserContext	access:public
_xmlXPathParserContext::valueMax	/usr/include/libxml2/libxml/xpath.h	/^    int                valueMax;	\/* max number of values stacked *\/$/;"	m	struct:_xmlXPathParserContext	access:public
_xmlXPathParserContext::valueNr	/usr/include/libxml2/libxml/xpath.h	/^    int                 valueNr;	\/* number of values stacked *\/$/;"	m	struct:_xmlXPathParserContext	access:public
_xmlXPathParserContext::valueTab	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathObjectPtr *valueTab;	\/* stack of values *\/$/;"	m	struct:_xmlXPathParserContext	access:public
_xmlXPathParserContext::xptr	/usr/include/libxml2/libxml/xpath.h	/^    int xptr;				\/* it this an XPointer expression *\/$/;"	m	struct:_xmlXPathParserContext	access:public
_xmlXPathType	/usr/include/libxml2/libxml/xpath.h	/^struct _xmlXPathType {$/;"	s
_xmlXPathType::func	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathConvertFunc func;		\/* the conversion function *\/$/;"	m	struct:_xmlXPathType	access:public
_xmlXPathType::name	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar         *name;		\/* the type name *\/$/;"	m	struct:_xmlXPathType	access:public
_xmlXPathVariable	/usr/include/libxml2/libxml/xpath.h	/^struct _xmlXPathVariable {$/;"	s
_xmlXPathVariable::name	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar       *name;		\/* the variable name *\/$/;"	m	struct:_xmlXPathVariable	access:public
_xmlXPathVariable::value	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathObjectPtr value;		\/* the value *\/$/;"	m	struct:_xmlXPathVariable	access:public
alloc	/usr/include/libxml2/libxml/tree.h	/^    xmlBufferAllocationScheme alloc; \/* The realloc method *\/$/;"	m	struct:_xmlBuffer	access:public
am	/usr/include/libxml2/libxml/valid.h	/^    void                     *am;$/;"	m	struct:_xmlValidCtxt	access:public
am	/usr/include/libxml2/libxml/valid.h	/^    xmlAutomataPtr            am;     \/* the automata *\/$/;"	m	struct:_xmlValidCtxt	access:public
ancestor	/usr/include/libxml2/libxml/xpath.h	/^    xmlNodePtr         ancestor;	\/* used for walking preceding axis *\/$/;"	m	struct:_xmlXPathParserContext	access:public
annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchema	access:public
annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaAttribute	access:public
annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaElement	access:public
annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaFacet	access:public
annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaNotation	access:public
annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaType	access:public
annot	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAnnotPtr annot;$/;"	m	struct:_xmlSchemaWildcard	access:public
any	/usr/include/libxml2/libxml/schemasInternals.h	/^    int any; \/* Indicates if the ns constraint is of ##any *\/$/;"	m	struct:_xmlSchemaWildcard	access:public
attallocs	/usr/include/libxml2/libxml/parser.h	/^    int               *attallocs;     \/* which attribute were allocated *\/$/;"	m	struct:_xmlParserCtxt	access:public
attr	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaAttribute *attr;\/* the linked attribute *\/$/;"	m	struct:_xmlSchemaAttributeLink	typeref:struct:_xmlSchemaAttributeLink::_xmlSchemaAttribute	access:public
attr	/usr/include/libxml2/libxml/tree.h	/^    xmlAttrPtr        attr;	\/* The attribute holding it *\/$/;"	m	struct:_xmlID	access:public
attr	/usr/include/libxml2/libxml/tree.h	/^    xmlAttrPtr        attr;	\/* The attribute holding it *\/$/;"	m	struct:_xmlRef	access:public
attrDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr attrDecl;$/;"	m	struct:_xmlSchema	access:public
attrUses	/usr/include/libxml2/libxml/schemasInternals.h	/^    void *attrUses;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
attrUses	/usr/include/libxml2/libxml/schemasInternals.h	/^    void *attrUses;$/;"	m	struct:_xmlSchemaType	access:public
attrgrpDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr attrgrpDecl;$/;"	m	struct:_xmlSchema	access:public
attribute	/usr/include/libxml2/libxml/SAX.h	/^		attribute			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *fullname, const xmlChar *value)
attributeDecl	/usr/include/libxml2/libxml/SAX.h	/^		attributeDecl			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *elem, const xmlChar *fullname, int type, int def, const xmlChar *defaultValue, xmlEnumerationPtr tree)
attributeDecl	/usr/include/libxml2/libxml/parser.h	/^    attributeDeclSAXFunc attributeDecl;$/;"	m	struct:_xmlSAXHandler	access:public
attributeDecl	/usr/include/libxml2/libxml/parser.h	/^    attributeDeclSAXFunc attributeDecl;$/;"	m	struct:_xmlSAXHandlerV1	access:public
attributeDeclSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*attributeDeclSAXFunc)(void *ctx,$/;"	t
attributeSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*attributeSAXFunc) (void *ctx,$/;"	t
attributeUses	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAttributeLinkPtr *attributeUses; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
attributeWildcard	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaWildcardPtr attributeWildcard;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
attributeWildcard	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaWildcardPtr attributeWildcard;$/;"	m	struct:_xmlSchemaType	access:public
attributes	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAttributePtr attributes; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
attributes	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAttributePtr attributes; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
attributes	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAttributePtr attributes;$/;"	m	struct:_xmlSchemaElement	access:public
attributes	/usr/include/libxml2/libxml/tree.h	/^    void          *attributes;  \/* Hash table for attributes if any *\/$/;"	m	struct:_xmlDtd	access:public
attributes	/usr/include/libxml2/libxml/tree.h	/^    xmlAttributePtr   attributes;	\/* List of the declared attributes *\/$/;"	m	struct:_xmlElement	access:public
attrs_depr	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char** attrs_depr;		\/* Additional deprecated attributes *\/$/;"	m	struct:_htmlElemDesc	access:public
attrs_opt	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char** attrs_opt;		\/* Optional Attributes *\/$/;"	m	struct:_htmlElemDesc	access:public
attrs_req	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char** attrs_req;		\/* Required attributes *\/$/;"	m	struct:_htmlElemDesc	access:public
atts	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *   *atts;          \/* array for the attributes callbacks *\/$/;"	m	struct:_xmlParserCtxt	access:public
attsDefault	/usr/include/libxml2/libxml/parser.h	/^    xmlHashTablePtr    attsDefault;   \/* defaulted attributes if any *\/$/;"	m	struct:_xmlParserCtxt	access:public
attsSpecial	/usr/include/libxml2/libxml/parser.h	/^    xmlHashTablePtr    attsSpecial;   \/* non-CDATA attributes if any *\/$/;"	m	struct:_xmlParserCtxt	access:public
atype	/usr/include/libxml2/libxml/tree.h	/^    xmlAttributeType       atype;	\/* The attribute type *\/$/;"	m	struct:_xmlAttribute	access:public
atype	/usr/include/libxml2/libxml/tree.h	/^    xmlAttributeType atype;     \/* the attribute type if validating *\/$/;"	m	struct:_xmlAttr	access:public
authority	/usr/include/libxml2/libxml/uri.h	/^    char *authority;	\/* the authority part *\/$/;"	m	struct:_xmlURI	access:public
axis	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathAxisPtr axis;		\/* Array of defined axis *\/$/;"	m	struct:_xmlXPathContext	access:public
base	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *base;              \/* Base of the array to parse *\/$/;"	m	struct:_xmlParserInput	access:public
base	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *base; \/* Base type's local name *\/$/;"	m	struct:_xmlSchemaType	access:public
base	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypePtr base; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
base	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar *base;			\/* the full expression *\/$/;"	m	struct:_xmlXPathParserContext	access:public
baseNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *baseNs; \/* Base type's target namespace *\/$/;"	m	struct:_xmlSchemaType	access:public
baseType	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypePtr baseType; \/* The base type component *\/$/;"	m	struct:_xmlSchemaType	access:public
begin_line	/usr/include/libxml2/libxml/parser.h	/^  unsigned long begin_line;$/;"	m	struct:_xmlParserNodeInfo	access:public
begin_pos	/usr/include/libxml2/libxml/parser.h	/^  unsigned long begin_pos;$/;"	m	struct:_xmlParserNodeInfo	access:public
boolval	/usr/include/libxml2/libxml/xpath.h	/^    int boolval;$/;"	m	struct:_xmlXPathObject	access:public
buf	/usr/include/libxml2/libxml/parser.h	/^    xmlParserInputBufferPtr buf;      \/* UTF-8 encoded buffer *\/$/;"	m	struct:_xmlParserInput	access:public
buffer	/usr/include/libxml2/libxml/parser.h	/^  xmlParserNodeInfo* buffer;$/;"	m	struct:_xmlParserNodeInfoSeq	access:public
buffer	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlBufferPtr buffer;    \/* Local buffer encoded in UTF-8 *\/$/;"	m	struct:_xmlParserInputBuffer	access:public
buffer	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlBufferPtr buffer;    \/* Local buffer encoded in UTF-8 or ISOLatin *\/$/;"	m	struct:_xmlOutputBuffer	access:public
builtInType	/usr/include/libxml2/libxml/schemasInternals.h	/^    int builtInType; \/* Type of built-in types. *\/$/;"	m	struct:_xmlSchemaType	access:public
c1	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlElementContent *c1;	\/* first child *\/$/;"	m	struct:_xmlElementContent	typeref:struct:_xmlElementContent::_xmlElementContent	access:public
c2	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlElementContent *c2;	\/* second child *\/$/;"	m	struct:_xmlElementContent	typeref:struct:_xmlElementContent::_xmlElementContent	access:public
cache	/usr/include/libxml2/libxml/xpath.h	/^    void *cache;$/;"	m	struct:_xmlXPathContext	access:public
catalogs	/usr/include/libxml2/libxml/parser.h	/^    void              *catalogs;      \/* document's own catalog *\/$/;"	m	struct:_xmlParserCtxt	access:public
cdataBlock	/usr/include/libxml2/libxml/SAX.h	/^		cdataBlock			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *value, int len)
cdataBlock	/usr/include/libxml2/libxml/parser.h	/^    cdataBlockSAXFunc cdataBlock;$/;"	m	struct:_xmlSAXHandler	access:public
cdataBlock	/usr/include/libxml2/libxml/parser.h	/^    cdataBlockSAXFunc cdataBlock;$/;"	m	struct:_xmlSAXHandlerV1	access:public
cdataBlockSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*cdataBlockSAXFunc) ($/;"	t
characters	/usr/include/libxml2/libxml/SAX.h	/^		characters			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *ch, int len)
characters	/usr/include/libxml2/libxml/parser.h	/^    charactersSAXFunc characters;$/;"	m	struct:_xmlSAXHandler	access:public
characters	/usr/include/libxml2/libxml/parser.h	/^    charactersSAXFunc characters;$/;"	m	struct:_xmlSAXHandlerV1	access:public
charactersSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*charactersSAXFunc) (void *ctx,$/;"	t
charset	/usr/include/libxml2/libxml/parser.h	/^    int                charset;       \/* encoding of the in-memory content$/;"	m	struct:_xmlParserCtxt	access:public
charset	/usr/include/libxml2/libxml/tree.h	/^    int             charset;    \/* encoding of the in-memory content$/;"	m	struct:_xmlDoc	access:public
checkIndex	/usr/include/libxml2/libxml/parser.h	/^    long            checkIndex;       \/* used by progressive parsing lookup *\/$/;"	m	struct:_xmlParserCtxt	access:public
checkNamespace	/usr/include/libxml2/libxml/SAX.h	/^		checkNamespace			(void *ctx,$/;"	p	signature:(void *ctx, xmlChar *nameSpace)
checked	/usr/include/libxml2/libxml/entities.h	/^    int			 checked;	\/* was the entity content checked *\/$/;"	m	struct:_xmlEntity	access:public
children	/usr/include/libxml2/libxml/entities.h	/^    struct _xmlNode    *children;	\/* First child link *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode	access:public
children	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode    *children;	\/* NULL *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode	access:public
children	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode    *children;	\/* NULL *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode	access:public
children	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *children;	\/* parent->childs link *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode	access:public
children	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *children;	\/* the document tree *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode	access:public
children	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *children;	\/* the value of the property *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlNode	access:public
children	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *children;	\/* the value of the property link *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode	access:public
cleanup	/usr/include/libxml2/libxml/uri.h	/^    int  cleanup;	\/* parsing potentially unclean URI *\/$/;"	m	struct:_xmlURI	access:public
closecallback	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlInputCloseCallback  closecallback;$/;"	m	struct:_xmlParserInputBuffer	access:public
closecallback	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlOutputCloseCallback  closecallback;$/;"	m	struct:_xmlOutputBuffer	access:public
code	/usr/include/libxml2/libxml/xmlerror.h	/^    int		code;	\/* The error code, e.g. an xmlParserError *\/$/;"	m	struct:_xmlError	access:public
col	/usr/include/libxml2/libxml/parser.h	/^    int col;                          \/* Current column *\/$/;"	m	struct:_xmlParserInput	access:public
comment	/usr/include/libxml2/libxml/SAX.h	/^		comment				(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *value)
comment	/usr/include/libxml2/libxml/parser.h	/^    commentSAXFunc comment;$/;"	m	struct:_xmlSAXHandler	access:public
comment	/usr/include/libxml2/libxml/parser.h	/^    commentSAXFunc comment;$/;"	m	struct:_xmlSAXHandlerV1	access:public
commentSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*commentSAXFunc) (void *ctx,$/;"	t
comp	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathCompExprPtr comp;		\/* the precompiled expression *\/$/;"	m	struct:_xmlXPathParserContext	access:public
compressed	/usr/include/libxml2/libxml/xmlIO.h	/^    int	compressed;	    \/* -1=unknown, 0=not compressed, 1=compressed *\/$/;"	m	struct:_xmlParserInputBuffer	access:public
compression	/usr/include/libxml2/libxml/tree.h	/^    int             compression;\/* level of zlib compression *\/$/;"	m	struct:_xmlDoc	access:public
consumed	/usr/include/libxml2/libxml/parser.h	/^    unsigned long consumed;           \/* How many xmlChars already consumed *\/$/;"	m	struct:_xmlParserInput	access:public
contModel	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlRegexpPtr contModel; \/* Holds the automaton of the content model *\/$/;"	m	struct:_xmlSchemaType	access:public
contModel	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlRegexpPtr contModel; \/* Obsolete for WXS, maybe used for RelaxNG *\/$/;"	m	struct:_xmlSchemaElement	access:public
contModel	/usr/include/libxml2/libxml/tree.h	/^    void	      *contModel;$/;"	m	struct:_xmlElement	access:public
contModel	/usr/include/libxml2/libxml/tree.h	/^    xmlRegexpPtr       contModel;	\/* the validating regexp *\/$/;"	m	struct:_xmlElement	access:public
content	/usr/include/libxml2/libxml/entities.h	/^    xmlChar             *content;	\/* content or ndata if unparsed *\/$/;"	m	struct:_xmlEntity	access:public
content	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlNodePtr content;         \/* the annotation *\/$/;"	m	struct:_xmlSchemaAnnot	access:public
content	/usr/include/libxml2/libxml/tree.h	/^    xmlChar         *content;   \/* the content *\/$/;"	m	struct:_xmlNode	access:public
content	/usr/include/libxml2/libxml/tree.h	/^    xmlChar *content;		\/* The buffer content UTF8 *\/$/;"	m	struct:_xmlBuffer	access:public
content	/usr/include/libxml2/libxml/tree.h	/^    xmlElementContentPtr content;	\/* the allowed element content *\/$/;"	m	struct:_xmlElement	access:public
contentIO	/usr/include/libxml2/libxml/tree.h	/^    xmlChar *contentIO;		\/* in IO mode we may have a different base *\/$/;"	m	struct:_xmlBuffer	access:public
contentType	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaContentType contentType;$/;"	m	struct:_xmlSchemaElement	access:public
contentType	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaContentType contentType;$/;"	m	struct:_xmlSchemaType	access:public
contentTypeDef	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypePtr contentTypeDef; \/* Used for the simple content of complex types.$/;"	m	struct:_xmlSchemaType	access:public
context	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc *context;		\/* normally an xmlDoc *\/$/;"	m	struct:_xmlNs	typeref:struct:_xmlNs::_xmlDoc	access:public
context	/usr/include/libxml2/libxml/xmlIO.h	/^    void*                   context;$/;"	m	struct:_xmlOutputBuffer	access:public
context	/usr/include/libxml2/libxml/xmlIO.h	/^    void*                  context;$/;"	m	struct:_xmlParserInputBuffer	access:public
context	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathContextPtr  context;	\/* the evaluation context *\/$/;"	m	struct:_xmlXPathParserContext	access:public
contextSize	/usr/include/libxml2/libxml/xpath.h	/^    int contextSize;			\/* the context size *\/$/;"	m	struct:_xmlXPathContext	access:public
conv	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlBufferPtr conv;      \/* if encoder != NULL buffer for output *\/$/;"	m	struct:_xmlOutputBuffer	access:public
counter	/usr/include/libxml2/libxml/schemasInternals.h	/^    int counter; \/* used to give ononymous components unique names *\/$/;"	m	struct:_xmlSchema	access:public
ctxt	/usr/include/libxml2/libxml/xmlerror.h	/^    void       *ctxt;   \/* the parser context if available *\/$/;"	m	struct:_xmlError	access:public
cur	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *cur;               \/* Current char being parsed *\/$/;"	m	struct:_xmlParserInput	access:public
cur	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar *cur;			\/* the current char being parsed *\/$/;"	m	struct:_xmlXPathParserContext	access:public
debugNode	/usr/include/libxml2/libxml/xpath.h	/^    xmlNodePtr debugNode;		\/* the source node XSLT *\/$/;"	m	struct:_xmlXPathContext	access:public
def	/usr/include/libxml2/libxml/tree.h	/^    xmlAttributeDefault      def;	\/* the default *\/$/;"	m	struct:_xmlAttribute	access:public
defVal	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaValPtr defVal; \/* The compiled value constraint *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
defVal	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaValPtr defVal; \/* The compiled value contraint. *\/$/;"	m	struct:_xmlSchemaElement	access:public
defValue	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *defValue; \/* The initial value of the value constraint *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
defaultValue	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar  *defaultValue;	\/* or the default value *\/$/;"	m	struct:_xmlAttribute	access:public
defaultsubelt	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char* defaultsubelt;	\/* subelement for suggested auto-repair$/;"	m	struct:_htmlElemDesc	access:public
depr	/usr/include/libxml2/libxml/HTMLparser.h	/^    char depr;          \/* Is this a deprecated element ? *\/$/;"	m	struct:_htmlElemDesc	access:public
depth	/usr/include/libxml2/libxml/parser.h	/^    int                depth;         \/* to prevent entity substitution loops *\/$/;"	m	struct:_xmlParserCtxt	access:public
desc	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char *desc;   \/* the description *\/$/;"	m	struct:_htmlElemDesc	access:public
desc	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char *desc;   \/* the description *\/$/;"	m	struct:_htmlEntityDesc	access:public
dict	/usr/include/libxml2/libxml/parser.h	/^    xmlDictPtr         dict;          \/* dictionnary for the parser *\/$/;"	m	struct:_xmlParserCtxt	access:public
dict	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlDictPtr      dict;$/;"	m	struct:_xmlSchema	access:public
dict	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDict *dict;      \/* dict used to allocate names or NULL *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDict	access:public
dict	/usr/include/libxml2/libxml/xpath.h	/^    xmlDictPtr dict;			\/* dictionary if any *\/$/;"	m	struct:_xmlXPathContext	access:public
dictNames	/usr/include/libxml2/libxml/parser.h	/^    int               dictNames;    \/* Use dictionary names for the tree *\/$/;"	m	struct:_xmlParserCtxt	access:public
directory	/usr/include/libxml2/libxml/parser.h	/^    char           *directory;        \/* the data directory *\/$/;"	m	struct:_xmlParserCtxt	access:public
directory	/usr/include/libxml2/libxml/parser.h	/^    const char *directory;            \/* the directory\/base of the file *\/$/;"	m	struct:_xmlParserInput	access:public
disableSAX	/usr/include/libxml2/libxml/parser.h	/^    int             disableSAX;       \/* SAX callbacks are disabled *\/$/;"	m	struct:_xmlParserCtxt	access:public
doc	/usr/include/libxml2/libxml/debugXML.h	/^    xmlDocPtr doc;$/;"	m	struct:_xmlShellCtxt	access:public
doc	/usr/include/libxml2/libxml/entities.h	/^    struct _xmlDoc          *doc;       \/* the containing document *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlDoc	access:public
doc	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlDocPtr doc;$/;"	m	struct:_xmlSchema	access:public
doc	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc          *doc;       \/* the containing document *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlDoc	access:public
doc	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc          *doc;       \/* the containing document *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlDoc	access:public
doc	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc   *doc;	\/* The document holding the ID *\/$/;"	m	struct:_xmlID	typeref:struct:_xmlID::_xmlDoc	access:public
doc	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc  *doc;	\/* autoreference to itself *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDoc	access:public
doc	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc  *doc;	\/* the containing document *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlDoc	access:public
doc	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc  *doc;	\/* the containing document *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlDoc	access:public
doc	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc  *doc;	\/* the containing document *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlDoc	access:public
doc	/usr/include/libxml2/libxml/valid.h	/^    xmlDocPtr              doc;       \/* the document *\/$/;"	m	struct:_xmlValidCtxt	access:public
doc	/usr/include/libxml2/libxml/xpath.h	/^    xmlDocPtr doc;			\/* The current document *\/$/;"	m	struct:_xmlXPathContext	access:public
docbCreateFileParserCtxt	/usr/include/libxml2/libxml/DOCBparser.h	/^		     docbCreateFileParserCtxt(const char *filename,$/;"	p	signature:(const char *filename, const char *encoding)
docbCreatePushParserCtxt	/usr/include/libxml2/libxml/DOCBparser.h	/^		     docbCreatePushParserCtxt(docbSAXHandlerPtr sax,$/;"	p	signature:(docbSAXHandlerPtr sax, void *user_data, const char *chunk, int size, const char *filename, xmlCharEncoding enc)
docbDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	/^	xmlSAXHandlerV1 docbDefaultSAXHandler;$/;"	m	struct:_xmlGlobalState	access:public
docbDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlSAXHandlerV1 docbDefaultSAXHandler;$/;"	v
docbDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	253;"	d
docbDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	67;"	d
docbDefaultSAXHandlerInit	/usr/include/libxml2/libxml/SAX2.h	/^		docbDefaultSAXHandlerInit	(void);$/;"	p	signature:(void)
docbDocPtr	/usr/include/libxml2/libxml/DOCBparser.h	/^typedef xmlDocPtr docbDocPtr;$/;"	t
docbEncodeEntities	/usr/include/libxml2/libxml/DOCBparser.h	/^		     docbEncodeEntities(unsigned char *out,$/;"	p	signature:(unsigned char *out, int *outlen, const unsigned char *in, int *inlen, int quoteChar)
docbFreeParserCtxt	/usr/include/libxml2/libxml/DOCBparser.h	/^		     docbFreeParserCtxt      (docbParserCtxtPtr ctxt);$/;"	p	signature:(docbParserCtxtPtr ctxt)
docbParseChunk	/usr/include/libxml2/libxml/DOCBparser.h	/^		     docbParseChunk          (docbParserCtxtPtr ctxt,$/;"	p	signature:(docbParserCtxtPtr ctxt, const char *chunk, int size, int terminate)
docbParseDoc	/usr/include/libxml2/libxml/DOCBparser.h	/^		     docbParseDoc      (xmlChar *cur,$/;"	p	signature:(xmlChar *cur, const char *encoding)
docbParseDocument	/usr/include/libxml2/libxml/DOCBparser.h	/^		     docbParseDocument       (docbParserCtxtPtr ctxt);$/;"	p	signature:(docbParserCtxtPtr ctxt)
docbParseFile	/usr/include/libxml2/libxml/DOCBparser.h	/^		     docbParseFile     (const char *filename,$/;"	p	signature:(const char *filename, const char *encoding)
docbParserCtxt	/usr/include/libxml2/libxml/DOCBparser.h	/^typedef xmlParserCtxt docbParserCtxt;$/;"	t
docbParserCtxtPtr	/usr/include/libxml2/libxml/DOCBparser.h	/^typedef xmlParserCtxtPtr docbParserCtxtPtr;$/;"	t
docbParserInput	/usr/include/libxml2/libxml/DOCBparser.h	/^typedef xmlParserInput docbParserInput;$/;"	t
docbParserInputPtr	/usr/include/libxml2/libxml/DOCBparser.h	/^typedef xmlParserInputPtr docbParserInputPtr;$/;"	t
docbSAXHandler	/usr/include/libxml2/libxml/DOCBparser.h	/^typedef xmlSAXHandler docbSAXHandler;$/;"	t
docbSAXHandlerPtr	/usr/include/libxml2/libxml/DOCBparser.h	/^typedef xmlSAXHandlerPtr docbSAXHandlerPtr;$/;"	t
docbSAXParseDoc	/usr/include/libxml2/libxml/DOCBparser.h	/^		     docbSAXParseDoc   (xmlChar *cur,$/;"	p	signature:(xmlChar *cur, const char *encoding, docbSAXHandlerPtr sax, void *userData)
docbSAXParseFile	/usr/include/libxml2/libxml/DOCBparser.h	/^		     docbSAXParseFile  (const char *filename,$/;"	p	signature:(const char *filename, const char *encoding, docbSAXHandlerPtr sax, void *userData)
docdict	/usr/include/libxml2/libxml/parser.h	/^    int                docdict;       \/* use strings from dict to build tree *\/$/;"	m	struct:_xmlParserCtxt	access:public
domain	/usr/include/libxml2/libxml/xmlerror.h	/^    int		domain;	\/* What part of the library raised this error *\/$/;"	m	struct:_xmlError	access:public
dtd	/usr/include/libxml2/libxml/HTMLparser.h	/^    char dtd;           \/* 1: only in Loose DTD, 2: only Frameset one *\/$/;"	m	struct:_htmlElemDesc	access:public
elem	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar          *elem;	\/* Element holding the attribute *\/$/;"	m	struct:_xmlAttribute	access:public
elemDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr elemDecl;$/;"	m	struct:_xmlSchema	access:public
elementDecl	/usr/include/libxml2/libxml/SAX.h	/^		elementDecl			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name, int type, xmlElementContentPtr content)
elementDecl	/usr/include/libxml2/libxml/parser.h	/^    elementDeclSAXFunc elementDecl;$/;"	m	struct:_xmlSAXHandler	access:public
elementDecl	/usr/include/libxml2/libxml/parser.h	/^    elementDeclSAXFunc elementDecl;$/;"	m	struct:_xmlSAXHandlerV1	access:public
elementDeclSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*elementDeclSAXFunc)(void *ctx,$/;"	t
elements	/usr/include/libxml2/libxml/tree.h	/^    void          *elements;    \/* Hash table for elements if any *\/$/;"	m	struct:_xmlDtd	access:public
empty	/usr/include/libxml2/libxml/HTMLparser.h	/^    char empty;         \/* Is this an empty element ? *\/$/;"	m	struct:_htmlElemDesc	access:public
emptyExp	/usr/include/libxml2/libxml/xmlregexp.h	/^XMLPUBVAR xmlExpNodePtr emptyExp;$/;"	v
encoder	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlCharEncodingHandlerPtr encoder; \/* I18N conversions to UTF-8 *\/$/;"	m	struct:_xmlOutputBuffer	access:public
encoder	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlCharEncodingHandlerPtr encoder; \/* I18N conversions to UTF-8 *\/$/;"	m	struct:_xmlParserInputBuffer	access:public
encoding	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar   *encoding;        \/* the declared encoding, if any *\/$/;"	m	struct:_xmlParserCtxt	access:public
encoding	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *encoding;          \/* the encoding string for entity *\/$/;"	m	struct:_xmlParserInput	access:public
encoding	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar  *encoding;   \/* external initial encoding, if any *\/$/;"	m	struct:_xmlDoc	access:public
end	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *end;               \/* end of the array to parse *\/$/;"	m	struct:_xmlParserInput	access:public
endDocument	/usr/include/libxml2/libxml/SAX.h	/^		endDocument			(void *ctx);$/;"	p	signature:(void *ctx)
endDocument	/usr/include/libxml2/libxml/parser.h	/^    endDocumentSAXFunc endDocument;$/;"	m	struct:_xmlSAXHandler	access:public
endDocument	/usr/include/libxml2/libxml/parser.h	/^    endDocumentSAXFunc endDocument;$/;"	m	struct:_xmlSAXHandlerV1	access:public
endDocumentSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*endDocumentSAXFunc) (void *ctx);$/;"	t
endElement	/usr/include/libxml2/libxml/SAX.h	/^		endElement			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name)
endElement	/usr/include/libxml2/libxml/parser.h	/^    endElementSAXFunc endElement;$/;"	m	struct:_xmlSAXHandler	access:public
endElement	/usr/include/libxml2/libxml/parser.h	/^    endElementSAXFunc endElement;$/;"	m	struct:_xmlSAXHandlerV1	access:public
endElementNs	/usr/include/libxml2/libxml/parser.h	/^    endElementNsSAX2Func endElementNs;$/;"	m	struct:_xmlSAXHandler	access:public
endElementNsSAX2Func	/usr/include/libxml2/libxml/parser.h	/^typedef void (*endElementNsSAX2Func)   (void *ctx,$/;"	t
endElementSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*endElementSAXFunc) (void *ctx,$/;"	t
endTag	/usr/include/libxml2/libxml/HTMLparser.h	/^    char endTag;        \/* Whether the end tag can be implied *\/$/;"	m	struct:_htmlElemDesc	access:public
end_line	/usr/include/libxml2/libxml/parser.h	/^  unsigned long end_line;$/;"	m	struct:_xmlParserNodeInfo	access:public
end_pos	/usr/include/libxml2/libxml/parser.h	/^  unsigned long end_pos;$/;"	m	struct:_xmlParserNodeInfo	access:public
entities	/usr/include/libxml2/libxml/tree.h	/^    void          *entities;    \/* Hash table for entities if any *\/$/;"	m	struct:_xmlDtd	access:public
entity	/usr/include/libxml2/libxml/parser.h	/^    xmlParserInputPtr  entity;        \/* used to check entities boundaries *\/$/;"	m	struct:_xmlParserCtxt	access:public
entityDecl	/usr/include/libxml2/libxml/SAX.h	/^		entityDecl			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name, int type, const xmlChar *publicId, const xmlChar *systemId, xmlChar *content)
entityDecl	/usr/include/libxml2/libxml/parser.h	/^    entityDeclSAXFunc entityDecl;$/;"	m	struct:_xmlSAXHandler	access:public
entityDecl	/usr/include/libxml2/libxml/parser.h	/^    entityDeclSAXFunc entityDecl;$/;"	m	struct:_xmlSAXHandlerV1	access:public
entityDeclSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*entityDeclSAXFunc) (void *ctx,$/;"	t
errNo	/usr/include/libxml2/libxml/parser.h	/^    int errNo;                        \/* error code *\/$/;"	m	struct:_xmlParserCtxt	access:public
error	/usr/include/libxml2/libxml/parser.h	/^    errorSAXFunc error;$/;"	m	struct:_xmlSAXHandler	access:public
error	/usr/include/libxml2/libxml/parser.h	/^    errorSAXFunc error;$/;"	m	struct:_xmlSAXHandlerV1	access:public
error	/usr/include/libxml2/libxml/valid.h	/^    xmlValidityErrorFunc error;		\/* the callback in case of errors *\/$/;"	m	struct:_xmlValidCtxt	access:public
error	/usr/include/libxml2/libxml/xmlIO.h	/^    int error;$/;"	m	struct:_xmlOutputBuffer	access:public
error	/usr/include/libxml2/libxml/xmlIO.h	/^    int error;$/;"	m	struct:_xmlParserInputBuffer	access:public
error	/usr/include/libxml2/libxml/xpath.h	/^    int error;				\/* error code *\/$/;"	m	struct:_xmlXPathParserContext	access:public
error	/usr/include/libxml2/libxml/xpath.h	/^    xmlStructuredErrorFunc error;       \/* the callback in case of errors *\/$/;"	m	struct:_xmlXPathContext	access:public
etype	/usr/include/libxml2/libxml/entities.h	/^    xmlEntityType          etype;	\/* The entity type *\/$/;"	m	struct:_xmlEntity	access:public
etype	/usr/include/libxml2/libxml/tree.h	/^    xmlElementTypeVal      etype;	\/* The type *\/$/;"	m	struct:_xmlElement	access:public
extSubSystem	/usr/include/libxml2/libxml/parser.h	/^    xmlChar *          extSubSystem;  \/* SYSTEM ID of external subset *\/$/;"	m	struct:_xmlParserCtxt	access:public
extSubURI	/usr/include/libxml2/libxml/parser.h	/^    xmlChar *          extSubURI;     \/* URI of external subset *\/$/;"	m	struct:_xmlParserCtxt	access:public
extSubset	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDtd  *extSubset;	\/* the document external subset *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDtd	access:public
extended	/usr/include/libxml2/libxml/xlink.h	/^    xlinkExtendedLinkFunk extended;$/;"	m	struct:_xlinkHandler	access:public
external	/usr/include/libxml2/libxml/parser.h	/^    int              external;        \/* are we parsing an external entity *\/$/;"	m	struct:_xmlParserCtxt	access:public
externalSubset	/usr/include/libxml2/libxml/SAX.h	/^		externalSubset			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name, const xmlChar *ExternalID, const xmlChar *SystemID)
externalSubset	/usr/include/libxml2/libxml/parser.h	/^    externalSubsetSAXFunc externalSubset;$/;"	m	struct:_xmlSAXHandler	access:public
externalSubset	/usr/include/libxml2/libxml/parser.h	/^    externalSubsetSAXFunc externalSubset;$/;"	m	struct:_xmlSAXHandlerV1	access:public
externalSubsetSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*externalSubsetSAXFunc) (void *ctx,$/;"	t
extra	/usr/include/libxml2/libxml/tree.h	/^    unsigned short   extra;	\/* extra data for XPath\/XSLT *\/$/;"	m	struct:_xmlNode	access:public
extra	/usr/include/libxml2/libxml/xpath.h	/^    void *extra;                        \/* needed for XSLT *\/$/;"	m	struct:_xmlXPathContext	access:public
facet	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaFacetPtr facet;\/* the linked facet *\/$/;"	m	struct:_xmlSchemaFacetLink	access:public
facetSet	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaFacetLinkPtr facetSet; \/* All facets (incl. inherited) *\/$/;"	m	struct:_xmlSchemaType	access:public
facets	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaFacetPtr facets; \/* Local facets *\/$/;"	m	struct:_xmlSchemaType	access:public
fatalError	/usr/include/libxml2/libxml/parser.h	/^    fatalErrorSAXFunc fatalError; \/* unused error() get all the errors *\/$/;"	m	struct:_xmlSAXHandler	access:public
fatalError	/usr/include/libxml2/libxml/parser.h	/^    fatalErrorSAXFunc fatalError; \/* unused error() get all the errors *\/$/;"	m	struct:_xmlSAXHandlerV1	access:public
file	/usr/include/libxml2/libxml/xmlerror.h	/^    char       *file;	\/* the filename *\/$/;"	m	struct:_xmlError	access:public
filename	/usr/include/libxml2/libxml/debugXML.h	/^    char *filename;$/;"	m	struct:_xmlShellCtxt	access:public
filename	/usr/include/libxml2/libxml/parser.h	/^    const char *filename;             \/* The file analyzed, if any *\/$/;"	m	struct:_xmlParserInput	access:public
finishDtd	/usr/include/libxml2/libxml/valid.h	/^    unsigned int     finishDtd;       \/* finished validating the Dtd ? *\/$/;"	m	struct:_xmlValidCtxt	access:public
fixed	/usr/include/libxml2/libxml/schemasInternals.h	/^    int fixed; \/* XML_SCHEMAS_FACET_PRESERVE, etc. *\/$/;"	m	struct:_xmlSchemaFacet	access:public
flags	/usr/include/libxml2/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchema	access:public
flags	/usr/include/libxml2/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaAttribute	access:public
flags	/usr/include/libxml2/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
flags	/usr/include/libxml2/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaElement	access:public
flags	/usr/include/libxml2/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaType	access:public
flags	/usr/include/libxml2/libxml/schemasInternals.h	/^    int flags;$/;"	m	struct:_xmlSchemaWildcard	access:public
flags	/usr/include/libxml2/libxml/xpath.h	/^    int flags;				\/* flags to control compilation *\/$/;"	m	struct:_xmlXPathContext	access:public
floatval	/usr/include/libxml2/libxml/xpath.h	/^    double floatval;$/;"	m	struct:_xmlXPathObject	access:public
forbiddenExp	/usr/include/libxml2/libxml/xmlregexp.h	/^XMLPUBVAR xmlExpNodePtr forbiddenExp;$/;"	v
fragment	/usr/include/libxml2/libxml/uri.h	/^    char *fragment;	\/* the fragment identifier *\/$/;"	m	struct:_xmlURI	access:public
free	/usr/include/libxml2/libxml/parser.h	/^    xmlParserInputDeallocate free;    \/* function to deallocate the base *\/$/;"	m	struct:_xmlParserInput	access:public
freeAttrs	/usr/include/libxml2/libxml/parser.h	/^    xmlAttrPtr        freeAttrs;    \/* List of freed attributes nodes *\/$/;"	m	struct:_xmlParserCtxt	access:public
freeAttrsNr	/usr/include/libxml2/libxml/parser.h	/^    int               freeAttrsNr;  \/* number of freed attributes nodes *\/$/;"	m	struct:_xmlParserCtxt	access:public
freeElems	/usr/include/libxml2/libxml/parser.h	/^    xmlNodePtr        freeElems;    \/* List of freed element nodes *\/$/;"	m	struct:_xmlParserCtxt	access:public
freeElemsNr	/usr/include/libxml2/libxml/parser.h	/^    int               freeElemsNr;  \/* number of freed element nodes *\/$/;"	m	struct:_xmlParserCtxt	access:public
ftpDataCallback	/usr/include/libxml2/libxml/nanoftp.h	/^typedef void (*ftpDataCallback) (void *userData,$/;"	t
ftpListCallback	/usr/include/libxml2/libxml/nanoftp.h	/^typedef void (*ftpListCallback) (void *userData,$/;"	t
func	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathAxisFunc func;		\/* the search function *\/$/;"	m	struct:_xmlXPathAxis	access:public
func	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathConvertFunc func;		\/* the conversion function *\/$/;"	m	struct:_xmlXPathType	access:public
func	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathEvalFunc func;		\/* the evaluation function *\/$/;"	m	struct:_xmlXPathFunct	access:public
funcHash	/usr/include/libxml2/libxml/xpath.h	/^    xmlHashTablePtr funcHash;		\/* Hash table of defined funcs *\/$/;"	m	struct:_xmlXPathContext	access:public
funcLookupData	/usr/include/libxml2/libxml/xpath.h	/^    void *funcLookupData;		\/* function lookup data *\/$/;"	m	struct:_xmlXPathContext	access:public
funcLookupFunc	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathFuncLookupFunc funcLookupFunc;\/* function lookup func *\/$/;"	m	struct:_xmlXPathContext	access:public
function	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar *function;$/;"	m	struct:_xmlXPathContext	access:public
functionURI	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar *functionURI;$/;"	m	struct:_xmlXPathContext	access:public
getColumnNumber	/usr/include/libxml2/libxml/SAX.h	/^		getColumnNumber			(void *ctx);$/;"	p	signature:(void *ctx)
getColumnNumber	/usr/include/libxml2/libxml/parser.h	/^    int (*getColumnNumber)(void *ctx);$/;"	m	struct:_xmlSAXLocator	access:public
getEntity	/usr/include/libxml2/libxml/SAX.h	/^		getEntity			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name)
getEntity	/usr/include/libxml2/libxml/parser.h	/^    getEntitySAXFunc getEntity;$/;"	m	struct:_xmlSAXHandler	access:public
getEntity	/usr/include/libxml2/libxml/parser.h	/^    getEntitySAXFunc getEntity;$/;"	m	struct:_xmlSAXHandlerV1	access:public
getEntitySAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef xmlEntityPtr (*getEntitySAXFunc) (void *ctx,$/;"	t
getLineNumber	/usr/include/libxml2/libxml/SAX.h	/^		getLineNumber			(void *ctx);$/;"	p	signature:(void *ctx)
getLineNumber	/usr/include/libxml2/libxml/parser.h	/^    int (*getLineNumber)(void *ctx);$/;"	m	struct:_xmlSAXLocator	access:public
getNamespace	/usr/include/libxml2/libxml/SAX.h	/^		getNamespace			(void *ctx);$/;"	p	signature:(void *ctx)
getNsForNodeFunc	/usr/include/libxml2/libxml/tree.h	/^    xmlDOMWrapAcquireNsFunction getNsForNodeFunc;$/;"	m	struct:_xmlDOMWrapCtxt	access:public
getParameterEntity	/usr/include/libxml2/libxml/SAX.h	/^		getParameterEntity		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name)
getParameterEntity	/usr/include/libxml2/libxml/parser.h	/^    getParameterEntitySAXFunc getParameterEntity;$/;"	m	struct:_xmlSAXHandler	access:public
getParameterEntity	/usr/include/libxml2/libxml/parser.h	/^    getParameterEntitySAXFunc getParameterEntity;$/;"	m	struct:_xmlSAXHandlerV1	access:public
getParameterEntitySAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef xmlEntityPtr (*getParameterEntitySAXFunc) (void *ctx,$/;"	t
getPublicId	/usr/include/libxml2/libxml/SAX.h	/^		getPublicId			(void *ctx);$/;"	p	signature:(void *ctx)
getPublicId	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *(*getPublicId)(void *ctx);$/;"	m	struct:_xmlSAXLocator	access:public
getSystemId	/usr/include/libxml2/libxml/SAX.h	/^		getSystemId			(void *ctx);$/;"	p	signature:(void *ctx)
getSystemId	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *(*getSystemId)(void *ctx);$/;"	m	struct:_xmlSAXLocator	access:public
globalNamespace	/usr/include/libxml2/libxml/SAX.h	/^		globalNamespace			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *href, const xmlChar *prefix)
groupDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr groupDecl;$/;"	m	struct:_xmlSchema	access:public
hasExternalSubset	/usr/include/libxml2/libxml/SAX.h	/^		hasExternalSubset		(void *ctx);$/;"	p	signature:(void *ctx)
hasExternalSubset	/usr/include/libxml2/libxml/parser.h	/^    hasExternalSubsetSAXFunc hasExternalSubset;$/;"	m	struct:_xmlSAXHandler	access:public
hasExternalSubset	/usr/include/libxml2/libxml/parser.h	/^    hasExternalSubsetSAXFunc hasExternalSubset;$/;"	m	struct:_xmlSAXHandlerV1	access:public
hasExternalSubset	/usr/include/libxml2/libxml/parser.h	/^    int     hasExternalSubset;        \/* reference and external subset *\/$/;"	m	struct:_xmlParserCtxt	access:public
hasExternalSubsetSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef int (*hasExternalSubsetSAXFunc) (void *ctx);$/;"	t
hasInternalSubset	/usr/include/libxml2/libxml/SAX.h	/^		hasInternalSubset		(void *ctx);$/;"	p	signature:(void *ctx)
hasInternalSubset	/usr/include/libxml2/libxml/parser.h	/^    hasInternalSubsetSAXFunc hasInternalSubset;$/;"	m	struct:_xmlSAXHandler	access:public
hasInternalSubset	/usr/include/libxml2/libxml/parser.h	/^    hasInternalSubsetSAXFunc hasInternalSubset;$/;"	m	struct:_xmlSAXHandlerV1	access:public
hasInternalSubsetSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef int (*hasInternalSubsetSAXFunc) (void *ctx);$/;"	t
hasPErefs	/usr/include/libxml2/libxml/parser.h	/^    int             hasPErefs;        \/* the internal subset has PE refs *\/$/;"	m	struct:_xmlParserCtxt	access:public
here	/usr/include/libxml2/libxml/xpath.h	/^    xmlNodePtr here;			\/* for here() *\/$/;"	m	struct:_xmlXPathContext	access:public
high	/usr/include/libxml2/libxml/chvalid.h	/^    unsigned int	high;$/;"	m	struct:_xmlChLRange	access:public
high	/usr/include/libxml2/libxml/chvalid.h	/^    unsigned short	high;$/;"	m	struct:_xmlChSRange	access:public
href	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar *href;	\/* URL for the namespace *\/$/;"	m	struct:_xmlNs	access:public
html	/usr/include/libxml2/libxml/parser.h	/^    int                  html;        \/* an HTML(1)\/Docbook(2) document$/;"	m	struct:_xmlParserCtxt	access:public
htmlAttrAllowed	/usr/include/libxml2/libxml/HTMLparser.h	/^XMLPUBFUN htmlStatus XMLCALL htmlAttrAllowed(const htmlElemDesc*, const xmlChar*, int) ;$/;"	p	signature:(const htmlElemDesc*, const xmlChar*, int)
htmlAutoCloseTag	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlAutoCloseTag(htmlDocPtr doc,$/;"	p	signature:(htmlDocPtr doc, const xmlChar *name, htmlNodePtr elem)
htmlCreateFileParserCtxt	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN htmlParserCtxtPtr XMLCALL	htmlCreateFileParserCtxt(const char *filename,$/;"	p	signature:(const char *filename, const char *encoding)
htmlCreateMemoryParserCtxt	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlCreateMemoryParserCtxt(const char *buffer,$/;"	p	signature:(const char *buffer, int size)
htmlCreatePushParserCtxt	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlCreatePushParserCtxt(htmlSAXHandlerPtr sax,$/;"	p	signature:(htmlSAXHandlerPtr sax, void *user_data, const char *chunk, int size, const char *filename, xmlCharEncoding enc)
htmlCtxtReadDoc	/usr/include/libxml2/libxml/HTMLparser.h	/^		htmlCtxtReadDoc		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const xmlChar *cur, const char *URL, const char *encoding, int options)
htmlCtxtReadFd	/usr/include/libxml2/libxml/HTMLparser.h	/^		htmlCtxtReadFd		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, int fd, const char *URL, const char *encoding, int options)
htmlCtxtReadFile	/usr/include/libxml2/libxml/HTMLparser.h	/^		htmlCtxtReadFile		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const char *filename, const char *encoding, int options)
htmlCtxtReadIO	/usr/include/libxml2/libxml/HTMLparser.h	/^		htmlCtxtReadIO		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlInputReadCallback ioread, xmlInputCloseCallback ioclose, void *ioctx, const char *URL, const char *encoding, int options)
htmlCtxtReadMemory	/usr/include/libxml2/libxml/HTMLparser.h	/^		htmlCtxtReadMemory		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const char *buffer, int size, const char *URL, const char *encoding, int options)
htmlCtxtReset	/usr/include/libxml2/libxml/HTMLparser.h	/^		htmlCtxtReset		(htmlParserCtxtPtr ctxt);$/;"	p	signature:(htmlParserCtxtPtr ctxt)
htmlCtxtUseOptions	/usr/include/libxml2/libxml/HTMLparser.h	/^		htmlCtxtUseOptions	(htmlParserCtxtPtr ctxt,$/;"	p	signature:(htmlParserCtxtPtr ctxt, int options)
htmlDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	/^	xmlSAXHandlerV1 htmlDefaultSAXHandler;$/;"	m	struct:_xmlGlobalState	access:public
htmlDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlSAXHandlerV1 htmlDefaultSAXHandler;$/;"	v
htmlDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	263;"	d
htmlDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	68;"	d
htmlDefaultSAXHandlerInit	/usr/include/libxml2/libxml/SAX2.h	/^		htmlDefaultSAXHandlerInit	(void);$/;"	p	signature:(void)
htmlDefaultSubelement	/usr/include/libxml2/libxml/HTMLparser.h	279;"	d
htmlDocContentDumpFormatOutput	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlDocContentDumpFormatOutput(xmlOutputBufferPtr buf,$/;"	p	signature:(xmlOutputBufferPtr buf, xmlDocPtr cur, const char *encoding, int format)
htmlDocContentDumpOutput	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlDocContentDumpOutput(xmlOutputBufferPtr buf,$/;"	p	signature:(xmlOutputBufferPtr buf, xmlDocPtr cur, const char *encoding)
htmlDocDump	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlDocDump		(FILE *f,$/;"	p	signature:(FILE *f, xmlDocPtr cur)
htmlDocDumpMemory	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlDocDumpMemory	(xmlDocPtr cur,$/;"	p	signature:(xmlDocPtr cur, xmlChar **mem, int *size)
htmlDocDumpMemoryFormat	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlDocDumpMemoryFormat	(xmlDocPtr cur,$/;"	p	signature:(xmlDocPtr cur, xmlChar **mem, int *size, int format)
htmlDocPtr	/usr/include/libxml2/libxml/HTMLparser.h	/^typedef xmlDocPtr htmlDocPtr;$/;"	t
htmlElemDesc	/usr/include/libxml2/libxml/HTMLparser.h	/^typedef struct _htmlElemDesc htmlElemDesc;$/;"	t	typeref:struct:_htmlElemDesc
htmlElemDescPtr	/usr/include/libxml2/libxml/HTMLparser.h	/^typedef htmlElemDesc *htmlElemDescPtr;$/;"	t
htmlElementAllowedHere	/usr/include/libxml2/libxml/HTMLparser.h	/^XMLPUBFUN int XMLCALL htmlElementAllowedHere(const htmlElemDesc*, const xmlChar*) ;$/;"	p	signature:(const htmlElemDesc*, const xmlChar*)
htmlElementAllowedHereDesc	/usr/include/libxml2/libxml/HTMLparser.h	290;"	d
htmlElementStatusHere	/usr/include/libxml2/libxml/HTMLparser.h	/^XMLPUBFUN htmlStatus XMLCALL htmlElementStatusHere(const htmlElemDesc*, const htmlElemDesc*) ;$/;"	p	signature:(const htmlElemDesc*, const htmlElemDesc*)
htmlEncodeEntities	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlEncodeEntities(unsigned char *out,$/;"	p	signature:(unsigned char *out, int *outlen, const unsigned char *in, int *inlen, int quoteChar)
htmlEntityDesc	/usr/include/libxml2/libxml/HTMLparser.h	/^typedef struct _htmlEntityDesc htmlEntityDesc;$/;"	t	typeref:struct:_htmlEntityDesc
htmlEntityDescPtr	/usr/include/libxml2/libxml/HTMLparser.h	/^typedef htmlEntityDesc *htmlEntityDescPtr;$/;"	t
htmlEntityLookup	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlEntityLookup(const xmlChar *name);$/;"	p	signature:(const xmlChar *name)
htmlEntityValueLookup	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlEntityValueLookup(unsigned int value);$/;"	p	signature:(unsigned int value)
htmlFreeParserCtxt	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlFreeParserCtxt	(htmlParserCtxtPtr ctxt);$/;"	p	signature:(htmlParserCtxtPtr ctxt)
htmlGetMetaEncoding	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlGetMetaEncoding	(htmlDocPtr doc);$/;"	p	signature:(htmlDocPtr doc)
htmlHandleOmittedElem	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlHandleOmittedElem(int val);$/;"	p	signature:(int val)
htmlInitAutoClose	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN void XMLCALL			htmlInitAutoClose	(void);$/;"	p	signature:(void)
htmlIsAutoClosed	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlIsAutoClosed(htmlDocPtr doc,$/;"	p	signature:(htmlDocPtr doc, htmlNodePtr elem)
htmlIsBooleanAttr	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlIsBooleanAttr	(const xmlChar *name);$/;"	p	signature:(const xmlChar *name)
htmlIsScriptAttribute	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlIsScriptAttribute(const xmlChar *name);$/;"	p	signature:(const xmlChar *name)
htmlNewDoc	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlNewDoc		(const xmlChar *URI,$/;"	p	signature:(const xmlChar *URI, const xmlChar *ExternalID)
htmlNewDocNoDtD	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlNewDocNoDtD		(const xmlChar *URI,$/;"	p	signature:(const xmlChar *URI, const xmlChar *ExternalID)
htmlNewParserCtxt	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlNewParserCtxt(void);$/;"	p	signature:(void)
htmlNodeDump	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlNodeDump		(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, xmlDocPtr doc, xmlNodePtr cur)
htmlNodeDumpFile	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlNodeDumpFile	(FILE *out,$/;"	p	signature:(FILE *out, xmlDocPtr doc, xmlNodePtr cur)
htmlNodeDumpFileFormat	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlNodeDumpFileFormat	(FILE *out,$/;"	p	signature:(FILE *out, xmlDocPtr doc, xmlNodePtr cur, const char *encoding, int format)
htmlNodeDumpFormatOutput	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlNodeDumpFormatOutput(xmlOutputBufferPtr buf,$/;"	p	signature:(xmlOutputBufferPtr buf, xmlDocPtr doc, xmlNodePtr cur, const char *encoding, int format)
htmlNodeDumpOutput	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlNodeDumpOutput	(xmlOutputBufferPtr buf, $/;"	p	signature:(xmlOutputBufferPtr buf, xmlDocPtr doc, xmlNodePtr cur, const char *encoding)
htmlNodePtr	/usr/include/libxml2/libxml/HTMLparser.h	/^typedef xmlNodePtr htmlNodePtr;$/;"	t
htmlNodeStatus	/usr/include/libxml2/libxml/HTMLparser.h	/^XMLPUBFUN htmlStatus XMLCALL htmlNodeStatus(const htmlNodePtr, int) ;$/;"	p	signature:(const htmlNodePtr, int)
htmlParseCharRef	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlParseCharRef(htmlParserCtxtPtr ctxt);$/;"	p	signature:(htmlParserCtxtPtr ctxt)
htmlParseChunk	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlParseChunk		(htmlParserCtxtPtr ctxt,$/;"	p	signature:(htmlParserCtxtPtr ctxt, const char *chunk, int size, int terminate)
htmlParseDoc	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlParseDoc	(xmlChar *cur,$/;"	p	signature:(xmlChar *cur, const char *encoding)
htmlParseDocument	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlParseDocument(htmlParserCtxtPtr ctxt);$/;"	p	signature:(htmlParserCtxtPtr ctxt)
htmlParseElement	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlParseElement(htmlParserCtxtPtr ctxt);$/;"	p	signature:(htmlParserCtxtPtr ctxt)
htmlParseEntityRef	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlParseEntityRef(htmlParserCtxtPtr ctxt,$/;"	p	signature:(htmlParserCtxtPtr ctxt, const xmlChar **str)
htmlParseFile	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlParseFile	(const char *filename,$/;"	p	signature:(const char *filename, const char *encoding)
htmlParserCtxt	/usr/include/libxml2/libxml/HTMLparser.h	/^typedef xmlParserCtxt htmlParserCtxt;$/;"	t
htmlParserCtxtPtr	/usr/include/libxml2/libxml/HTMLparser.h	/^typedef xmlParserCtxtPtr htmlParserCtxtPtr;$/;"	t
htmlParserInput	/usr/include/libxml2/libxml/HTMLparser.h	/^typedef xmlParserInput htmlParserInput;$/;"	t
htmlParserInputPtr	/usr/include/libxml2/libxml/HTMLparser.h	/^typedef xmlParserInputPtr htmlParserInputPtr;$/;"	t
htmlParserNodeInfo	/usr/include/libxml2/libxml/HTMLparser.h	/^typedef xmlParserNodeInfo htmlParserNodeInfo;$/;"	t
htmlParserOption	/usr/include/libxml2/libxml/HTMLparser.h	/^} htmlParserOption;$/;"	t	typeref:enum:__anon4
htmlReadDoc	/usr/include/libxml2/libxml/HTMLparser.h	/^		htmlReadDoc		(const xmlChar *cur,$/;"	p	signature:(const xmlChar *cur, const char *URL, const char *encoding, int options)
htmlReadFd	/usr/include/libxml2/libxml/HTMLparser.h	/^		htmlReadFd		(int fd,$/;"	p	signature:(int fd, const char *URL, const char *encoding, int options)
htmlReadFile	/usr/include/libxml2/libxml/HTMLparser.h	/^		htmlReadFile		(const char *URL,$/;"	p	signature:(const char *URL, const char *encoding, int options)
htmlReadIO	/usr/include/libxml2/libxml/HTMLparser.h	/^		htmlReadIO		(xmlInputReadCallback ioread,$/;"	p	signature:(xmlInputReadCallback ioread, xmlInputCloseCallback ioclose, void *ioctx, const char *URL, const char *encoding, int options)
htmlReadMemory	/usr/include/libxml2/libxml/HTMLparser.h	/^		htmlReadMemory		(const char *buffer,$/;"	p	signature:(const char *buffer, int size, const char *URL, const char *encoding, int options)
htmlRequiredAttrs	/usr/include/libxml2/libxml/HTMLparser.h	298;"	d
htmlSAXHandler	/usr/include/libxml2/libxml/HTMLparser.h	/^typedef xmlSAXHandler htmlSAXHandler;$/;"	t
htmlSAXHandlerPtr	/usr/include/libxml2/libxml/HTMLparser.h	/^typedef xmlSAXHandlerPtr htmlSAXHandlerPtr;$/;"	t
htmlSAXParseDoc	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlSAXParseDoc	(xmlChar *cur,$/;"	p	signature:(xmlChar *cur, const char *encoding, htmlSAXHandlerPtr sax, void *userData)
htmlSAXParseFile	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlSAXParseFile(const char *filename,$/;"	p	signature:(const char *filename, const char *encoding, htmlSAXHandlerPtr sax, void *userData)
htmlSaveFile	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlSaveFile		(const char *filename,$/;"	p	signature:(const char *filename, xmlDocPtr cur)
htmlSaveFileEnc	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlSaveFileEnc		(const char *filename,$/;"	p	signature:(const char *filename, xmlDocPtr cur, const char *encoding)
htmlSaveFileFormat	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlSaveFileFormat	(const char *filename,$/;"	p	signature:(const char *filename, xmlDocPtr cur, const char *encoding, int format)
htmlSetMetaEncoding	/usr/include/libxml2/libxml/HTMLtree.h	/^		htmlSetMetaEncoding	(htmlDocPtr doc,$/;"	p	signature:(htmlDocPtr doc, const xmlChar *encoding)
htmlStatus	/usr/include/libxml2/libxml/HTMLparser.h	/^} htmlStatus ;$/;"	t	typeref:enum:__anon5
htmlTagLookup	/usr/include/libxml2/libxml/HTMLparser.h	/^			htmlTagLookup	(const xmlChar *tag);$/;"	p	signature:(const xmlChar *tag)
iconv_in	/usr/include/libxml2/libxml/encoding.h	/^    iconv_t                    iconv_in;$/;"	m	struct:_xmlCharEncodingHandler	access:public
iconv_out	/usr/include/libxml2/libxml/encoding.h	/^    iconv_t                    iconv_out;$/;"	m	struct:_xmlCharEncodingHandler	access:public
id	/usr/include/libxml2/libxml/parser.h	/^    int id;                           \/* an unique identifier for the entity *\/$/;"	m	struct:_xmlParserInput	access:public
id	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *id ; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
id	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *id; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
id	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *id; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement	access:public
id	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *id; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaWildcard	access:public
id	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *id; \/* Obsolete *\/$/;"	m	struct:_xmlSchema	access:public
id	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *id; \/* Obsolete *\/$/;"	m	struct:_xmlSchemaFacet	access:public
id	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *id;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
idcDef	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr idcDef; \/* All identity-constraint defs. *\/$/;"	m	struct:_xmlSchema	access:public
idcs	/usr/include/libxml2/libxml/schemasInternals.h	/^    void *idcs; \/* The identity-constraint defs *\/$/;"	m	struct:_xmlSchemaElement	access:public
identifier	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *identifier;$/;"	m	struct:_xmlSchemaNotation	access:public
ids	/usr/include/libxml2/libxml/tree.h	/^    void           *ids;        \/* Hash table for ID attributes if any *\/$/;"	m	struct:_xmlDoc	access:public
ignorableWhitespace	/usr/include/libxml2/libxml/SAX.h	/^		ignorableWhitespace		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *ch, int len)
ignorableWhitespace	/usr/include/libxml2/libxml/parser.h	/^    ignorableWhitespaceSAXFunc ignorableWhitespace;$/;"	m	struct:_xmlSAXHandler	access:public
ignorableWhitespace	/usr/include/libxml2/libxml/parser.h	/^    ignorableWhitespaceSAXFunc ignorableWhitespace;$/;"	m	struct:_xmlSAXHandlerV1	access:public
ignorableWhitespaceSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*ignorableWhitespaceSAXFunc) (void *ctx,$/;"	t
inSubset	/usr/include/libxml2/libxml/parser.h	/^    int               inSubset;       \/* Parsing is in int 1\/ext 2 subset *\/$/;"	m	struct:_xmlParserCtxt	access:public
includes	/usr/include/libxml2/libxml/schemasInternals.h	/^    void *includes;     \/* the includes, this is opaque for now *\/$/;"	m	struct:_xmlSchema	access:public
index	/usr/include/libxml2/libxml/xpath.h	/^    int index;$/;"	m	struct:_xmlXPathObject	access:public
index2	/usr/include/libxml2/libxml/xpath.h	/^    int index2;$/;"	m	struct:_xmlXPathObject	access:public
initGenericErrorDefaultFunc	/usr/include/libxml2/libxml/xmlerror.h	/^    initGenericErrorDefaultFunc	(xmlGenericErrorFunc *handler);$/;"	p	signature:(xmlGenericErrorFunc *handler)
initdocbDefaultSAXHandler	/usr/include/libxml2/libxml/SAX.h	/^		initdocbDefaultSAXHandler	(xmlSAXHandlerV1 *hdlr);$/;"	p	signature:(xmlSAXHandlerV1 *hdlr)
inithtmlDefaultSAXHandler	/usr/include/libxml2/libxml/SAX.h	/^		inithtmlDefaultSAXHandler	(xmlSAXHandlerV1 *hdlr);$/;"	p	signature:(xmlSAXHandlerV1 *hdlr)
initialized	/usr/include/libxml2/libxml/parser.h	/^    unsigned int initialized;$/;"	m	struct:_xmlSAXHandler	access:public
initialized	/usr/include/libxml2/libxml/parser.h	/^    unsigned int initialized;$/;"	m	struct:_xmlSAXHandlerV1	access:public
initxmlDefaultSAXHandler	/usr/include/libxml2/libxml/SAX.h	/^		initxmlDefaultSAXHandler	(xmlSAXHandlerV1 *hdlr,$/;"	p	signature:(xmlSAXHandlerV1 *hdlr, int warning)
input	/usr/include/libxml2/libxml/debugXML.h	/^    xmlShellReadlineFunc input;$/;"	m	struct:_xmlShellCtxt	access:public
input	/usr/include/libxml2/libxml/encoding.h	/^    xmlCharEncodingInputFunc   input;$/;"	m	struct:_xmlCharEncodingHandler	access:public
input	/usr/include/libxml2/libxml/parser.h	/^    xmlParserInputPtr  input;         \/* Current input stream *\/$/;"	m	struct:_xmlParserCtxt	access:public
inputMax	/usr/include/libxml2/libxml/parser.h	/^    int                inputMax;      \/* Max number of input streams *\/$/;"	m	struct:_xmlParserCtxt	access:public
inputNr	/usr/include/libxml2/libxml/parser.h	/^    int                inputNr;       \/* Number of current input streams *\/$/;"	m	struct:_xmlParserCtxt	access:public
inputPop	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN xmlParserInputPtr XMLCALL	inputPop		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
inputPush	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN int XMLCALL			inputPush		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlParserInputPtr value)
inputTab	/usr/include/libxml2/libxml/parser.h	/^    xmlParserInputPtr *inputTab;      \/* stack of inputs *\/$/;"	m	struct:_xmlParserCtxt	access:public
input_id	/usr/include/libxml2/libxml/parser.h	/^    int                input_id;      \/* we need to label inputs *\/$/;"	m	struct:_xmlParserCtxt	access:public
instate	/usr/include/libxml2/libxml/parser.h	/^    xmlParserInputState instate;      \/* current type of input *\/$/;"	m	struct:_xmlParserCtxt	access:public
int1	/usr/include/libxml2/libxml/xmlerror.h	/^    int		int1;	\/* extra number information *\/$/;"	m	struct:_xmlError	access:public
int2	/usr/include/libxml2/libxml/xmlerror.h	/^    int		int2;	\/* column number of the error or 0 if N\/A (todo: rename this field when we would break ABI) *\/$/;"	m	struct:_xmlError	access:public
intSubName	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *    intSubName;    \/* name of subset *\/$/;"	m	struct:_xmlParserCtxt	access:public
intSubset	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDtd  *intSubset;	\/* the document internal subset *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlDtd	access:public
internalSubset	/usr/include/libxml2/libxml/SAX.h	/^		internalSubset			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name, const xmlChar *ExternalID, const xmlChar *SystemID)
internalSubset	/usr/include/libxml2/libxml/parser.h	/^    internalSubsetSAXFunc internalSubset;$/;"	m	struct:_xmlSAXHandler	access:public
internalSubset	/usr/include/libxml2/libxml/parser.h	/^    internalSubsetSAXFunc internalSubset;$/;"	m	struct:_xmlSAXHandlerV1	access:public
internalSubsetSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*internalSubsetSAXFunc) (void *ctx,$/;"	t
isStandalone	/usr/include/libxml2/libxml/SAX.h	/^		isStandalone			(void *ctx);$/;"	p	signature:(void *ctx)
isStandalone	/usr/include/libxml2/libxml/parser.h	/^    isStandaloneSAXFunc isStandalone;$/;"	m	struct:_xmlSAXHandler	access:public
isStandalone	/usr/include/libxml2/libxml/parser.h	/^    isStandaloneSAXFunc isStandalone;$/;"	m	struct:_xmlSAXHandlerV1	access:public
isStandaloneSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef int (*isStandaloneSAXFunc) (void *ctx);$/;"	t
isinline	/usr/include/libxml2/libxml/HTMLparser.h	/^    char isinline;      \/* is this a block 0 or inline 1 element *\/$/;"	m	struct:_htmlElemDesc	access:public
isolat1ToUTF8	/usr/include/libxml2/libxml/encoding.h	/^	isolat1ToUTF8			(unsigned char *out,$/;"	p	signature:(unsigned char *out, int *outlen, const unsigned char *in, int *inlen)
keepBlanks	/usr/include/libxml2/libxml/parser.h	/^    int             keepBlanks;       \/* ugly but ... *\/$/;"	m	struct:_xmlParserCtxt	access:public
last	/usr/include/libxml2/libxml/entities.h	/^    struct _xmlNode        *last;	\/* Last child link *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode	access:public
last	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode        *last;	\/* NULL *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode	access:public
last	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode        *last;	\/* NULL *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode	access:public
last	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *last;	\/* NULL *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlNode	access:public
last	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *last;	\/* last child link *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode	access:public
last	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *last;	\/* last child link *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode	access:public
last	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *last;	\/* last child link *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode	access:public
lastError	/usr/include/libxml2/libxml/parser.h	/^    xmlError          lastError;$/;"	m	struct:_xmlParserCtxt	access:public
lastError	/usr/include/libxml2/libxml/xpath.h	/^    xmlError lastError;			\/* the last error *\/$/;"	m	struct:_xmlXPathContext	access:public
length	/usr/include/libxml2/libxml/entities.h	/^    int                   length;	\/* the content length *\/$/;"	m	struct:_xmlEntity	access:public
length	/usr/include/libxml2/libxml/parser.h	/^    int length;                       \/* length if known *\/$/;"	m	struct:_xmlParserInput	access:public
length	/usr/include/libxml2/libxml/parser.h	/^  unsigned long length;$/;"	m	struct:_xmlParserNodeInfoSeq	access:public
level	/usr/include/libxml2/libxml/xmlerror.h	/^    xmlErrorLevel level;\/* how consequent is the error *\/$/;"	m	struct:_xmlError	access:public
line	/usr/include/libxml2/libxml/parser.h	/^    int line;                         \/* Current line *\/$/;"	m	struct:_xmlParserInput	access:public
line	/usr/include/libxml2/libxml/tree.h	/^    unsigned short   line;	\/* line number *\/$/;"	m	struct:_xmlNode	access:public
line	/usr/include/libxml2/libxml/xmlerror.h	/^    int		line;	\/* the line number if available *\/$/;"	m	struct:_xmlError	access:public
lineno	/usr/include/libxml2/libxml/tree.h	/^    int               lineno;	\/* The line number if attr is not available *\/$/;"	m	struct:_xmlID	access:public
lineno	/usr/include/libxml2/libxml/tree.h	/^    int               lineno;	\/* The line number if attr is not available *\/$/;"	m	struct:_xmlRef	access:public
linenumbers	/usr/include/libxml2/libxml/parser.h	/^    int                linenumbers;   \/* set line number in element content *\/$/;"	m	struct:_xmlParserCtxt	access:public
loaded	/usr/include/libxml2/libxml/debugXML.h	/^    int loaded;$/;"	m	struct:_xmlShellCtxt	access:public
loadsubset	/usr/include/libxml2/libxml/parser.h	/^    int                loadsubset;    \/* should the external subset be loaded *\/$/;"	m	struct:_xmlParserCtxt	access:public
locMax	/usr/include/libxml2/libxml/xpointer.h	/^    int locMax;		      \/* size of the array as allocated *\/$/;"	m	struct:_xmlLocationSet	access:public
locNr	/usr/include/libxml2/libxml/xpointer.h	/^    int locNr;		      \/* number of locations in the set *\/$/;"	m	struct:_xmlLocationSet	access:public
locTab	/usr/include/libxml2/libxml/xpointer.h	/^    xmlXPathObjectPtr *locTab;\/* array of locations *\/$/;"	m	struct:_xmlLocationSet	access:public
longRange	/usr/include/libxml2/libxml/chvalid.h	/^    const xmlChLRange	*longRange;$/;"	m	struct:_xmlChRangeGroup	access:public
low	/usr/include/libxml2/libxml/chvalid.h	/^    unsigned int	low;$/;"	m	struct:_xmlChLRange	access:public
low	/usr/include/libxml2/libxml/chvalid.h	/^    unsigned short	low;$/;"	m	struct:_xmlChSRange	access:public
maxOccurs	/usr/include/libxml2/libxml/schemasInternals.h	/^    int maxOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement	access:public
maxOccurs	/usr/include/libxml2/libxml/schemasInternals.h	/^    int maxOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
maxOccurs	/usr/include/libxml2/libxml/schemasInternals.h	/^    int maxOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaWildcard	access:public
max_axis	/usr/include/libxml2/libxml/xpath.h	/^    int max_axis;			\/* max number of axis *\/$/;"	m	struct:_xmlXPathContext	access:public
max_funcs_unused	/usr/include/libxml2/libxml/xpath.h	/^    int max_funcs_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext	access:public
max_types	/usr/include/libxml2/libxml/xpath.h	/^    int max_types;			\/* max number of types *\/$/;"	m	struct:_xmlXPathContext	access:public
max_variables_unused	/usr/include/libxml2/libxml/xpath.h	/^    int max_variables_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext	access:public
maxatts	/usr/include/libxml2/libxml/parser.h	/^    int                maxatts;       \/* the size of the array *\/$/;"	m	struct:_xmlParserCtxt	access:public
maximum	/usr/include/libxml2/libxml/parser.h	/^  unsigned long maximum;$/;"	m	struct:_xmlParserNodeInfoSeq	access:public
memberTypes	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeLinkPtr memberTypes; \/* member-types if a union type. *\/$/;"	m	struct:_xmlSchemaType	access:public
message	/usr/include/libxml2/libxml/xmlerror.h	/^    char       *message;\/* human-readable informative error message *\/$/;"	m	struct:_xmlError	access:public
minOccurs	/usr/include/libxml2/libxml/schemasInternals.h	/^    int minOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement	access:public
minOccurs	/usr/include/libxml2/libxml/schemasInternals.h	/^    int minOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
minOccurs	/usr/include/libxml2/libxml/schemasInternals.h	/^    int minOccurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaWildcard	access:public
myDoc	/usr/include/libxml2/libxml/parser.h	/^    xmlDocPtr           myDoc;        \/* the document being built *\/$/;"	m	struct:_xmlParserCtxt	access:public
name	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char *name;	\/* The entity name *\/$/;"	m	struct:_htmlEntityDesc	access:public
name	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char *name;	\/* The tag name *\/$/;"	m	struct:_htmlElemDesc	access:public
name	/usr/include/libxml2/libxml/encoding.h	/^    char                       *name;$/;"	m	struct:_xmlCharEncodingHandler	access:public
name	/usr/include/libxml2/libxml/entities.h	/^    const xmlChar          *name;	\/* Entity name *\/$/;"	m	struct:_xmlEntity	access:public
name	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar     *name;          \/* Current parsed Node *\/$/;"	m	struct:_xmlParserCtxt	access:public
name	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *name; \/* schema name *\/$/;"	m	struct:_xmlSchema	access:public
name	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *name; \/* the name of the declaration *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
name	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
name	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaElement	access:public
name	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaNotation	access:public
name	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *name;$/;"	m	struct:_xmlSchemaType	access:public
name	/usr/include/libxml2/libxml/tree.h	/^    char           *name;	\/* name\/filename\/URI of the document *\/$/;"	m	struct:_xmlDoc	access:public
name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar               *name;	        \/* Notation name *\/$/;"	m	struct:_xmlNotation	access:public
name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar             *name;	\/* Element name *\/$/;"	m	struct:_xmlElementContent	access:public
name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar            *name;	\/* Enumeration name *\/$/;"	m	struct:_xmlEnumeration	access:public
name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar          *name;	\/* Attribute name *\/$/;"	m	struct:_xmlAttribute	access:public
name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar          *name;	\/* Element name *\/$/;"	m	struct:_xmlElement	access:public
name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar    *name;	\/* The attribute if attr is not available *\/$/;"	m	struct:_xmlID	access:public
name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar    *name;	\/* The attribute if attr is not available *\/$/;"	m	struct:_xmlRef	access:public
name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar   *name;      \/* the name of the node, or the entity *\/$/;"	m	struct:_xmlNode	access:public
name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar   *name;      \/* the name of the property *\/$/;"	m	struct:_xmlAttr	access:public
name	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar *name;	\/* Name of the DTD *\/$/;"	m	struct:_xmlDtd	access:public
name	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar         *name;		\/* the type name *\/$/;"	m	struct:_xmlXPathType	access:public
name	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar       *name;		\/* the variable name *\/$/;"	m	struct:_xmlXPathVariable	access:public
name	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar      *name;		\/* the axis name *\/$/;"	m	struct:_xmlXPathAxis	access:public
name	/usr/include/libxml2/libxml/xpath.h	/^    const xmlChar      *name;		\/* the function name *\/$/;"	m	struct:_xmlXPathFunct	access:public
nameMax	/usr/include/libxml2/libxml/parser.h	/^    int                nameMax;       \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
nameNr	/usr/include/libxml2/libxml/parser.h	/^    int                nameNr;        \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
namePop	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN const xmlChar * XMLCALL	namePop			(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
namePush	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN int XMLCALL			namePush		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const xmlChar *value)
nameTab	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *   *nameTab;       \/* array of nodes *\/$/;"	m	struct:_xmlParserCtxt	access:public
namedType	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *namedType;$/;"	m	struct:_xmlSchemaElement	access:public
namedTypeNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *namedTypeNs;$/;"	m	struct:_xmlSchemaElement	access:public
namespaceDecl	/usr/include/libxml2/libxml/SAX.h	/^		namespaceDecl			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *href, const xmlChar *prefix)
namespaceMap	/usr/include/libxml2/libxml/tree.h	/^    void * namespaceMap;$/;"	m	struct:_xmlDOMWrapCtxt	access:public
namespaces	/usr/include/libxml2/libxml/xpath.h	/^    xmlNsPtr *namespaces;		\/* Array of namespaces *\/$/;"	m	struct:_xmlXPathContext	access:public
nbChars	/usr/include/libxml2/libxml/parser.h	/^    long               nbChars;       \/* number of xmlChar processed *\/$/;"	m	struct:_xmlParserCtxt	access:public
nbLongRange	/usr/include/libxml2/libxml/chvalid.h	/^    int			nbLongRange;$/;"	m	struct:_xmlChRangeGroup	access:public
nbShortRange	/usr/include/libxml2/libxml/chvalid.h	/^    int			nbShortRange;$/;"	m	struct:_xmlChRangeGroup	access:public
nb_axis	/usr/include/libxml2/libxml/xpath.h	/^    int nb_axis;			\/* number of defined axis *\/$/;"	m	struct:_xmlXPathContext	access:public
nb_funcs_unused	/usr/include/libxml2/libxml/xpath.h	/^    int nb_funcs_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext	access:public
nb_types	/usr/include/libxml2/libxml/xpath.h	/^    int nb_types;			\/* number of defined types *\/$/;"	m	struct:_xmlXPathContext	access:public
nb_variables_unused	/usr/include/libxml2/libxml/xpath.h	/^    int nb_variables_unused;		\/* unused (hash table) *\/$/;"	m	struct:_xmlXPathContext	access:public
nbentities	/usr/include/libxml2/libxml/parser.h	/^    unsigned long    nbentities;    \/* number of entities references *\/$/;"	m	struct:_xmlParserCtxt	access:public
negNsSet	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaWildcardNsPtr negNsSet; \/* The negated namespace *\/$/;"	m	struct:_xmlSchemaWildcard	access:public
next	/usr/include/libxml2/libxml/entities.h	/^    struct _xmlNode        *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode	access:public
next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaAnnot *next;$/;"	m	struct:_xmlSchemaAnnot	typeref:struct:_xmlSchemaAnnot::_xmlSchemaAnnot	access:public
next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaAttribute *next; \/* the next attribute (not used?) *\/$/;"	m	struct:_xmlSchemaAttribute	typeref:struct:_xmlSchemaAttribute::_xmlSchemaAttribute	access:public
next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaAttribute *next;\/* the next attribute if in a group ... *\/$/;"	m	struct:_xmlSchemaAttributeGroup	typeref:struct:_xmlSchemaAttributeGroup::_xmlSchemaAttribute	access:public
next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaAttributeLink *next;\/* the next attribute link ... *\/$/;"	m	struct:_xmlSchemaAttributeLink	typeref:struct:_xmlSchemaAttributeLink::_xmlSchemaAttributeLink	access:public
next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaFacet *next;\/* the next type if in a sequence ... *\/$/;"	m	struct:_xmlSchemaFacet	typeref:struct:_xmlSchemaFacet::_xmlSchemaFacet	access:public
next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaFacetLink *next;\/* the next facet link ... *\/$/;"	m	struct:_xmlSchemaFacetLink	typeref:struct:_xmlSchemaFacetLink::_xmlSchemaFacetLink	access:public
next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaType *next; \/* Not used? *\/$/;"	m	struct:_xmlSchemaElement	typeref:struct:_xmlSchemaElement::_xmlSchemaType	access:public
next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaType *next; \/* the next type if in a sequence ... *\/$/;"	m	struct:_xmlSchemaType	typeref:struct:_xmlSchemaType::_xmlSchemaType	access:public
next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaTypeLink *next;\/* the next type link ... *\/$/;"	m	struct:_xmlSchemaTypeLink	typeref:struct:_xmlSchemaTypeLink::_xmlSchemaTypeLink	access:public
next	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaWildcardNs *next;\/* the next constraint link ... *\/$/;"	m	struct:_xmlSchemaWildcardNs	typeref:struct:_xmlSchemaWildcardNs::_xmlSchemaWildcardNs	access:public
next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlAttr *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlAttr	access:public
next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlEnumeration    *next;	\/* next one *\/$/;"	m	struct:_xmlEnumeration	typeref:struct:_xmlEnumeration::_xmlEnumeration	access:public
next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlID    *next;	\/* next ID *\/$/;"	m	struct:_xmlID	typeref:struct:_xmlID::_xmlID	access:public
next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode        *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode	access:public
next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode        *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode	access:public
next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode	access:public
next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode	access:public
next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *next;	\/* next sibling link  *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode	access:public
next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNs  *next;	\/* next Ns link for this node  *\/$/;"	m	struct:_xmlNs	typeref:struct:_xmlNs::_xmlNs	access:public
next	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlRef    *next;	\/* next Ref *\/$/;"	m	struct:_xmlRef	typeref:struct:_xmlRef::_xmlRef	access:public
nexte	/usr/include/libxml2/libxml/entities.h	/^    struct _xmlEntity     *nexte;	\/* unused *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlEntity	access:public
nexth	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlAttribute  *nexth;	\/* next in hash table *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlAttribute	access:public
node	/usr/include/libxml2/libxml/debugXML.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlShellCtxt	access:public
node	/usr/include/libxml2/libxml/parser.h	/^    xmlNodePtr         node;          \/* Current parsed Node *\/$/;"	m	struct:_xmlParserCtxt	access:public
node	/usr/include/libxml2/libxml/parser.h	/^  const struct _xmlNode* node;$/;"	m	struct:_xmlParserNodeInfo	typeref:struct:_xmlParserNodeInfo::_xmlNode	access:public
node	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaAttribute	access:public
node	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
node	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaElement	access:public
node	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaFacet	access:public
node	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaType	access:public
node	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlNodePtr node;$/;"	m	struct:_xmlSchemaWildcard	access:public
node	/usr/include/libxml2/libxml/valid.h	/^    xmlNodePtr         node;          \/* Current parsed Node *\/$/;"	m	struct:_xmlValidCtxt	access:public
node	/usr/include/libxml2/libxml/xmlerror.h	/^    void       *node;   \/* the node in the tree *\/$/;"	m	struct:_xmlError	access:public
node	/usr/include/libxml2/libxml/xpath.h	/^    xmlNodePtr node;			\/* The current node *\/$/;"	m	struct:_xmlXPathContext	access:public
nodeInfo	/usr/include/libxml2/libxml/parser.h	/^    xmlParserNodeInfo *nodeInfo;      \/* Current NodeInfo *\/$/;"	m	struct:_xmlParserCtxt	access:public
nodeInfoMax	/usr/include/libxml2/libxml/parser.h	/^    int                nodeInfoMax;   \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
nodeInfoNr	/usr/include/libxml2/libxml/parser.h	/^    int                nodeInfoNr;    \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
nodeInfoTab	/usr/include/libxml2/libxml/parser.h	/^    xmlParserNodeInfo *nodeInfoTab;   \/* array of nodeInfos *\/$/;"	m	struct:_xmlParserCtxt	access:public
nodeMax	/usr/include/libxml2/libxml/parser.h	/^    int                nodeMax;       \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
nodeMax	/usr/include/libxml2/libxml/valid.h	/^    int                nodeMax;       \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlValidCtxt	access:public
nodeMax	/usr/include/libxml2/libxml/xpath.h	/^    int nodeMax;		\/* size of the array as allocated *\/$/;"	m	struct:_xmlNodeSet	access:public
nodeNr	/usr/include/libxml2/libxml/parser.h	/^    int                nodeNr;        \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
nodeNr	/usr/include/libxml2/libxml/valid.h	/^    int                nodeNr;        \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlValidCtxt	access:public
nodeNr	/usr/include/libxml2/libxml/xpath.h	/^    int nodeNr;			\/* number of nodes in the set *\/$/;"	m	struct:_xmlNodeSet	access:public
nodePop	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN xmlNodePtr XMLCALL		nodePop			(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
nodePush	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN int XMLCALL			nodePush		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlNodePtr value)
nodeTab	/usr/include/libxml2/libxml/parser.h	/^    xmlNodePtr        *nodeTab;       \/* array of nodes *\/$/;"	m	struct:_xmlParserCtxt	access:public
nodeTab	/usr/include/libxml2/libxml/valid.h	/^    xmlNodePtr        *nodeTab;       \/* array of nodes *\/$/;"	m	struct:_xmlValidCtxt	access:public
nodeTab	/usr/include/libxml2/libxml/xpath.h	/^    xmlNodePtr *nodeTab;	\/* array of nodes in no particular order *\/$/;"	m	struct:_xmlNodeSet	access:public
node_seq	/usr/include/libxml2/libxml/parser.h	/^    xmlParserNodeInfoSeq node_seq;    \/* info about each node parsed *\/$/;"	m	struct:_xmlParserCtxt	access:public
nodelen	/usr/include/libxml2/libxml/parser.h	/^    int                nodelen;       \/* Those two fields are there to *\/$/;"	m	struct:_xmlParserCtxt	access:public
nodemem	/usr/include/libxml2/libxml/parser.h	/^    int                nodemem;       \/* Speed up large node parsing *\/$/;"	m	struct:_xmlParserCtxt	access:public
nodesetval	/usr/include/libxml2/libxml/xpath.h	/^    xmlNodeSetPtr nodesetval;$/;"	m	struct:_xmlXPathObject	access:public
notaDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr notaDecl;$/;"	m	struct:_xmlSchema	access:public
notationDecl	/usr/include/libxml2/libxml/SAX.h	/^		notationDecl			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name, const xmlChar *publicId, const xmlChar *systemId)
notationDecl	/usr/include/libxml2/libxml/parser.h	/^    notationDeclSAXFunc notationDecl;$/;"	m	struct:_xmlSAXHandler	access:public
notationDecl	/usr/include/libxml2/libxml/parser.h	/^    notationDeclSAXFunc notationDecl;$/;"	m	struct:_xmlSAXHandlerV1	access:public
notationDeclSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*notationDeclSAXFunc)(void *ctx,$/;"	t
notations	/usr/include/libxml2/libxml/tree.h	/^    void          *notations;   \/* Hash table for notations if any *\/$/;"	m	struct:_xmlDtd	access:public
ns	/usr/include/libxml2/libxml/tree.h	/^    xmlNs           *ns;        \/* pointer to the associated namespace *\/$/;"	m	struct:_xmlAttr	access:public
ns	/usr/include/libxml2/libxml/tree.h	/^    xmlNs           *ns;        \/* pointer to the associated namespace *\/$/;"	m	struct:_xmlNode	access:public
nsDef	/usr/include/libxml2/libxml/tree.h	/^    xmlNs           *nsDef;     \/* namespace definitions on this node *\/$/;"	m	struct:_xmlNode	access:public
nsHash	/usr/include/libxml2/libxml/xpath.h	/^    xmlHashTablePtr nsHash;		\/* The namespaces hash table *\/$/;"	m	struct:_xmlXPathContext	access:public
nsMax	/usr/include/libxml2/libxml/parser.h	/^    int                nsMax;         \/* the size of the arrays *\/$/;"	m	struct:_xmlParserCtxt	access:public
nsNr	/usr/include/libxml2/libxml/parser.h	/^    int                nsNr;          \/* the number of inherited namespaces *\/$/;"	m	struct:_xmlParserCtxt	access:public
nsNr	/usr/include/libxml2/libxml/xpath.h	/^    int nsNr;				\/* number of namespace in scope *\/$/;"	m	struct:_xmlXPathContext	access:public
nsSet	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaWildcardNsPtr nsSet; \/* The list of allowed namespaces *\/$/;"	m	struct:_xmlSchemaWildcard	access:public
nsTab	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *   *nsTab;         \/* the array of prefix\/namespace name *\/$/;"	m	struct:_xmlParserCtxt	access:public
nsWellFormed	/usr/include/libxml2/libxml/parser.h	/^    int                nsWellFormed;  \/* is the document XML Nanespace okay *\/$/;"	m	struct:_xmlParserCtxt	access:public
occurs	/usr/include/libxml2/libxml/schemasInternals.h	/^    int occurs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
ocur	/usr/include/libxml2/libxml/tree.h	/^    xmlElementContentOccur    ocur;	\/* ONCE, OPT, MULT or PLUS *\/$/;"	m	struct:_xmlElementContent	access:public
oldNs	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNs   *oldNs;	\/* Global namespace, the old way *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNs	access:public
oldXMLWDcompatibility	/usr/include/libxml2/libxml/globals.h	/^	int oldXMLWDcompatibility;$/;"	m	struct:_xmlGlobalState	access:public
oldXMLWDcompatibility	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR int oldXMLWDcompatibility;$/;"	v
oldXMLWDcompatibility	/usr/include/libxml2/libxml/globals.h	287;"	d
oldXMLWDcompatibility	/usr/include/libxml2/libxml/globals.h	69;"	d
opaque	/usr/include/libxml2/libxml/uri.h	/^    char *opaque;	\/* opaque part *\/$/;"	m	struct:_xmlURI	access:public
options	/usr/include/libxml2/libxml/parser.h	/^    int                options;       \/* Extra options *\/$/;"	m	struct:_xmlParserCtxt	access:public
orig	/usr/include/libxml2/libxml/entities.h	/^    xmlChar                *orig;	\/* content without ref substitution *\/$/;"	m	struct:_xmlEntity	access:public
origin	/usr/include/libxml2/libxml/xpath.h	/^    xmlNodePtr origin;			\/* for origin() *\/$/;"	m	struct:_xmlXPathContext	access:public
output	/usr/include/libxml2/libxml/debugXML.h	/^    FILE *output;$/;"	m	struct:_xmlShellCtxt	access:public
output	/usr/include/libxml2/libxml/encoding.h	/^    xmlCharEncodingOutputFunc  output;$/;"	m	struct:_xmlCharEncodingHandler	access:public
owner	/usr/include/libxml2/libxml/entities.h	/^    int                    owner;	\/* does the entity own the childrens *\/$/;"	m	struct:_xmlEntity	access:public
parent	/usr/include/libxml2/libxml/entities.h	/^    struct _xmlDtd       *parent;	\/* -> DTD *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlDtd	access:public
parent	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDoc  *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlDoc	access:public
parent	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDtd       *parent;	\/* -> DTD *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlDtd	access:public
parent	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlDtd       *parent;	\/* -> DTD *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlDtd	access:public
parent	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlElementContent *parent;	\/* parent *\/$/;"	m	struct:_xmlElementContent	typeref:struct:_xmlElementContent::_xmlElementContent	access:public
parent	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlNode	access:public
parent	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode	access:public
parent	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *parent;	\/* child->parent link *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode	access:public
parseFlags	/usr/include/libxml2/libxml/tree.h	/^    int             parseFlags;	\/* set of xmlParserOption used to parse the$/;"	m	struct:_xmlDoc	access:public
parseMode	/usr/include/libxml2/libxml/parser.h	/^    xmlParserMode     parseMode;    \/* the parser mode *\/$/;"	m	struct:_xmlParserCtxt	access:public
path	/usr/include/libxml2/libxml/uri.h	/^    char *path;		\/* the path string *\/$/;"	m	struct:_xmlURI	access:public
pctxt	/usr/include/libxml2/libxml/debugXML.h	/^    xmlXPathContextPtr pctxt;$/;"	m	struct:_xmlShellCtxt	access:public
pedantic	/usr/include/libxml2/libxml/parser.h	/^    int                pedantic;      \/* signal pedantic warnings *\/$/;"	m	struct:_xmlParserCtxt	access:public
pentities	/usr/include/libxml2/libxml/tree.h	/^    void          *pentities;   \/* Hash table for param entities if any *\/$/;"	m	struct:_xmlDtd	access:public
port	/usr/include/libxml2/libxml/uri.h	/^    int port;		\/* the port number *\/$/;"	m	struct:_xmlURI	access:public
prefix	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar             *prefix;	\/* Namespace prefix *\/$/;"	m	struct:_xmlElementContent	access:public
prefix	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar        *prefix;	\/* the namespace prefix if any *\/$/;"	m	struct:_xmlAttribute	access:public
prefix	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar        *prefix;	\/* the namespace prefix if any *\/$/;"	m	struct:_xmlElement	access:public
prefix	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar *prefix;	\/* prefix for the namespace *\/$/;"	m	struct:_xmlNs	access:public
preserve	/usr/include/libxml2/libxml/schemasInternals.h	/^    int preserve;        \/* whether to free the document *\/$/;"	m	struct:_xmlSchema	access:public
prev	/usr/include/libxml2/libxml/entities.h	/^    struct _xmlNode        *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlEntity	typeref:struct:_xmlEntity::_xmlNode	access:public
prev	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlAttr *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlAttr	typeref:struct:_xmlAttr::_xmlAttr	access:public
prev	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode        *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlAttribute	typeref:struct:_xmlAttribute::_xmlNode	access:public
prev	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode        *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlElement	typeref:struct:_xmlElement::_xmlNode	access:public
prev	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlDoc	typeref:struct:_xmlDoc::_xmlNode	access:public
prev	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlDtd	typeref:struct:_xmlDtd::_xmlNode	access:public
prev	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlNode *prev;	\/* previous sibling link  *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlNode	access:public
processContents	/usr/include/libxml2/libxml/schemasInternals.h	/^    int processContents;$/;"	m	struct:_xmlSchemaWildcard	access:public
processingInstruction	/usr/include/libxml2/libxml/SAX.h	/^		processingInstruction		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *target, const xmlChar *data)
processingInstruction	/usr/include/libxml2/libxml/parser.h	/^    processingInstructionSAXFunc processingInstruction;$/;"	m	struct:_xmlSAXHandler	access:public
processingInstruction	/usr/include/libxml2/libxml/parser.h	/^    processingInstructionSAXFunc processingInstruction;$/;"	m	struct:_xmlSAXHandlerV1	access:public
processingInstructionSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*processingInstructionSAXFunc) (void *ctx,$/;"	t
progressive	/usr/include/libxml2/libxml/parser.h	/^    int                progressive;   \/* is this a progressive parsing *\/$/;"	m	struct:_xmlParserCtxt	access:public
properties	/usr/include/libxml2/libxml/tree.h	/^    int             properties;	\/* set of xmlDocProperties for this document$/;"	m	struct:_xmlDoc	access:public
properties	/usr/include/libxml2/libxml/tree.h	/^    struct _xmlAttr *properties;\/* properties list *\/$/;"	m	struct:_xmlNode	typeref:struct:_xmlNode::_xmlAttr	access:public
proximityPosition	/usr/include/libxml2/libxml/xpath.h	/^    int proximityPosition;		\/* the proximity position *\/$/;"	m	struct:_xmlXPathContext	access:public
psvi	/usr/include/libxml2/libxml/tree.h	/^    void            *psvi;	\/* for type\/PSVI informations *\/$/;"	m	struct:_xmlAttr	access:public
psvi	/usr/include/libxml2/libxml/tree.h	/^    void            *psvi;	\/* for type\/PSVI informations *\/$/;"	m	struct:_xmlNode	access:public
psvi	/usr/include/libxml2/libxml/tree.h	/^    void           *psvi;	\/* for type\/PSVI informations *\/$/;"	m	struct:_xmlDoc	access:public
pushTab	/usr/include/libxml2/libxml/parser.h	/^    void *            *pushTab;       \/* array of data for push *\/$/;"	m	struct:_xmlParserCtxt	access:public
query	/usr/include/libxml2/libxml/uri.h	/^    char *query;	\/* the query string (deprecated - use with caution) *\/$/;"	m	struct:_xmlURI	access:public
query_raw	/usr/include/libxml2/libxml/uri.h	/^    char *query_raw;	\/* the query string (as it appears in the URI) *\/$/;"	m	struct:_xmlURI	access:public
raw	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlBufferPtr raw;       \/* if encoder != NULL buffer for raw input *\/$/;"	m	struct:_xmlParserInputBuffer	access:public
rawconsumed	/usr/include/libxml2/libxml/xmlIO.h	/^    unsigned long rawconsumed;\/* amount consumed from raw *\/$/;"	m	struct:_xmlParserInputBuffer	access:public
readcallback	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlInputReadCallback   readcallback;$/;"	m	struct:_xmlParserInputBuffer	access:public
record_info	/usr/include/libxml2/libxml/parser.h	/^    int record_info;                  \/* Whether node info should be kept *\/$/;"	m	struct:_xmlParserCtxt	access:public
recovery	/usr/include/libxml2/libxml/parser.h	/^    int                recovery;      \/* run in recovery mode *\/$/;"	m	struct:_xmlParserCtxt	access:public
recurse	/usr/include/libxml2/libxml/schemasInternals.h	/^    int recurse; \/* Obsolete *\/$/;"	m	struct:_xmlSchemaType	access:public
redef	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaType *redef; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	typeref:struct:_xmlSchemaType::_xmlSchemaType	access:public
ref	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *ref; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
ref	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *ref; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
ref	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *ref; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement	access:public
ref	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *ref; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
refDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    struct _xmlSchemaElement *refDecl; \/* This will now be used for the$/;"	m	struct:_xmlSchemaElement	typeref:struct:_xmlSchemaElement::_xmlSchemaElement	access:public
refDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAttributePtr refDecl; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
refItem	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaAttributeGroupPtr refItem; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
refNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refNs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
refNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refNs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
refNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refNs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement	access:public
refNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refNs; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
refPrefix	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refPrefix; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
refPrefix	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refPrefix; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
refPrefix	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refPrefix; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaElement	access:public
refPrefix	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *refPrefix; \/* Deprecated; not used *\/$/;"	m	struct:_xmlSchemaType	access:public
reference	/usr/include/libxml2/libxml/SAX.h	/^		reference			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name)
reference	/usr/include/libxml2/libxml/parser.h	/^    referenceSAXFunc reference;$/;"	m	struct:_xmlSAXHandler	access:public
reference	/usr/include/libxml2/libxml/parser.h	/^    referenceSAXFunc reference;$/;"	m	struct:_xmlSAXHandlerV1	access:public
referenceSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*referenceSAXFunc) (void *ctx,$/;"	t
refs	/usr/include/libxml2/libxml/tree.h	/^    void           *refs;       \/* Hash table for IDREFs attributes if any *\/$/;"	m	struct:_xmlDoc	access:public
regexp	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlRegexpPtr    regexp; \/* The regex for patterns *\/$/;"	m	struct:_xmlSchemaFacet	access:public
replaceEntities	/usr/include/libxml2/libxml/parser.h	/^    int       replaceEntities;        \/* shall we replace entities ? *\/$/;"	m	struct:_xmlParserCtxt	access:public
resolveEntity	/usr/include/libxml2/libxml/SAX.h	/^		resolveEntity			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *publicId, const xmlChar *systemId)
resolveEntity	/usr/include/libxml2/libxml/parser.h	/^    resolveEntitySAXFunc resolveEntity;$/;"	m	struct:_xmlSAXHandler	access:public
resolveEntity	/usr/include/libxml2/libxml/parser.h	/^    resolveEntitySAXFunc resolveEntity;$/;"	m	struct:_xmlSAXHandlerV1	access:public
resolveEntitySAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef xmlParserInputPtr (*resolveEntitySAXFunc) (void *ctx,$/;"	t
saveEndTag	/usr/include/libxml2/libxml/HTMLparser.h	/^    char saveEndTag;    \/* Whether the end tag should be saved *\/$/;"	m	struct:_htmlElemDesc	access:public
sax	/usr/include/libxml2/libxml/parser.h	/^    struct _xmlSAXHandler *sax;       \/* The SAX handler *\/$/;"	m	struct:_xmlParserCtxt	typeref:struct:_xmlParserCtxt::_xmlSAXHandler	access:public
sax2	/usr/include/libxml2/libxml/parser.h	/^    int                sax2;          \/* operating in the new SAX mode *\/$/;"	m	struct:_xmlParserCtxt	access:public
schemasImports	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr schemasImports;$/;"	m	struct:_xmlSchema	access:public
scheme	/usr/include/libxml2/libxml/uri.h	/^    char *scheme;	\/* the URI scheme *\/$/;"	m	struct:_xmlURI	access:public
scope	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *scope;$/;"	m	struct:_xmlSchemaElement	access:public
serror	/usr/include/libxml2/libxml/parser.h	/^    xmlStructuredErrorFunc serror;$/;"	m	struct:_xmlSAXHandler	access:public
server	/usr/include/libxml2/libxml/uri.h	/^    char *server;	\/* the server part *\/$/;"	m	struct:_xmlURI	access:public
set	/usr/include/libxml2/libxml/xlink.h	/^    xlinkExtendedLinkSetFunk set;$/;"	m	struct:_xlinkHandler	access:public
setDocumentLocator	/usr/include/libxml2/libxml/SAX.h	/^		setDocumentLocator		(void *ctx,$/;"	p	signature:(void *ctx, xmlSAXLocatorPtr loc)
setDocumentLocator	/usr/include/libxml2/libxml/parser.h	/^    setDocumentLocatorSAXFunc setDocumentLocator;$/;"	m	struct:_xmlSAXHandler	access:public
setDocumentLocator	/usr/include/libxml2/libxml/parser.h	/^    setDocumentLocatorSAXFunc setDocumentLocator;$/;"	m	struct:_xmlSAXHandlerV1	access:public
setDocumentLocatorSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*setDocumentLocatorSAXFunc) (void *ctx,$/;"	t
setNamespace	/usr/include/libxml2/libxml/SAX.h	/^		setNamespace			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name)
shortRange	/usr/include/libxml2/libxml/chvalid.h	/^    const xmlChSRange	*shortRange;	\/* points to an array of ranges *\/$/;"	m	struct:_xmlChRangeGroup	access:public
simple	/usr/include/libxml2/libxml/xlink.h	/^    xlinkSimpleLinkFunk simple;$/;"	m	struct:_xlinkHandler	access:public
size	/usr/include/libxml2/libxml/tree.h	/^    unsigned int size;		\/* The buffer size *\/$/;"	m	struct:_xmlBuffer	access:public
sizeentities	/usr/include/libxml2/libxml/parser.h	/^    unsigned long  sizeentities;    \/* size of parsed entities *\/$/;"	m	struct:_xmlParserCtxt	access:public
space	/usr/include/libxml2/libxml/parser.h	/^    int *              space;         \/* Should the parser preserve spaces *\/$/;"	m	struct:_xmlParserCtxt	access:public
spaceMax	/usr/include/libxml2/libxml/parser.h	/^    int                spaceMax;      \/* Max depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
spaceNr	/usr/include/libxml2/libxml/parser.h	/^    int                spaceNr;       \/* Depth of the parsing stack *\/$/;"	m	struct:_xmlParserCtxt	access:public
spaceTab	/usr/include/libxml2/libxml/parser.h	/^    int *              spaceTab;      \/* array of space infos *\/$/;"	m	struct:_xmlParserCtxt	access:public
standalone	/usr/include/libxml2/libxml/parser.h	/^    int            standalone;        \/* standalone document *\/$/;"	m	struct:_xmlParserCtxt	access:public
standalone	/usr/include/libxml2/libxml/parser.h	/^    int standalone;                   \/* Was that entity marked standalone *\/$/;"	m	struct:_xmlParserInput	access:public
standalone	/usr/include/libxml2/libxml/tree.h	/^    int             standalone; \/* standalone document (no external refs) $/;"	m	struct:_xmlDoc	access:public
startDocument	/usr/include/libxml2/libxml/SAX.h	/^		startDocument			(void *ctx);$/;"	p	signature:(void *ctx)
startDocument	/usr/include/libxml2/libxml/parser.h	/^    startDocumentSAXFunc startDocument;$/;"	m	struct:_xmlSAXHandler	access:public
startDocument	/usr/include/libxml2/libxml/parser.h	/^    startDocumentSAXFunc startDocument;$/;"	m	struct:_xmlSAXHandlerV1	access:public
startDocumentSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*startDocumentSAXFunc) (void *ctx);$/;"	t
startElement	/usr/include/libxml2/libxml/SAX.h	/^		startElement			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *fullname, const xmlChar **atts)
startElement	/usr/include/libxml2/libxml/parser.h	/^    startElementSAXFunc startElement;$/;"	m	struct:_xmlSAXHandler	access:public
startElement	/usr/include/libxml2/libxml/parser.h	/^    startElementSAXFunc startElement;$/;"	m	struct:_xmlSAXHandlerV1	access:public
startElementNs	/usr/include/libxml2/libxml/parser.h	/^    startElementNsSAX2Func startElementNs;$/;"	m	struct:_xmlSAXHandler	access:public
startElementNsSAX2Func	/usr/include/libxml2/libxml/parser.h	/^typedef void (*startElementNsSAX2Func) (void *ctx,$/;"	t
startElementSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*startElementSAXFunc) (void *ctx,$/;"	t
startTag	/usr/include/libxml2/libxml/HTMLparser.h	/^    char startTag;      \/* Whether the start tag can be implied *\/$/;"	m	struct:_htmlElemDesc	access:public
state	/usr/include/libxml2/libxml/valid.h	/^    void                  *state;$/;"	m	struct:_xmlValidCtxt	access:public
state	/usr/include/libxml2/libxml/valid.h	/^    xmlAutomataStatePtr    state;     \/* used to build the automata *\/$/;"	m	struct:_xmlValidCtxt	access:public
str1	/usr/include/libxml2/libxml/xmlerror.h	/^    char       *str1;	\/* extra string information *\/$/;"	m	struct:_xmlError	access:public
str2	/usr/include/libxml2/libxml/xmlerror.h	/^    char       *str2;	\/* extra string information *\/$/;"	m	struct:_xmlError	access:public
str3	/usr/include/libxml2/libxml/xmlerror.h	/^    char       *str3;	\/* extra string information *\/$/;"	m	struct:_xmlError	access:public
str_xml	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *str_xml;$/;"	m	struct:_xmlParserCtxt	access:public
str_xml_ns	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *str_xml_ns;$/;"	m	struct:_xmlParserCtxt	access:public
str_xmlns	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *str_xmlns;$/;"	m	struct:_xmlParserCtxt	access:public
stringval	/usr/include/libxml2/libxml/xpath.h	/^    xmlChar *stringval;$/;"	m	struct:_xmlXPathObject	access:public
subelts	/usr/include/libxml2/libxml/HTMLparser.h	/^    const char** subelts;		\/* allowed sub-elements of this element *\/$/;"	m	struct:_htmlElemDesc	access:public
substGroup	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *substGroup;$/;"	m	struct:_xmlSchemaElement	access:public
substGroupNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *substGroupNs;$/;"	m	struct:_xmlSchemaElement	access:public
subtypes	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypePtr subtypes; \/* the type definition *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
subtypes	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypePtr subtypes; \/* the type definition *\/$/;"	m	struct:_xmlSchemaElement	access:public
subtypes	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypePtr subtypes;$/;"	m	struct:_xmlSchemaType	access:public
targetNamespace	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace; \/* the target namespace *\/$/;"	m	struct:_xmlSchema	access:public
targetNamespace	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaAttribute	access:public
targetNamespace	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
targetNamespace	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaElement	access:public
targetNamespace	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaNotation	access:public
targetNamespace	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *targetNamespace;$/;"	m	struct:_xmlSchemaType	access:public
tmpNsList	/usr/include/libxml2/libxml/xpath.h	/^    xmlNsPtr *tmpNsList;		\/* Array of namespaces *\/$/;"	m	struct:_xmlXPathContext	access:public
tmpNsNr	/usr/include/libxml2/libxml/xpath.h	/^    int tmpNsNr;			\/* number of namespaces in scope *\/$/;"	m	struct:_xmlXPathContext	access:public
token	/usr/include/libxml2/libxml/parser.h	/^    int                 token;        \/* next char look-ahead *\/    $/;"	m	struct:_xmlParserCtxt	access:public
tree	/usr/include/libxml2/libxml/tree.h	/^    xmlEnumerationPtr       tree;       \/* or the enumeration tree if any *\/$/;"	m	struct:_xmlAttribute	access:public
type	/usr/include/libxml2/libxml/entities.h	/^    xmlElementType          type;       \/* XML_ENTITY_DECL, must be second ! *\/$/;"	m	struct:_xmlEntity	access:public
type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypePtr type;\/* the linked type *\/$/;"	m	struct:_xmlSchemaTypeLink	access:public
type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaAttributeGroup	access:public
type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaFacet	access:public
type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeType type;        \/* The kind of type *\/$/;"	m	struct:_xmlSchemaWildcard	access:public
type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeType type; \/* The kind of type *\/$/;"	m	struct:_xmlSchemaElement	access:public
type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeType type; \/* The kind of type *\/$/;"	m	struct:_xmlSchemaNotation	access:public
type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeType type; \/* The kind of type *\/$/;"	m	struct:_xmlSchemaType	access:public
type	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaTypeType type;$/;"	m	struct:_xmlSchemaAttribute	access:public
type	/usr/include/libxml2/libxml/tree.h	/^    int type;$/;"	m	struct:_xmlDOMWrapCtxt	access:public
type	/usr/include/libxml2/libxml/tree.h	/^    xmlElementContentType     type;	\/* PCDATA, ELEMENT, SEQ or OR *\/$/;"	m	struct:_xmlElementContent	access:public
type	/usr/include/libxml2/libxml/tree.h	/^    xmlElementType          type;       \/* XML_ATTRIBUTE_DECL, must be second ! *\/$/;"	m	struct:_xmlAttribute	access:public
type	/usr/include/libxml2/libxml/tree.h	/^    xmlElementType          type;       \/* XML_ELEMENT_DECL, must be second ! *\/$/;"	m	struct:_xmlElement	access:public
type	/usr/include/libxml2/libxml/tree.h	/^    xmlElementType   type;	\/* type number, must be second ! *\/$/;"	m	struct:_xmlNode	access:public
type	/usr/include/libxml2/libxml/tree.h	/^    xmlElementType   type;      \/* XML_ATTRIBUTE_NODE, must be second ! *\/$/;"	m	struct:_xmlAttr	access:public
type	/usr/include/libxml2/libxml/tree.h	/^    xmlElementType  type;       \/* XML_DOCUMENT_NODE, must be second ! *\/$/;"	m	struct:_xmlDoc	access:public
type	/usr/include/libxml2/libxml/tree.h	/^    xmlElementType  type;       \/* XML_DTD_NODE, must be second ! *\/$/;"	m	struct:_xmlDtd	access:public
type	/usr/include/libxml2/libxml/tree.h	/^    xmlNsType      type;	\/* global or local *\/$/;"	m	struct:_xmlNs	access:public
type	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathObjectType type;$/;"	m	struct:_xmlXPathObject	access:public
typeDecl	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlHashTablePtr typeDecl;$/;"	m	struct:_xmlSchema	access:public
typeName	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *typeName; \/* the local name of the type definition *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
typeNs	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *typeNs; \/* the ns URI of the type definition *\/$/;"	m	struct:_xmlSchemaAttribute	access:public
types	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathTypePtr types;		\/* Array of defined types *\/$/;"	m	struct:_xmlXPathContext	access:public
uconv	/usr/include/libxml2/libxml/encoding.h	/^  UConverter *uconv; \/* for conversion between an encoding and UTF-16 *\/$/;"	m	struct:_uconv_t	access:public
uconv_in	/usr/include/libxml2/libxml/encoding.h	/^    uconv_t                    *uconv_in;$/;"	m	struct:_xmlCharEncodingHandler	access:public
uconv_out	/usr/include/libxml2/libxml/encoding.h	/^    uconv_t                    *uconv_out;$/;"	m	struct:_xmlCharEncodingHandler	access:public
uconv_t	/usr/include/libxml2/libxml/encoding.h	/^typedef struct _uconv_t uconv_t;$/;"	t	typeref:struct:_uconv_t
unparsedEntityDecl	/usr/include/libxml2/libxml/SAX.h	/^		unparsedEntityDecl		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name, const xmlChar *publicId, const xmlChar *systemId, const xmlChar *notationName)
unparsedEntityDecl	/usr/include/libxml2/libxml/parser.h	/^    unparsedEntityDeclSAXFunc unparsedEntityDecl;$/;"	m	struct:_xmlSAXHandler	access:public
unparsedEntityDecl	/usr/include/libxml2/libxml/parser.h	/^    unparsedEntityDeclSAXFunc unparsedEntityDecl;$/;"	m	struct:_xmlSAXHandlerV1	access:public
unparsedEntityDeclSAXFunc	/usr/include/libxml2/libxml/parser.h	/^typedef void (*unparsedEntityDeclSAXFunc)(void *ctx,$/;"	t
use	/usr/include/libxml2/libxml/tree.h	/^    unsigned int use;		\/* The buffer size used *\/$/;"	m	struct:_xmlBuffer	access:public
user	/usr/include/libxml2/libxml/uri.h	/^    char *user;		\/* the user part *\/$/;"	m	struct:_xmlURI	access:public
user	/usr/include/libxml2/libxml/xpath.h	/^    void *user;				\/* function to free *\/$/;"	m	struct:_xmlXPathContext	access:public
user	/usr/include/libxml2/libxml/xpath.h	/^    void *user;$/;"	m	struct:_xmlXPathObject	access:public
user2	/usr/include/libxml2/libxml/xpath.h	/^    void *user2;$/;"	m	struct:_xmlXPathObject	access:public
userData	/usr/include/libxml2/libxml/parser.h	/^    void            *userData;        \/* For SAX interface only, used by DOM build *\/$/;"	m	struct:_xmlParserCtxt	access:public
userData	/usr/include/libxml2/libxml/valid.h	/^    void *userData;			\/* user specific data block *\/$/;"	m	struct:_xmlValidCtxt	access:public
userData	/usr/include/libxml2/libxml/xpath.h	/^    void *userData;                     \/* user specific data block *\/$/;"	m	struct:_xmlXPathContext	access:public
utf8	/usr/include/libxml2/libxml/encoding.h	/^  UConverter *utf8; \/* for conversion between UTF-8 and UTF-16 *\/$/;"	m	struct:_uconv_t	access:public
val	/usr/include/libxml2/libxml/schemasInternals.h	/^    xmlSchemaValPtr val; \/* The compiled value *\/$/;"	m	struct:_xmlSchemaFacet	access:public
valid	/usr/include/libxml2/libxml/parser.h	/^    int                 valid;        \/* is the document valid *\/$/;"	m	struct:_xmlParserCtxt	access:public
valid	/usr/include/libxml2/libxml/valid.h	/^    int                  valid;       \/* temporary validity check result *\/$/;"	m	struct:_xmlValidCtxt	access:public
validate	/usr/include/libxml2/libxml/parser.h	/^    int              validate;        \/* shall we try to validate ? *\/$/;"	m	struct:_xmlParserCtxt	access:public
value	/usr/include/libxml2/libxml/HTMLparser.h	/^    unsigned int value;	\/* the UNICODE value for the character *\/$/;"	m	struct:_htmlEntityDesc	access:public
value	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *value; \/* The original value *\/$/;"	m	struct:_xmlSchemaFacet	access:public
value	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *value; \/* The original value of the value constraint. *\/$/;"	m	struct:_xmlSchemaElement	access:public
value	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *value;\/* the value *\/$/;"	m	struct:_xmlSchemaWildcardNs	access:public
value	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar     *value;	\/* The Ref name *\/$/;"	m	struct:_xmlRef	access:public
value	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar    *value;	\/* The ID name *\/$/;"	m	struct:_xmlID	access:public
value	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathObjectPtr     value;	\/* the current value *\/$/;"	m	struct:_xmlXPathParserContext	access:public
value	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathObjectPtr value;		\/* the value *\/$/;"	m	struct:_xmlXPathVariable	access:public
valueFrame	/usr/include/libxml2/libxml/xpath.h	/^    int              valueFrame;        \/* used to limit Pop on the stack *\/$/;"	m	struct:_xmlXPathParserContext	access:public
valueMax	/usr/include/libxml2/libxml/xpath.h	/^    int                valueMax;	\/* max number of values stacked *\/$/;"	m	struct:_xmlXPathParserContext	access:public
valueNr	/usr/include/libxml2/libxml/xpath.h	/^    int                 valueNr;	\/* number of values stacked *\/$/;"	m	struct:_xmlXPathParserContext	access:public
valuePop	/usr/include/libxml2/libxml/xpathInternals.h	/^		valuePop			(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
valuePush	/usr/include/libxml2/libxml/xpathInternals.h	/^		valuePush			(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, xmlXPathObjectPtr value)
valueTab	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathObjectPtr *valueTab;	\/* stack of values *\/$/;"	m	struct:_xmlXPathParserContext	access:public
varHash	/usr/include/libxml2/libxml/xpath.h	/^    xmlHashTablePtr varHash;		\/* Hash table of defined variables *\/$/;"	m	struct:_xmlXPathContext	access:public
varLookupData	/usr/include/libxml2/libxml/xpath.h	/^    void *varLookupData;		\/* variable lookup data *\/$/;"	m	struct:_xmlXPathContext	access:public
varLookupFunc	/usr/include/libxml2/libxml/xpath.h	/^    xmlXPathVariableLookupFunc varLookupFunc;\/* variable lookup func *\/$/;"	m	struct:_xmlXPathContext	access:public
vctxt	/usr/include/libxml2/libxml/parser.h	/^    xmlValidCtxt        vctxt;        \/* The validity context *\/$/;"	m	struct:_xmlParserCtxt	access:public
version	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar    *version;        \/* the XML version string *\/$/;"	m	struct:_xmlParserCtxt	access:public
version	/usr/include/libxml2/libxml/parser.h	/^    const xmlChar *version;           \/* the version string for entity *\/$/;"	m	struct:_xmlParserInput	access:public
version	/usr/include/libxml2/libxml/schemasInternals.h	/^    const xmlChar *version;$/;"	m	struct:_xmlSchema	access:public
version	/usr/include/libxml2/libxml/tree.h	/^    const xmlChar  *version;	\/* the XML version string *\/$/;"	m	struct:_xmlDoc	access:public
volatiles	/usr/include/libxml2/libxml/schemasInternals.h	/^    void *volatiles; \/* Obsolete *\/$/;"	m	struct:_xmlSchema	access:public
vstate	/usr/include/libxml2/libxml/valid.h	/^    xmlValidState     *vstate;        \/* current state *\/$/;"	m	struct:_xmlValidCtxt	access:public
vstateMax	/usr/include/libxml2/libxml/valid.h	/^    int                vstateMax;     \/* Max depth of the validation stack *\/$/;"	m	struct:_xmlValidCtxt	access:public
vstateNr	/usr/include/libxml2/libxml/valid.h	/^    int                vstateNr;      \/* Depth of the validation stack *\/$/;"	m	struct:_xmlValidCtxt	access:public
vstateTab	/usr/include/libxml2/libxml/valid.h	/^    xmlValidState     *vstateTab;     \/* array of validation states *\/$/;"	m	struct:_xmlValidCtxt	access:public
warning	/usr/include/libxml2/libxml/parser.h	/^    warningSAXFunc warning;$/;"	m	struct:_xmlSAXHandler	access:public
warning	/usr/include/libxml2/libxml/parser.h	/^    warningSAXFunc warning;$/;"	m	struct:_xmlSAXHandlerV1	access:public
warning	/usr/include/libxml2/libxml/valid.h	/^    xmlValidityWarningFunc warning;	\/* the callback in case of warning *\/$/;"	m	struct:_xmlValidCtxt	access:public
wellFormed	/usr/include/libxml2/libxml/parser.h	/^    int            wellFormed;        \/* is the document well formed *\/$/;"	m	struct:_xmlParserCtxt	access:public
whitespace	/usr/include/libxml2/libxml/schemasInternals.h	/^    int whitespace;$/;"	m	struct:_xmlSchemaFacet	access:public
writecallback	/usr/include/libxml2/libxml/xmlIO.h	/^    xmlOutputWriteCallback  writecallback;$/;"	m	struct:_xmlOutputBuffer	access:public
written	/usr/include/libxml2/libxml/xmlIO.h	/^    int written;            \/* total number of byte written *\/$/;"	m	struct:_xmlOutputBuffer	access:public
xlinkActuate	/usr/include/libxml2/libxml/xlink.h	/^} xlinkActuate;$/;"	t	typeref:enum:__anon33
xlinkExtendedLinkFunk	/usr/include/libxml2/libxml/xlink.h	/^(*xlinkExtendedLinkFunk)(void *ctx,$/;"	t
xlinkExtendedLinkSetFunk	/usr/include/libxml2/libxml/xlink.h	/^(*xlinkExtendedLinkSetFunk)	(void *ctx,$/;"	t
xlinkGetDefaultDetect	/usr/include/libxml2/libxml/xlink.h	/^		xlinkGetDefaultDetect	(void);$/;"	p	signature:(void)
xlinkGetDefaultHandler	/usr/include/libxml2/libxml/xlink.h	/^		xlinkGetDefaultHandler	(void);$/;"	p	signature:(void)
xlinkHRef	/usr/include/libxml2/libxml/xlink.h	/^typedef xmlChar *xlinkHRef;$/;"	t
xlinkHandler	/usr/include/libxml2/libxml/xlink.h	/^typedef struct _xlinkHandler xlinkHandler;$/;"	t	typeref:struct:_xlinkHandler
xlinkHandlerPtr	/usr/include/libxml2/libxml/xlink.h	/^typedef xlinkHandler *xlinkHandlerPtr;$/;"	t
xlinkIsLink	/usr/include/libxml2/libxml/xlink.h	/^		xlinkIsLink		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodePtr node)
xlinkNodeDetectFunc	/usr/include/libxml2/libxml/xlink.h	/^typedef void (*xlinkNodeDetectFunc) (void *ctx, xmlNodePtr node);$/;"	t
xlinkRole	/usr/include/libxml2/libxml/xlink.h	/^typedef xmlChar *xlinkRole;$/;"	t
xlinkSetDefaultDetect	/usr/include/libxml2/libxml/xlink.h	/^		xlinkSetDefaultDetect	(xlinkNodeDetectFunc func);$/;"	p	signature:(xlinkNodeDetectFunc func)
xlinkSetDefaultHandler	/usr/include/libxml2/libxml/xlink.h	/^		xlinkSetDefaultHandler	(xlinkHandlerPtr handler);$/;"	p	signature:(xlinkHandlerPtr handler)
xlinkShow	/usr/include/libxml2/libxml/xlink.h	/^} xlinkShow;$/;"	t	typeref:enum:__anon32
xlinkSimpleLinkFunk	/usr/include/libxml2/libxml/xlink.h	/^(*xlinkSimpleLinkFunk)	(void *ctx,$/;"	t
xlinkTitle	/usr/include/libxml2/libxml/xlink.h	/^typedef xmlChar *xlinkTitle;$/;"	t
xlinkType	/usr/include/libxml2/libxml/xlink.h	/^} xlinkType;$/;"	t	typeref:enum:__anon31
xmlACatalogAdd	/usr/include/libxml2/libxml/catalog.h	/^		xmlACatalogAdd		(xmlCatalogPtr catal,$/;"	p	signature:(xmlCatalogPtr catal, const xmlChar *type, const xmlChar *orig, const xmlChar *replace)
xmlACatalogDump	/usr/include/libxml2/libxml/catalog.h	/^		xmlACatalogDump		(xmlCatalogPtr catal,$/;"	p	signature:(xmlCatalogPtr catal, FILE *out)
xmlACatalogRemove	/usr/include/libxml2/libxml/catalog.h	/^		xmlACatalogRemove	(xmlCatalogPtr catal,$/;"	p	signature:(xmlCatalogPtr catal, const xmlChar *value)
xmlACatalogResolve	/usr/include/libxml2/libxml/catalog.h	/^		xmlACatalogResolve	(xmlCatalogPtr catal,$/;"	p	signature:(xmlCatalogPtr catal, const xmlChar *pubID, const xmlChar *sysID)
xmlACatalogResolvePublic	/usr/include/libxml2/libxml/catalog.h	/^		xmlACatalogResolvePublic(xmlCatalogPtr catal,$/;"	p	signature:(xmlCatalogPtr catal, const xmlChar *pubID)
xmlACatalogResolveSystem	/usr/include/libxml2/libxml/catalog.h	/^		xmlACatalogResolveSystem(xmlCatalogPtr catal,$/;"	p	signature:(xmlCatalogPtr catal, const xmlChar *sysID)
xmlACatalogResolveURI	/usr/include/libxml2/libxml/catalog.h	/^		xmlACatalogResolveURI	(xmlCatalogPtr catal,$/;"	p	signature:(xmlCatalogPtr catal, const xmlChar *URI)
xmlAddAttributeDecl	/usr/include/libxml2/libxml/valid.h	/^		xmlAddAttributeDecl	(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDtdPtr dtd, const xmlChar *elem, const xmlChar *name, const xmlChar *ns, xmlAttributeType type, xmlAttributeDefault def, const xmlChar *defaultValue, xmlEnumerationPtr tree)
xmlAddChild	/usr/include/libxml2/libxml/tree.h	/^		xmlAddChild		(xmlNodePtr parent,$/;"	p	signature:(xmlNodePtr parent, xmlNodePtr cur)
xmlAddChildList	/usr/include/libxml2/libxml/tree.h	/^		xmlAddChildList		(xmlNodePtr parent,$/;"	p	signature:(xmlNodePtr parent, xmlNodePtr cur)
xmlAddDocEntity	/usr/include/libxml2/libxml/entities.h	/^			xmlAddDocEntity		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *name, int type, const xmlChar *ExternalID, const xmlChar *SystemID, const xmlChar *content)
xmlAddDtdEntity	/usr/include/libxml2/libxml/entities.h	/^			xmlAddDtdEntity		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *name, int type, const xmlChar *ExternalID, const xmlChar *SystemID, const xmlChar *content)
xmlAddElementDecl	/usr/include/libxml2/libxml/valid.h	/^		xmlAddElementDecl	(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDtdPtr dtd, const xmlChar *name, xmlElementTypeVal type, xmlElementContentPtr content)
xmlAddEncodingAlias	/usr/include/libxml2/libxml/encoding.h	/^	xmlAddEncodingAlias		(const char *name,$/;"	p	signature:(const char *name, const char *alias)
xmlAddID	/usr/include/libxml2/libxml/valid.h	/^		xmlAddID	       (xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc, const xmlChar *value, xmlAttrPtr attr)
xmlAddNextSibling	/usr/include/libxml2/libxml/tree.h	/^		xmlAddNextSibling	(xmlNodePtr cur,$/;"	p	signature:(xmlNodePtr cur, xmlNodePtr elem)
xmlAddNotationDecl	/usr/include/libxml2/libxml/valid.h	/^		xmlAddNotationDecl	(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDtdPtr dtd, const xmlChar *name, const xmlChar *PublicID, const xmlChar *SystemID)
xmlAddPrevSibling	/usr/include/libxml2/libxml/tree.h	/^		xmlAddPrevSibling	(xmlNodePtr cur,$/;"	p	signature:(xmlNodePtr cur, xmlNodePtr elem)
xmlAddRef	/usr/include/libxml2/libxml/valid.h	/^		xmlAddRef	       (xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc, const xmlChar *value, xmlAttrPtr attr)
xmlAddSibling	/usr/include/libxml2/libxml/tree.h	/^		xmlAddSibling		(xmlNodePtr cur,$/;"	p	signature:(xmlNodePtr cur, xmlNodePtr elem)
xmlAllocOutputBuffer	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlAllocOutputBuffer		(xmlCharEncodingHandlerPtr encoder);$/;"	p	signature:(xmlCharEncodingHandlerPtr encoder)
xmlAllocParserInputBuffer	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlAllocParserInputBuffer		(xmlCharEncoding enc);$/;"	p	signature:(xmlCharEncoding enc)
xmlAttr	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlAttr xmlAttr;$/;"	t	typeref:struct:_xmlAttr
xmlAttrPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlAttr *xmlAttrPtr;$/;"	t
xmlAttrSerializeTxtContent	/usr/include/libxml2/libxml/tree.h	/^XMLPUBFUN void xmlAttrSerializeTxtContent(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, xmlDocPtr doc, xmlAttrPtr attr, const xmlChar *string)
xmlAttribute	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlAttribute xmlAttribute;$/;"	t	typeref:struct:_xmlAttribute
xmlAttributeDefault	/usr/include/libxml2/libxml/tree.h	/^} xmlAttributeDefault;$/;"	t	typeref:enum:__anon26
xmlAttributePtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlAttribute *xmlAttributePtr;$/;"	t
xmlAttributeTable	/usr/include/libxml2/libxml/valid.h	/^typedef struct _xmlHashTable xmlAttributeTable;$/;"	t	typeref:struct:_xmlHashTable
xmlAttributeTablePtr	/usr/include/libxml2/libxml/valid.h	/^typedef xmlAttributeTable *xmlAttributeTablePtr;$/;"	t
xmlAttributeType	/usr/include/libxml2/libxml/tree.h	/^} xmlAttributeType;$/;"	t	typeref:enum:__anon25
xmlAutomata	/usr/include/libxml2/libxml/xmlautomata.h	/^typedef struct _xmlAutomata xmlAutomata;$/;"	t	typeref:struct:_xmlAutomata
xmlAutomataCompile	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataCompile		(xmlAutomataPtr am);$/;"	p	signature:(xmlAutomataPtr am)
xmlAutomataGetInitState	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataGetInitState	(xmlAutomataPtr am);$/;"	p	signature:(xmlAutomataPtr am)
xmlAutomataIsDeterminist	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataIsDeterminist	(xmlAutomataPtr am);$/;"	p	signature:(xmlAutomataPtr am)
xmlAutomataNewAllTrans	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataNewAllTrans	(xmlAutomataPtr am,$/;"	p	signature:(xmlAutomataPtr am, xmlAutomataStatePtr from, xmlAutomataStatePtr to, int lax)
xmlAutomataNewCountTrans	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataNewCountTrans	(xmlAutomataPtr am,$/;"	p	signature:(xmlAutomataPtr am, xmlAutomataStatePtr from, xmlAutomataStatePtr to, const xmlChar *token, int min, int max, void *data)
xmlAutomataNewCountTrans2	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataNewCountTrans2	(xmlAutomataPtr am,$/;"	p	signature:(xmlAutomataPtr am, xmlAutomataStatePtr from, xmlAutomataStatePtr to, const xmlChar *token, const xmlChar *token2, int min, int max, void *data)
xmlAutomataNewCountedTrans	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataNewCountedTrans	(xmlAutomataPtr am,$/;"	p	signature:(xmlAutomataPtr am, xmlAutomataStatePtr from, xmlAutomataStatePtr to, int counter)
xmlAutomataNewCounter	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataNewCounter	(xmlAutomataPtr am,$/;"	p	signature:(xmlAutomataPtr am, int min, int max)
xmlAutomataNewCounterTrans	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataNewCounterTrans	(xmlAutomataPtr am,$/;"	p	signature:(xmlAutomataPtr am, xmlAutomataStatePtr from, xmlAutomataStatePtr to, int counter)
xmlAutomataNewEpsilon	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataNewEpsilon	(xmlAutomataPtr am,$/;"	p	signature:(xmlAutomataPtr am, xmlAutomataStatePtr from, xmlAutomataStatePtr to)
xmlAutomataNewNegTrans	/usr/include/libxml2/libxml/xmlautomata.h	/^                    xmlAutomataNewNegTrans	(xmlAutomataPtr am,$/;"	p	signature:(xmlAutomataPtr am, xmlAutomataStatePtr from, xmlAutomataStatePtr to, const xmlChar *token, const xmlChar *token2, void *data)
xmlAutomataNewOnceTrans	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataNewOnceTrans	(xmlAutomataPtr am,$/;"	p	signature:(xmlAutomataPtr am, xmlAutomataStatePtr from, xmlAutomataStatePtr to, const xmlChar *token, int min, int max, void *data)
xmlAutomataNewOnceTrans2	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataNewOnceTrans2	(xmlAutomataPtr am, $/;"	p	signature:(xmlAutomataPtr am, xmlAutomataStatePtr from, xmlAutomataStatePtr to, const xmlChar *token, const xmlChar *token2, int min, int max, void *data)
xmlAutomataNewState	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataNewState		(xmlAutomataPtr am);$/;"	p	signature:(xmlAutomataPtr am)
xmlAutomataNewTransition	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataNewTransition	(xmlAutomataPtr am,$/;"	p	signature:(xmlAutomataPtr am, xmlAutomataStatePtr from, xmlAutomataStatePtr to, const xmlChar *token, void *data)
xmlAutomataNewTransition2	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataNewTransition2	(xmlAutomataPtr am,$/;"	p	signature:(xmlAutomataPtr am, xmlAutomataStatePtr from, xmlAutomataStatePtr to, const xmlChar *token, const xmlChar *token2, void *data)
xmlAutomataPtr	/usr/include/libxml2/libxml/xmlautomata.h	/^typedef xmlAutomata *xmlAutomataPtr;$/;"	t
xmlAutomataSetFinalState	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlAutomataSetFinalState	(xmlAutomataPtr am,$/;"	p	signature:(xmlAutomataPtr am, xmlAutomataStatePtr state)
xmlAutomataState	/usr/include/libxml2/libxml/xmlautomata.h	/^typedef struct _xmlAutomataState xmlAutomataState;$/;"	t	typeref:struct:_xmlAutomataState
xmlAutomataStatePtr	/usr/include/libxml2/libxml/xmlautomata.h	/^typedef xmlAutomataState *xmlAutomataStatePtr;$/;"	t
xmlBoolToText	/usr/include/libxml2/libxml/debugXML.h	/^	xmlBoolToText		(int boolval);$/;"	p	signature:(int boolval)
xmlBuffer	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlBuffer xmlBuffer;$/;"	t	typeref:struct:_xmlBuffer
xmlBufferAdd	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferAdd		(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, const xmlChar *str, int len)
xmlBufferAddHead	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferAddHead	(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, const xmlChar *str, int len)
xmlBufferAllocScheme	/usr/include/libxml2/libxml/globals.h	/^	xmlBufferAllocationScheme xmlBufferAllocScheme;$/;"	m	struct:_xmlGlobalState	access:public
xmlBufferAllocScheme	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlBufferAllocationScheme xmlBufferAllocScheme;$/;"	v
xmlBufferAllocScheme	/usr/include/libxml2/libxml/globals.h	295;"	d
xmlBufferAllocScheme	/usr/include/libxml2/libxml/globals.h	70;"	d
xmlBufferAllocationScheme	/usr/include/libxml2/libxml/tree.h	/^} xmlBufferAllocationScheme;$/;"	t	typeref:enum:__anon23
xmlBufferCCat	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferCCat		(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, const char *str)
xmlBufferCat	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferCat		(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, const xmlChar *str)
xmlBufferContent	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferContent	(const xmlBufferPtr buf);$/;"	p	signature:(const xmlBufferPtr buf)
xmlBufferCreate	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferCreate		(void);$/;"	p	signature:(void)
xmlBufferCreateSize	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferCreateSize	(size_t size);$/;"	p	signature:(size_t size)
xmlBufferCreateStatic	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferCreateStatic	(void *mem,$/;"	p	signature:(void *mem, size_t size)
xmlBufferDetach	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferDetach         (const xmlBufferPtr buf);$/;"	p	signature:(const xmlBufferPtr buf)
xmlBufferDump	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferDump		(FILE *file,$/;"	p	signature:(FILE *file, xmlBufferPtr buf)
xmlBufferEmpty	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferEmpty		(xmlBufferPtr buf);$/;"	p	signature:(xmlBufferPtr buf)
xmlBufferFree	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferFree		(xmlBufferPtr buf);$/;"	p	signature:(xmlBufferPtr buf)
xmlBufferGrow	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferGrow		(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, unsigned int len)
xmlBufferLength	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferLength		(const xmlBufferPtr buf);$/;"	p	signature:(const xmlBufferPtr buf)
xmlBufferPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlBuffer *xmlBufferPtr;$/;"	t
xmlBufferResize	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferResize		(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, unsigned int size)
xmlBufferSetAllocationScheme	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferSetAllocationScheme(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, xmlBufferAllocationScheme scheme)
xmlBufferShrink	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferShrink		(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, unsigned int len)
xmlBufferWriteCHAR	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferWriteCHAR	(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, const xmlChar *string)
xmlBufferWriteChar	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferWriteChar	(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, const char *string)
xmlBufferWriteQuotedString	/usr/include/libxml2/libxml/tree.h	/^		xmlBufferWriteQuotedString(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, const xmlChar *string)
xmlBuildQName	/usr/include/libxml2/libxml/tree.h	/^		xmlBuildQName		(const xmlChar *ncname,$/;"	p	signature:(const xmlChar *ncname, const xmlChar *prefix, xmlChar *memory, int len)
xmlBuildRelativeURI	/usr/include/libxml2/libxml/uri.h	/^		xmlBuildRelativeURI	(const xmlChar *URI,$/;"	p	signature:(const xmlChar *URI, const xmlChar *base)
xmlBuildURI	/usr/include/libxml2/libxml/uri.h	/^		xmlBuildURI		(const xmlChar *URI,$/;"	p	signature:(const xmlChar *URI, const xmlChar *base)
xmlByteConsumed	/usr/include/libxml2/libxml/parser.h	/^		xmlByteConsumed		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlC14NDocDumpMemory	/usr/include/libxml2/libxml/c14n.h	/^		xmlC14NDocDumpMemory	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodeSetPtr nodes, int mode, xmlChar **inclusive_ns_prefixes, int with_comments, xmlChar **doc_txt_ptr)
xmlC14NDocSave	/usr/include/libxml2/libxml/c14n.h	/^		xmlC14NDocSave		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodeSetPtr nodes, int mode, xmlChar **inclusive_ns_prefixes, int with_comments, const char* filename, int compression)
xmlC14NDocSaveTo	/usr/include/libxml2/libxml/c14n.h	/^		xmlC14NDocSaveTo	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodeSetPtr nodes, int mode, xmlChar **inclusive_ns_prefixes, int with_comments, xmlOutputBufferPtr buf)
xmlC14NExecute	/usr/include/libxml2/libxml/c14n.h	/^		xmlC14NExecute		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlC14NIsVisibleCallback is_visible_callback, void* user_data, int mode, xmlChar **inclusive_ns_prefixes, int with_comments, xmlOutputBufferPtr buf)
xmlC14NIsVisibleCallback	/usr/include/libxml2/libxml/c14n.h	/^typedef int (*xmlC14NIsVisibleCallback)	(void* user_data,$/;"	t
xmlC14NMode	/usr/include/libxml2/libxml/c14n.h	/^} xmlC14NMode;$/;"	t	typeref:enum:__anon41
xmlCanonicPath	/usr/include/libxml2/libxml/uri.h	/^		xmlCanonicPath		(const xmlChar *path);$/;"	p	signature:(const xmlChar *path)
xmlCatalog	/usr/include/libxml2/libxml/catalog.h	/^typedef struct _xmlCatalog xmlCatalog;$/;"	t	typeref:struct:_xmlCatalog
xmlCatalogAdd	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogAdd		(const xmlChar *type,$/;"	p	signature:(const xmlChar *type, const xmlChar *orig, const xmlChar *replace)
xmlCatalogAddLocal	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogAddLocal	(void *catalogs,$/;"	p	signature:(void *catalogs, const xmlChar *URL)
xmlCatalogAllow	/usr/include/libxml2/libxml/catalog.h	/^} xmlCatalogAllow;$/;"	t	typeref:enum:__anon18
xmlCatalogCleanup	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogCleanup	(void);$/;"	p	signature:(void)
xmlCatalogConvert	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogConvert	(void);$/;"	p	signature:(void)
xmlCatalogDump	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogDump		(FILE *out);$/;"	p	signature:(FILE *out)
xmlCatalogFreeLocal	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogFreeLocal	(void *catalogs);$/;"	p	signature:(void *catalogs)
xmlCatalogGetDefaults	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogGetDefaults	(void);$/;"	p	signature:(void)
xmlCatalogGetPublic	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogGetPublic	(const xmlChar *pubID);$/;"	p	signature:(const xmlChar *pubID)
xmlCatalogGetSystem	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogGetSystem	(const xmlChar *sysID);$/;"	p	signature:(const xmlChar *sysID)
xmlCatalogIsEmpty	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogIsEmpty	(xmlCatalogPtr catal);$/;"	p	signature:(xmlCatalogPtr catal)
xmlCatalogLocalResolve	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogLocalResolve	(void *catalogs,$/;"	p	signature:(void *catalogs, const xmlChar *pubID, const xmlChar *sysID)
xmlCatalogLocalResolveURI	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogLocalResolveURI(void *catalogs,$/;"	p	signature:(void *catalogs, const xmlChar *URI)
xmlCatalogPrefer	/usr/include/libxml2/libxml/catalog.h	/^} xmlCatalogPrefer;$/;"	t	typeref:enum:__anon17
xmlCatalogPtr	/usr/include/libxml2/libxml/catalog.h	/^typedef xmlCatalog *xmlCatalogPtr;$/;"	t
xmlCatalogRemove	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogRemove	(const xmlChar *value);$/;"	p	signature:(const xmlChar *value)
xmlCatalogResolve	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogResolve	(const xmlChar *pubID,$/;"	p	signature:(const xmlChar *pubID, const xmlChar *sysID)
xmlCatalogResolvePublic	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogResolvePublic	(const xmlChar *pubID);$/;"	p	signature:(const xmlChar *pubID)
xmlCatalogResolveSystem	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogResolveSystem	(const xmlChar *sysID);$/;"	p	signature:(const xmlChar *sysID)
xmlCatalogResolveURI	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogResolveURI	(const xmlChar *URI);$/;"	p	signature:(const xmlChar *URI)
xmlCatalogSetDebug	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogSetDebug	(int level);$/;"	p	signature:(int level)
xmlCatalogSetDefaultPrefer	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogSetDefaultPrefer(xmlCatalogPrefer prefer);$/;"	p	signature:(xmlCatalogPrefer prefer)
xmlCatalogSetDefaults	/usr/include/libxml2/libxml/catalog.h	/^		xmlCatalogSetDefaults	(xmlCatalogAllow allow);$/;"	p	signature:(xmlCatalogAllow allow)
xmlChLRange	/usr/include/libxml2/libxml/chvalid.h	/^typedef struct _xmlChLRange xmlChLRange;$/;"	t	typeref:struct:_xmlChLRange
xmlChLRangePtr	/usr/include/libxml2/libxml/chvalid.h	/^typedef xmlChLRange *xmlChLRangePtr;$/;"	t
xmlChRangeGroup	/usr/include/libxml2/libxml/chvalid.h	/^typedef struct _xmlChRangeGroup xmlChRangeGroup;$/;"	t	typeref:struct:_xmlChRangeGroup
xmlChRangeGroupPtr	/usr/include/libxml2/libxml/chvalid.h	/^typedef xmlChRangeGroup *xmlChRangeGroupPtr;$/;"	t
xmlChSRange	/usr/include/libxml2/libxml/chvalid.h	/^typedef struct _xmlChSRange xmlChSRange;$/;"	t	typeref:struct:_xmlChSRange
xmlChSRangePtr	/usr/include/libxml2/libxml/chvalid.h	/^typedef xmlChSRange *xmlChSRangePtr;$/;"	t
xmlChar	/usr/include/libxml2/libxml/xmlstring.h	/^typedef unsigned char xmlChar;$/;"	t
xmlCharEncCloseFunc	/usr/include/libxml2/libxml/encoding.h	/^	xmlCharEncCloseFunc		(xmlCharEncodingHandler *handler);$/;"	p	signature:(xmlCharEncodingHandler *handler)
xmlCharEncFirstLine	/usr/include/libxml2/libxml/encoding.h	/^	xmlCharEncFirstLine		(xmlCharEncodingHandler *handler,$/;"	p	signature:(xmlCharEncodingHandler *handler, xmlBufferPtr out, xmlBufferPtr in)
xmlCharEncInFunc	/usr/include/libxml2/libxml/encoding.h	/^	xmlCharEncInFunc		(xmlCharEncodingHandler *handler,$/;"	p	signature:(xmlCharEncodingHandler *handler, xmlBufferPtr out, xmlBufferPtr in)
xmlCharEncOutFunc	/usr/include/libxml2/libxml/encoding.h	/^	xmlCharEncOutFunc		(xmlCharEncodingHandler *handler,$/;"	p	signature:(xmlCharEncodingHandler *handler, xmlBufferPtr out, xmlBufferPtr in)
xmlCharEncoding	/usr/include/libxml2/libxml/encoding.h	/^} xmlCharEncoding;$/;"	t	typeref:enum:__anon39
xmlCharEncodingHandler	/usr/include/libxml2/libxml/encoding.h	/^typedef struct _xmlCharEncodingHandler xmlCharEncodingHandler;$/;"	t	typeref:struct:_xmlCharEncodingHandler
xmlCharEncodingHandlerPtr	/usr/include/libxml2/libxml/encoding.h	/^typedef xmlCharEncodingHandler *xmlCharEncodingHandlerPtr;$/;"	t
xmlCharEncodingInputFunc	/usr/include/libxml2/libxml/encoding.h	/^typedef int (* xmlCharEncodingInputFunc)(unsigned char *out, int *outlen,$/;"	t
xmlCharEncodingOutputFunc	/usr/include/libxml2/libxml/encoding.h	/^typedef int (* xmlCharEncodingOutputFunc)(unsigned char *out, int *outlen,$/;"	t
xmlCharInRange	/usr/include/libxml2/libxml/chvalid.h	/^		xmlCharInRange(unsigned int val, const xmlChRangeGroup *group);$/;"	p	signature:(unsigned int val, const xmlChRangeGroup *group)
xmlCharStrdup	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlCharStrdup            (const char *cur);$/;"	p	signature:(const char *cur)
xmlCharStrndup	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlCharStrndup           (const char *cur,$/;"	p	signature:(const char *cur, int len)
xmlCheckFilename	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlCheckFilename		(const char *path);$/;"	p	signature:(const char *path)
xmlCheckHTTPInput	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlCheckHTTPInput		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlParserInputPtr ret)
xmlCheckLanguageID	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN int XMLCALL			xmlCheckLanguageID	(const xmlChar *lang);$/;"	p	signature:(const xmlChar *lang)
xmlCheckUTF8	/usr/include/libxml2/libxml/xmlstring.h	/^        xmlCheckUTF8                     (const unsigned char *utf);$/;"	p	signature:(const unsigned char *utf)
xmlCheckVersion	/usr/include/libxml2/libxml/xmlversion.h	/^XMLPUBFUN void XMLCALL xmlCheckVersion(int version);$/;"	p	signature:(int version)
xmlChildElementCount	/usr/include/libxml2/libxml/tree.h	/^            xmlChildElementCount        (xmlNodePtr parent);$/;"	p	signature:(xmlNodePtr parent)
xmlChildrenNode	/usr/include/libxml2/libxml/tree.h	600;"	d
xmlCleanupCharEncodingHandlers	/usr/include/libxml2/libxml/encoding.h	/^	xmlCleanupCharEncodingHandlers	(void);$/;"	p	signature:(void)
xmlCleanupEncodingAliases	/usr/include/libxml2/libxml/encoding.h	/^	xmlCleanupEncodingAliases	(void);$/;"	p	signature:(void)
xmlCleanupGlobals	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN void XMLCALL xmlCleanupGlobals(void);$/;"	p	signature:(void)
xmlCleanupInputCallbacks	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlCleanupInputCallbacks		(void);$/;"	p	signature:(void)
xmlCleanupMemory	/usr/include/libxml2/libxml/xmlmemory.h	/^                xmlCleanupMemory        (void);$/;"	p	signature:(void)
xmlCleanupOutputCallbacks	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlCleanupOutputCallbacks		(void);$/;"	p	signature:(void)
xmlCleanupParser	/usr/include/libxml2/libxml/parser.h	/^		xmlCleanupParser	(void);$/;"	p	signature:(void)
xmlCleanupPredefinedEntities	/usr/include/libxml2/libxml/entities.h	/^			xmlCleanupPredefinedEntities(void);$/;"	p	signature:(void)
xmlCleanupThreads	/usr/include/libxml2/libxml/threads.h	/^			xmlCleanupThreads(void);$/;"	p	signature:(void)
xmlClearNodeInfoSeq	/usr/include/libxml2/libxml/parser.h	/^		xmlClearNodeInfoSeq	(xmlParserNodeInfoSeqPtr seq);$/;"	p	signature:(xmlParserNodeInfoSeqPtr seq)
xmlClearParserCtxt	/usr/include/libxml2/libxml/parser.h	/^		xmlClearParserCtxt	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlConvertSGMLCatalog	/usr/include/libxml2/libxml/catalog.h	/^		xmlConvertSGMLCatalog	(xmlCatalogPtr catal);$/;"	p	signature:(xmlCatalogPtr catal)
xmlCopyAttributeTable	/usr/include/libxml2/libxml/valid.h	/^		xmlCopyAttributeTable  (xmlAttributeTablePtr table);$/;"	p	signature:(xmlAttributeTablePtr table)
xmlCopyChar	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN int XMLCALL			xmlCopyChar		(int len,$/;"	p	signature:(int len, xmlChar *out, int val)
xmlCopyCharMultiByte	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN int XMLCALL		xmlCopyCharMultiByte	(xmlChar *out,$/;"	p	signature:(xmlChar *out, int val)
xmlCopyDoc	/usr/include/libxml2/libxml/tree.h	/^		xmlCopyDoc		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, int recursive)
xmlCopyDocElementContent	/usr/include/libxml2/libxml/valid.h	/^		xmlCopyDocElementContent(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlElementContentPtr content)
xmlCopyDtd	/usr/include/libxml2/libxml/tree.h	/^		xmlCopyDtd		(xmlDtdPtr dtd);$/;"	p	signature:(xmlDtdPtr dtd)
xmlCopyElementContent	/usr/include/libxml2/libxml/valid.h	/^		xmlCopyElementContent	(xmlElementContentPtr content);$/;"	p	signature:(xmlElementContentPtr content)
xmlCopyElementTable	/usr/include/libxml2/libxml/valid.h	/^		xmlCopyElementTable	(xmlElementTablePtr table);$/;"	p	signature:(xmlElementTablePtr table)
xmlCopyEntitiesTable	/usr/include/libxml2/libxml/entities.h	/^			xmlCopyEntitiesTable	(xmlEntitiesTablePtr table);$/;"	p	signature:(xmlEntitiesTablePtr table)
xmlCopyEnumeration	/usr/include/libxml2/libxml/valid.h	/^		xmlCopyEnumeration	(xmlEnumerationPtr cur);$/;"	p	signature:(xmlEnumerationPtr cur)
xmlCopyError	/usr/include/libxml2/libxml/xmlerror.h	/^    xmlCopyError		(xmlErrorPtr from,$/;"	p	signature:(xmlErrorPtr from, xmlErrorPtr to)
xmlCopyNamespace	/usr/include/libxml2/libxml/tree.h	/^		xmlCopyNamespace	(xmlNsPtr cur);$/;"	p	signature:(xmlNsPtr cur)
xmlCopyNamespaceList	/usr/include/libxml2/libxml/tree.h	/^		xmlCopyNamespaceList	(xmlNsPtr cur);$/;"	p	signature:(xmlNsPtr cur)
xmlCopyNode	/usr/include/libxml2/libxml/tree.h	/^		xmlCopyNode		(const xmlNodePtr node,$/;"	p	signature:(const xmlNodePtr node, int recursive)
xmlCopyNodeList	/usr/include/libxml2/libxml/tree.h	/^		xmlCopyNodeList		(const xmlNodePtr node);$/;"	p	signature:(const xmlNodePtr node)
xmlCopyNotationTable	/usr/include/libxml2/libxml/valid.h	/^		xmlCopyNotationTable	(xmlNotationTablePtr table);$/;"	p	signature:(xmlNotationTablePtr table)
xmlCopyProp	/usr/include/libxml2/libxml/tree.h	/^		xmlCopyProp		(xmlNodePtr target,$/;"	p	signature:(xmlNodePtr target, xmlAttrPtr cur)
xmlCopyPropList	/usr/include/libxml2/libxml/tree.h	/^		xmlCopyPropList		(xmlNodePtr target,$/;"	p	signature:(xmlNodePtr target, xmlAttrPtr cur)
xmlCreateDocParserCtxt	/usr/include/libxml2/libxml/parser.h	/^		xmlCreateDocParserCtxt	(const xmlChar *cur);$/;"	p	signature:(const xmlChar *cur)
xmlCreateEntitiesTable	/usr/include/libxml2/libxml/entities.h	/^			xmlCreateEntitiesTable	(void);$/;"	p	signature:(void)
xmlCreateEntityParserCtxt	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlCreateEntityParserCtxt(const xmlChar *URL,$/;"	p	signature:(const xmlChar *URL, const xmlChar *ID, const xmlChar *base)
xmlCreateEnumeration	/usr/include/libxml2/libxml/valid.h	/^		xmlCreateEnumeration	(const xmlChar *name);$/;"	p	signature:(const xmlChar *name)
xmlCreateFileParserCtxt	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlCreateFileParserCtxt	(const char *filename);$/;"	p	signature:(const char *filename)
xmlCreateIOParserCtxt	/usr/include/libxml2/libxml/parser.h	/^		xmlCreateIOParserCtxt	(xmlSAXHandlerPtr sax,$/;"	p	signature:(xmlSAXHandlerPtr sax, void *user_data, xmlInputReadCallback ioread, xmlInputCloseCallback ioclose, void *ioctx, xmlCharEncoding enc)
xmlCreateIntSubset	/usr/include/libxml2/libxml/tree.h	/^		xmlCreateIntSubset	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *name, const xmlChar *ExternalID, const xmlChar *SystemID)
xmlCreateMemoryParserCtxt	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlCreateMemoryParserCtxt(const char *buffer,$/;"	p	signature:(const char *buffer, int size)
xmlCreatePushParserCtxt	/usr/include/libxml2/libxml/parser.h	/^		xmlCreatePushParserCtxt(xmlSAXHandlerPtr sax,$/;"	p	signature:(xmlSAXHandlerPtr sax, void *user_data, const char *chunk, int size, const char *filename)
xmlCreateURI	/usr/include/libxml2/libxml/uri.h	/^		xmlCreateURI		(void);$/;"	p	signature:(void)
xmlCreateURLParserCtxt	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlCreateURLParserCtxt	(const char *filename,$/;"	p	signature:(const char *filename, int options)
xmlCtxtGetLastError	/usr/include/libxml2/libxml/xmlerror.h	/^    xmlCtxtGetLastError		(void *ctx);$/;"	p	signature:(void *ctx)
xmlCtxtReadDoc	/usr/include/libxml2/libxml/parser.h	/^		xmlCtxtReadDoc		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const xmlChar *cur, const char *URL, const char *encoding, int options)
xmlCtxtReadFd	/usr/include/libxml2/libxml/parser.h	/^		xmlCtxtReadFd		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, int fd, const char *URL, const char *encoding, int options)
xmlCtxtReadFile	/usr/include/libxml2/libxml/parser.h	/^		xmlCtxtReadFile		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const char *filename, const char *encoding, int options)
xmlCtxtReadIO	/usr/include/libxml2/libxml/parser.h	/^		xmlCtxtReadIO		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlInputReadCallback ioread, xmlInputCloseCallback ioclose, void *ioctx, const char *URL, const char *encoding, int options)
xmlCtxtReadMemory	/usr/include/libxml2/libxml/parser.h	/^		xmlCtxtReadMemory		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const char *buffer, int size, const char *URL, const char *encoding, int options)
xmlCtxtReset	/usr/include/libxml2/libxml/parser.h	/^		xmlCtxtReset		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlCtxtResetLastError	/usr/include/libxml2/libxml/xmlerror.h	/^    xmlCtxtResetLastError	(void *ctx);$/;"	p	signature:(void *ctx)
xmlCtxtResetPush	/usr/include/libxml2/libxml/parser.h	/^		xmlCtxtResetPush	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const char *chunk, int size, const char *filename, const char *encoding)
xmlCtxtUseOptions	/usr/include/libxml2/libxml/parser.h	/^		xmlCtxtUseOptions	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, int options)
xmlCurrentChar	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN int XMLCALL			xmlCurrentChar		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, int *len)
xmlDOMWrapAcquireNsFunction	/usr/include/libxml2/libxml/tree.h	/^typedef xmlNsPtr (*xmlDOMWrapAcquireNsFunction) (xmlDOMWrapCtxtPtr ctxt,$/;"	t
xmlDOMWrapAdoptNode	/usr/include/libxml2/libxml/tree.h	/^	    xmlDOMWrapAdoptNode		(xmlDOMWrapCtxtPtr ctxt,$/;"	p	signature:(xmlDOMWrapCtxtPtr ctxt, xmlDocPtr sourceDoc, xmlNodePtr node, xmlDocPtr destDoc, xmlNodePtr destParent, int options)
xmlDOMWrapCloneNode	/usr/include/libxml2/libxml/tree.h	/^	    xmlDOMWrapCloneNode		(xmlDOMWrapCtxtPtr ctxt,$/;"	p	signature:(xmlDOMWrapCtxtPtr ctxt, xmlDocPtr sourceDoc, xmlNodePtr node, xmlNodePtr *clonedNode, xmlDocPtr destDoc, xmlNodePtr destParent, int deep, int options)
xmlDOMWrapCtxt	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlDOMWrapCtxt xmlDOMWrapCtxt;$/;"	t	typeref:struct:_xmlDOMWrapCtxt
xmlDOMWrapCtxtPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlDOMWrapCtxt *xmlDOMWrapCtxtPtr;$/;"	t
xmlDOMWrapFreeCtxt	/usr/include/libxml2/libxml/tree.h	/^		xmlDOMWrapFreeCtxt	(xmlDOMWrapCtxtPtr ctxt);$/;"	p	signature:(xmlDOMWrapCtxtPtr ctxt)
xmlDOMWrapNewCtxt	/usr/include/libxml2/libxml/tree.h	/^		xmlDOMWrapNewCtxt	(void);$/;"	p	signature:(void)
xmlDOMWrapReconcileNamespaces	/usr/include/libxml2/libxml/tree.h	/^	    xmlDOMWrapReconcileNamespaces(xmlDOMWrapCtxtPtr ctxt,$/;"	p	signature:(xmlDOMWrapCtxtPtr ctxt, xmlNodePtr elem, int options)
xmlDOMWrapRemoveNode	/usr/include/libxml2/libxml/tree.h	/^	    xmlDOMWrapRemoveNode	(xmlDOMWrapCtxtPtr ctxt,$/;"	p	signature:(xmlDOMWrapCtxtPtr ctxt, xmlDocPtr doc, xmlNodePtr node, int options)
xmlDebugCheckDocument	/usr/include/libxml2/libxml/debugXML.h	/^	xmlDebugCheckDocument	(FILE * output,$/;"	p	signature:(FILE * output, xmlDocPtr doc)
xmlDebugDumpAttr	/usr/include/libxml2/libxml/debugXML.h	/^	xmlDebugDumpAttr	(FILE *output,$/;"	p	signature:(FILE *output, xmlAttrPtr attr, int depth)
xmlDebugDumpAttrList	/usr/include/libxml2/libxml/debugXML.h	/^	xmlDebugDumpAttrList	(FILE *output,$/;"	p	signature:(FILE *output, xmlAttrPtr attr, int depth)
xmlDebugDumpDTD	/usr/include/libxml2/libxml/debugXML.h	/^	xmlDebugDumpDTD		(FILE *output,$/;"	p	signature:(FILE *output, xmlDtdPtr dtd)
xmlDebugDumpDocument	/usr/include/libxml2/libxml/debugXML.h	/^	xmlDebugDumpDocument	(FILE *output,$/;"	p	signature:(FILE *output, xmlDocPtr doc)
xmlDebugDumpDocumentHead	/usr/include/libxml2/libxml/debugXML.h	/^	xmlDebugDumpDocumentHead(FILE *output,$/;"	p	signature:(FILE *output, xmlDocPtr doc)
xmlDebugDumpEntities	/usr/include/libxml2/libxml/debugXML.h	/^	xmlDebugDumpEntities	(FILE *output,$/;"	p	signature:(FILE *output, xmlDocPtr doc)
xmlDebugDumpNode	/usr/include/libxml2/libxml/debugXML.h	/^	xmlDebugDumpNode	(FILE *output,$/;"	p	signature:(FILE *output, xmlNodePtr node, int depth)
xmlDebugDumpNodeList	/usr/include/libxml2/libxml/debugXML.h	/^	xmlDebugDumpNodeList	(FILE *output,$/;"	p	signature:(FILE *output, xmlNodePtr node, int depth)
xmlDebugDumpOneNode	/usr/include/libxml2/libxml/debugXML.h	/^	xmlDebugDumpOneNode	(FILE *output,$/;"	p	signature:(FILE *output, xmlNodePtr node, int depth)
xmlDebugDumpString	/usr/include/libxml2/libxml/debugXML.h	/^	xmlDebugDumpString	(FILE *output,$/;"	p	signature:(FILE *output, const xmlChar *str)
xmlDecodeEntities	/usr/include/libxml2/libxml/parserInternals.h	/^		xmlDecodeEntities		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, int len, int what, xmlChar end, xmlChar end2, xmlChar end3)
xmlDefaultBufferSize	/usr/include/libxml2/libxml/globals.h	/^	int xmlDefaultBufferSize;$/;"	m	struct:_xmlGlobalState	access:public
xmlDefaultBufferSize	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR int xmlDefaultBufferSize;$/;"	v
xmlDefaultBufferSize	/usr/include/libxml2/libxml/globals.h	304;"	d
xmlDefaultBufferSize	/usr/include/libxml2/libxml/globals.h	71;"	d
xmlDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	/^	xmlSAXHandlerV1 xmlDefaultSAXHandler;$/;"	m	struct:_xmlGlobalState	access:public
xmlDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlSAXHandlerV1 xmlDefaultSAXHandler;$/;"	v
xmlDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	313;"	d
xmlDefaultSAXHandler	/usr/include/libxml2/libxml/globals.h	72;"	d
xmlDefaultSAXHandlerInit	/usr/include/libxml2/libxml/SAX2.h	/^		xmlDefaultSAXHandlerInit	(void);$/;"	p	signature:(void)
xmlDefaultSAXLocator	/usr/include/libxml2/libxml/globals.h	/^	xmlSAXLocator xmlDefaultSAXLocator;$/;"	m	struct:_xmlGlobalState	access:public
xmlDefaultSAXLocator	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlSAXLocator xmlDefaultSAXLocator;$/;"	v
xmlDefaultSAXLocator	/usr/include/libxml2/libxml/globals.h	321;"	d
xmlDefaultSAXLocator	/usr/include/libxml2/libxml/globals.h	73;"	d
xmlDelEncodingAlias	/usr/include/libxml2/libxml/encoding.h	/^	xmlDelEncodingAlias		(const char *alias);$/;"	p	signature:(const char *alias)
xmlDeregisterNodeDefault	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlDeregisterNodeFunc XMLCALL xmlDeregisterNodeDefault(xmlDeregisterNodeFunc func);$/;"	p	signature:(xmlDeregisterNodeFunc func)
xmlDeregisterNodeDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	xmlDeregisterNodeFunc xmlDeregisterNodeDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
xmlDeregisterNodeDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlDeregisterNodeFunc xmlDeregisterNodeDefaultValue;$/;"	v
xmlDeregisterNodeDefaultValue	/usr/include/libxml2/libxml/globals.h	476;"	d
xmlDeregisterNodeDefaultValue	/usr/include/libxml2/libxml/globals.h	96;"	d
xmlDeregisterNodeFunc	/usr/include/libxml2/libxml/globals.h	/^typedef void (*xmlDeregisterNodeFunc) (xmlNodePtr node);$/;"	t
xmlDetectCharEncoding	/usr/include/libxml2/libxml/encoding.h	/^	xmlDetectCharEncoding		(const unsigned char *in,$/;"	p	signature:(const unsigned char *in, int len)
xmlDict	/usr/include/libxml2/libxml/dict.h	/^typedef struct _xmlDict xmlDict;$/;"	t	typeref:struct:_xmlDict
xmlDictCleanup	/usr/include/libxml2/libxml/dict.h	/^                        xmlDictCleanup  (void);$/;"	p	signature:(void)
xmlDictCreate	/usr/include/libxml2/libxml/dict.h	/^			xmlDictCreate	(void);$/;"	p	signature:(void)
xmlDictCreateSub	/usr/include/libxml2/libxml/dict.h	/^			xmlDictCreateSub(xmlDictPtr sub);$/;"	p	signature:(xmlDictPtr sub)
xmlDictExists	/usr/include/libxml2/libxml/dict.h	/^			xmlDictExists	(xmlDictPtr dict,$/;"	p	signature:(xmlDictPtr dict, const xmlChar *name, int len)
xmlDictFree	/usr/include/libxml2/libxml/dict.h	/^			xmlDictFree	(xmlDictPtr dict);$/;"	p	signature:(xmlDictPtr dict)
xmlDictLookup	/usr/include/libxml2/libxml/dict.h	/^			xmlDictLookup	(xmlDictPtr dict,$/;"	p	signature:(xmlDictPtr dict, const xmlChar *name, int len)
xmlDictOwns	/usr/include/libxml2/libxml/dict.h	/^			xmlDictOwns	(xmlDictPtr dict,$/;"	p	signature:(xmlDictPtr dict, const xmlChar *str)
xmlDictPtr	/usr/include/libxml2/libxml/dict.h	/^typedef xmlDict *xmlDictPtr;$/;"	t
xmlDictQLookup	/usr/include/libxml2/libxml/dict.h	/^			xmlDictQLookup	(xmlDictPtr dict,$/;"	p	signature:(xmlDictPtr dict, const xmlChar *prefix, const xmlChar *name)
xmlDictReference	/usr/include/libxml2/libxml/dict.h	/^			xmlDictReference(xmlDictPtr dict);$/;"	p	signature:(xmlDictPtr dict)
xmlDictSize	/usr/include/libxml2/libxml/dict.h	/^			xmlDictSize	(xmlDictPtr dict);$/;"	p	signature:(xmlDictPtr dict)
xmlDllMain	/usr/include/libxml2/libxml/threads.h	/^int XMLCALL xmlDllMain(void *hinstDLL, unsigned long fdwReason, void *lpvReserved);$/;"	p	signature:(void *hinstDLL, unsigned long fdwReason, void *lpvReserved)
xmlDoValidityCheckingDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	int xmlDoValidityCheckingDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
xmlDoValidityCheckingDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR int xmlDoValidityCheckingDefaultValue;$/;"	v
xmlDoValidityCheckingDefaultValue	/usr/include/libxml2/libxml/globals.h	329;"	d
xmlDoValidityCheckingDefaultValue	/usr/include/libxml2/libxml/globals.h	74;"	d
xmlDoc	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlDoc xmlDoc;$/;"	t	typeref:struct:_xmlDoc
xmlDocCopyNode	/usr/include/libxml2/libxml/tree.h	/^		xmlDocCopyNode		(const xmlNodePtr node,$/;"	p	signature:(const xmlNodePtr node, xmlDocPtr doc, int recursive)
xmlDocCopyNodeList	/usr/include/libxml2/libxml/tree.h	/^		xmlDocCopyNodeList	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlNodePtr node)
xmlDocDump	/usr/include/libxml2/libxml/tree.h	/^		xmlDocDump		(FILE *f,$/;"	p	signature:(FILE *f, xmlDocPtr cur)
xmlDocDumpFormatMemory	/usr/include/libxml2/libxml/tree.h	/^		xmlDocDumpFormatMemory	(xmlDocPtr cur,$/;"	p	signature:(xmlDocPtr cur, xmlChar **mem, int *size, int format)
xmlDocDumpFormatMemoryEnc	/usr/include/libxml2/libxml/tree.h	/^		xmlDocDumpFormatMemoryEnc(xmlDocPtr out_doc,$/;"	p	signature:(xmlDocPtr out_doc, xmlChar **doc_txt_ptr, int * doc_txt_len, const char *txt_encoding, int format)
xmlDocDumpMemory	/usr/include/libxml2/libxml/tree.h	/^		xmlDocDumpMemory	(xmlDocPtr cur,$/;"	p	signature:(xmlDocPtr cur, xmlChar **mem, int *size)
xmlDocDumpMemoryEnc	/usr/include/libxml2/libxml/tree.h	/^		xmlDocDumpMemoryEnc	(xmlDocPtr out_doc,$/;"	p	signature:(xmlDocPtr out_doc, xmlChar **doc_txt_ptr, int * doc_txt_len, const char *txt_encoding)
xmlDocFormatDump	/usr/include/libxml2/libxml/tree.h	/^		xmlDocFormatDump	(FILE *f,$/;"	p	signature:(FILE *f, xmlDocPtr cur, int format)
xmlDocGetRootElement	/usr/include/libxml2/libxml/tree.h	/^		xmlDocGetRootElement	(xmlDocPtr doc);$/;"	p	signature:(xmlDocPtr doc)
xmlDocProperties	/usr/include/libxml2/libxml/tree.h	/^} xmlDocProperties;$/;"	t	typeref:enum:__anon30
xmlDocPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlDoc *xmlDocPtr;$/;"	t
xmlDocSetRootElement	/usr/include/libxml2/libxml/tree.h	/^		xmlDocSetRootElement	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodePtr root)
xmlDtd	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlDtd xmlDtd;$/;"	t	typeref:struct:_xmlDtd
xmlDtdPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlDtd *xmlDtdPtr;$/;"	t
xmlDumpAttributeDecl	/usr/include/libxml2/libxml/valid.h	/^		xmlDumpAttributeDecl   (xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, xmlAttributePtr attr)
xmlDumpAttributeTable	/usr/include/libxml2/libxml/valid.h	/^		xmlDumpAttributeTable  (xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, xmlAttributeTablePtr table)
xmlDumpElementDecl	/usr/include/libxml2/libxml/valid.h	/^		xmlDumpElementDecl	(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, xmlElementPtr elem)
xmlDumpElementTable	/usr/include/libxml2/libxml/valid.h	/^		xmlDumpElementTable	(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, xmlElementTablePtr table)
xmlDumpEntitiesTable	/usr/include/libxml2/libxml/entities.h	/^			xmlDumpEntitiesTable	(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, xmlEntitiesTablePtr table)
xmlDumpEntityDecl	/usr/include/libxml2/libxml/entities.h	/^			xmlDumpEntityDecl	(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, xmlEntityPtr ent)
xmlDumpNotationDecl	/usr/include/libxml2/libxml/valid.h	/^		xmlDumpNotationDecl	(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, xmlNotationPtr nota)
xmlDumpNotationTable	/usr/include/libxml2/libxml/valid.h	/^		xmlDumpNotationTable	(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, xmlNotationTablePtr table)
xmlElemDump	/usr/include/libxml2/libxml/tree.h	/^		xmlElemDump		(FILE *f,$/;"	p	signature:(FILE *f, xmlDocPtr doc, xmlNodePtr cur)
xmlElement	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlElement xmlElement;$/;"	t	typeref:struct:_xmlElement
xmlElementContent	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlElementContent xmlElementContent;$/;"	t	typeref:struct:_xmlElementContent
xmlElementContentOccur	/usr/include/libxml2/libxml/tree.h	/^} xmlElementContentOccur;$/;"	t	typeref:enum:__anon28
xmlElementContentPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlElementContent *xmlElementContentPtr;$/;"	t
xmlElementContentType	/usr/include/libxml2/libxml/tree.h	/^} xmlElementContentType;$/;"	t	typeref:enum:__anon27
xmlElementPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlElement *xmlElementPtr;$/;"	t
xmlElementTable	/usr/include/libxml2/libxml/valid.h	/^typedef struct _xmlHashTable xmlElementTable;$/;"	t	typeref:struct:_xmlHashTable
xmlElementTablePtr	/usr/include/libxml2/libxml/valid.h	/^typedef xmlElementTable *xmlElementTablePtr;$/;"	t
xmlElementType	/usr/include/libxml2/libxml/tree.h	/^} xmlElementType;$/;"	t	typeref:enum:__anon24
xmlElementTypeVal	/usr/include/libxml2/libxml/tree.h	/^} xmlElementTypeVal;$/;"	t	typeref:enum:__anon29
xmlEncodeEntities	/usr/include/libxml2/libxml/entities.h	/^			xmlEncodeEntities	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *input)
xmlEncodeEntitiesReentrant	/usr/include/libxml2/libxml/entities.h	/^			xmlEncodeEntitiesReentrant(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *input)
xmlEncodeSpecialChars	/usr/include/libxml2/libxml/entities.h	/^			xmlEncodeSpecialChars	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *input)
xmlEntitiesTable	/usr/include/libxml2/libxml/entities.h	/^typedef struct _xmlHashTable xmlEntitiesTable;$/;"	t	typeref:struct:_xmlHashTable
xmlEntitiesTablePtr	/usr/include/libxml2/libxml/entities.h	/^typedef xmlEntitiesTable *xmlEntitiesTablePtr;$/;"	t
xmlEntity	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlEntity xmlEntity;$/;"	t	typeref:struct:_xmlEntity
xmlEntityPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlEntity *xmlEntityPtr;$/;"	t
xmlEntityReferenceFunc	/usr/include/libxml2/libxml/parserInternals.h	/^typedef	void	(*xmlEntityReferenceFunc)	(xmlEntityPtr ent,$/;"	t
xmlEntityType	/usr/include/libxml2/libxml/entities.h	/^} xmlEntityType;$/;"	t	typeref:enum:__anon34
xmlEnumeration	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlEnumeration xmlEnumeration;$/;"	t	typeref:struct:_xmlEnumeration
xmlEnumerationPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlEnumeration *xmlEnumerationPtr;$/;"	t
xmlErrMemory	/usr/include/libxml2/libxml/parserInternals.h	/^	xmlErrMemory		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const char *extra)
xmlError	/usr/include/libxml2/libxml/xmlerror.h	/^typedef struct _xmlError xmlError;$/;"	t	typeref:struct:_xmlError
xmlErrorDomain	/usr/include/libxml2/libxml/xmlerror.h	/^} xmlErrorDomain;$/;"	t	typeref:enum:__anon43
xmlErrorLevel	/usr/include/libxml2/libxml/xmlerror.h	/^} xmlErrorLevel;$/;"	t	typeref:enum:__anon42
xmlErrorPtr	/usr/include/libxml2/libxml/xmlerror.h	/^typedef xmlError *xmlErrorPtr;$/;"	t
xmlExpCtxt	/usr/include/libxml2/libxml/xmlregexp.h	/^typedef struct _xmlExpCtxt xmlExpCtxt;$/;"	t	typeref:struct:_xmlExpCtxt
xmlExpCtxtNbCons	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpCtxtNbCons(xmlExpCtxtPtr ctxt);$/;"	p	signature:(xmlExpCtxtPtr ctxt)
xmlExpCtxtNbNodes	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpCtxtNbNodes(xmlExpCtxtPtr ctxt);$/;"	p	signature:(xmlExpCtxtPtr ctxt)
xmlExpCtxtPtr	/usr/include/libxml2/libxml/xmlregexp.h	/^typedef xmlExpCtxt *xmlExpCtxtPtr;$/;"	t
xmlExpDump	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpDump	(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, xmlExpNodePtr expr)
xmlExpExpDerive	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpExpDerive	(xmlExpCtxtPtr ctxt,$/;"	p	signature:(xmlExpCtxtPtr ctxt, xmlExpNodePtr expr, xmlExpNodePtr sub)
xmlExpFree	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpFree	(xmlExpCtxtPtr ctxt,$/;"	p	signature:(xmlExpCtxtPtr ctxt, xmlExpNodePtr expr)
xmlExpFreeCtxt	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpFreeCtxt	(xmlExpCtxtPtr ctxt);$/;"	p	signature:(xmlExpCtxtPtr ctxt)
xmlExpGetLanguage	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpGetLanguage(xmlExpCtxtPtr ctxt,$/;"	p	signature:(xmlExpCtxtPtr ctxt, xmlExpNodePtr expr, const xmlChar**langList, int len)
xmlExpGetStart	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpGetStart	(xmlExpCtxtPtr ctxt,$/;"	p	signature:(xmlExpCtxtPtr ctxt, xmlExpNodePtr expr, const xmlChar**tokList, int len)
xmlExpIsNillable	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpIsNillable(xmlExpNodePtr expr);$/;"	p	signature:(xmlExpNodePtr expr)
xmlExpMaxToken	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpMaxToken	(xmlExpNodePtr expr);$/;"	p	signature:(xmlExpNodePtr expr)
xmlExpNewAtom	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpNewAtom	(xmlExpCtxtPtr ctxt,$/;"	p	signature:(xmlExpCtxtPtr ctxt, const xmlChar *name, int len)
xmlExpNewCtxt	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpNewCtxt	(int maxNodes,$/;"	p	signature:(int maxNodes, xmlDictPtr dict)
xmlExpNewOr	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpNewOr	(xmlExpCtxtPtr ctxt,$/;"	p	signature:(xmlExpCtxtPtr ctxt, xmlExpNodePtr left, xmlExpNodePtr right)
xmlExpNewRange	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpNewRange	(xmlExpCtxtPtr ctxt,$/;"	p	signature:(xmlExpCtxtPtr ctxt, xmlExpNodePtr subset, int min, int max)
xmlExpNewSeq	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpNewSeq	(xmlExpCtxtPtr ctxt,$/;"	p	signature:(xmlExpCtxtPtr ctxt, xmlExpNodePtr left, xmlExpNodePtr right)
xmlExpNode	/usr/include/libxml2/libxml/xmlregexp.h	/^typedef struct _xmlExpNode xmlExpNode;$/;"	t	typeref:struct:_xmlExpNode
xmlExpNodePtr	/usr/include/libxml2/libxml/xmlregexp.h	/^typedef xmlExpNode *xmlExpNodePtr;$/;"	t
xmlExpNodeType	/usr/include/libxml2/libxml/xmlregexp.h	/^} xmlExpNodeType;$/;"	t	typeref:enum:__anon19
xmlExpParse	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpParse	(xmlExpCtxtPtr ctxt,$/;"	p	signature:(xmlExpCtxtPtr ctxt, const char *expr)
xmlExpRef	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpRef	(xmlExpNodePtr expr);$/;"	p	signature:(xmlExpNodePtr expr)
xmlExpStringDerive	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpStringDerive(xmlExpCtxtPtr ctxt,$/;"	p	signature:(xmlExpCtxtPtr ctxt, xmlExpNodePtr expr, const xmlChar *str, int len)
xmlExpSubsume	/usr/include/libxml2/libxml/xmlregexp.h	/^			xmlExpSubsume	(xmlExpCtxtPtr ctxt,$/;"	p	signature:(xmlExpCtxtPtr ctxt, xmlExpNodePtr expr, xmlExpNodePtr sub)
xmlExternalEntityLoader	/usr/include/libxml2/libxml/parser.h	/^typedef xmlParserInputPtr (*xmlExternalEntityLoader) (const char *URL,$/;"	t
xmlFeature	/usr/include/libxml2/libxml/parser.h	/^} xmlFeature;$/;"	t	typeref:enum:__anon9
xmlFileClose	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlFileClose 			(void * context);$/;"	p	signature:(void * context)
xmlFileMatch	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlFileMatch 			(const char *filename);$/;"	p	signature:(const char *filename)
xmlFileOpen	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlFileOpen 			(const char *filename);$/;"	p	signature:(const char *filename)
xmlFileRead	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlFileRead 			(void * context, $/;"	p	signature:(void * context, char * buffer, int len)
xmlFindCharEncodingHandler	/usr/include/libxml2/libxml/encoding.h	/^	xmlFindCharEncodingHandler	(const char *name);$/;"	p	signature:(const char *name)
xmlFirstElementChild	/usr/include/libxml2/libxml/tree.h	/^            xmlFirstElementChild        (xmlNodePtr parent);$/;"	p	signature:(xmlNodePtr parent)
xmlFree	/usr/include/libxml2/libxml/globals.h	/^	xmlFreeFunc xmlFree;$/;"	m	struct:_xmlGlobalState	access:public
xmlFree	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlFreeFunc xmlFree;$/;"	v
xmlFree	/usr/include/libxml2/libxml/globals.h	228;"	d
xmlFree	/usr/include/libxml2/libxml/globals.h	75;"	d
xmlFreeAttributeTable	/usr/include/libxml2/libxml/valid.h	/^		xmlFreeAttributeTable  (xmlAttributeTablePtr table);$/;"	p	signature:(xmlAttributeTablePtr table)
xmlFreeAutomata	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlFreeAutomata		(xmlAutomataPtr am);$/;"	p	signature:(xmlAutomataPtr am)
xmlFreeCatalog	/usr/include/libxml2/libxml/catalog.h	/^		xmlFreeCatalog		(xmlCatalogPtr catal);$/;"	p	signature:(xmlCatalogPtr catal)
xmlFreeDoc	/usr/include/libxml2/libxml/tree.h	/^		xmlFreeDoc		(xmlDocPtr cur);$/;"	p	signature:(xmlDocPtr cur)
xmlFreeDocElementContent	/usr/include/libxml2/libxml/valid.h	/^		xmlFreeDocElementContent(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlElementContentPtr cur)
xmlFreeDtd	/usr/include/libxml2/libxml/tree.h	/^		xmlFreeDtd		(xmlDtdPtr cur);$/;"	p	signature:(xmlDtdPtr cur)
xmlFreeElementContent	/usr/include/libxml2/libxml/valid.h	/^		xmlFreeElementContent	(xmlElementContentPtr cur);$/;"	p	signature:(xmlElementContentPtr cur)
xmlFreeElementTable	/usr/include/libxml2/libxml/valid.h	/^		xmlFreeElementTable	(xmlElementTablePtr table);$/;"	p	signature:(xmlElementTablePtr table)
xmlFreeEntitiesTable	/usr/include/libxml2/libxml/entities.h	/^			xmlFreeEntitiesTable	(xmlEntitiesTablePtr table);$/;"	p	signature:(xmlEntitiesTablePtr table)
xmlFreeEnumeration	/usr/include/libxml2/libxml/valid.h	/^		xmlFreeEnumeration	(xmlEnumerationPtr cur);$/;"	p	signature:(xmlEnumerationPtr cur)
xmlFreeFunc	/usr/include/libxml2/libxml/xmlmemory.h	/^typedef void (XMLCALL *xmlFreeFunc)(void *mem);$/;"	t
xmlFreeIDTable	/usr/include/libxml2/libxml/valid.h	/^		xmlFreeIDTable	       (xmlIDTablePtr table);$/;"	p	signature:(xmlIDTablePtr table)
xmlFreeInputStream	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlFreeInputStream	(xmlParserInputPtr input);$/;"	p	signature:(xmlParserInputPtr input)
xmlFreeMutex	/usr/include/libxml2/libxml/threads.h	/^			xmlFreeMutex	(xmlMutexPtr tok);$/;"	p	signature:(xmlMutexPtr tok)
xmlFreeNode	/usr/include/libxml2/libxml/tree.h	/^		xmlFreeNode		(xmlNodePtr cur);$/;"	p	signature:(xmlNodePtr cur)
xmlFreeNodeList	/usr/include/libxml2/libxml/tree.h	/^		xmlFreeNodeList		(xmlNodePtr cur);$/;"	p	signature:(xmlNodePtr cur)
xmlFreeNotationTable	/usr/include/libxml2/libxml/valid.h	/^		xmlFreeNotationTable	(xmlNotationTablePtr table);$/;"	p	signature:(xmlNotationTablePtr table)
xmlFreeNs	/usr/include/libxml2/libxml/tree.h	/^		xmlFreeNs		(xmlNsPtr cur);$/;"	p	signature:(xmlNsPtr cur)
xmlFreeNsList	/usr/include/libxml2/libxml/tree.h	/^		xmlFreeNsList		(xmlNsPtr cur);$/;"	p	signature:(xmlNsPtr cur)
xmlFreeParserCtxt	/usr/include/libxml2/libxml/parser.h	/^		xmlFreeParserCtxt	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlFreeParserInputBuffer	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlFreeParserInputBuffer		(xmlParserInputBufferPtr in);$/;"	p	signature:(xmlParserInputBufferPtr in)
xmlFreePattern	/usr/include/libxml2/libxml/pattern.h	/^			xmlFreePattern		(xmlPatternPtr comp);$/;"	p	signature:(xmlPatternPtr comp)
xmlFreePatternList	/usr/include/libxml2/libxml/pattern.h	/^			xmlFreePatternList	(xmlPatternPtr comp);$/;"	p	signature:(xmlPatternPtr comp)
xmlFreeProp	/usr/include/libxml2/libxml/tree.h	/^		xmlFreeProp		(xmlAttrPtr cur);$/;"	p	signature:(xmlAttrPtr cur)
xmlFreePropList	/usr/include/libxml2/libxml/tree.h	/^		xmlFreePropList		(xmlAttrPtr cur);$/;"	p	signature:(xmlAttrPtr cur)
xmlFreeRMutex	/usr/include/libxml2/libxml/threads.h	/^			xmlFreeRMutex	(xmlRMutexPtr tok);$/;"	p	signature:(xmlRMutexPtr tok)
xmlFreeRefTable	/usr/include/libxml2/libxml/valid.h	/^		xmlFreeRefTable	       (xmlRefTablePtr table);$/;"	p	signature:(xmlRefTablePtr table)
xmlFreeStreamCtxt	/usr/include/libxml2/libxml/pattern.h	/^			xmlFreeStreamCtxt	(xmlStreamCtxtPtr stream);$/;"	p	signature:(xmlStreamCtxtPtr stream)
xmlFreeTextReader	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlFreeTextReader	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlFreeTextWriter	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN void XMLCALL xmlFreeTextWriter(xmlTextWriterPtr writer);$/;"	p	signature:(xmlTextWriterPtr writer)
xmlFreeURI	/usr/include/libxml2/libxml/uri.h	/^		xmlFreeURI		(xmlURIPtr uri);$/;"	p	signature:(xmlURIPtr uri)
xmlFreeValidCtxt	/usr/include/libxml2/libxml/valid.h	/^		xmlFreeValidCtxt(xmlValidCtxtPtr);$/;"	p	signature:(xmlValidCtxtPtr)
xmlGcMemGet	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlGcMemGet	(xmlFreeFunc *freeFunc,$/;"	p	signature:(xmlFreeFunc *freeFunc, xmlMallocFunc *mallocFunc, xmlMallocFunc *mallocAtomicFunc, xmlReallocFunc *reallocFunc, xmlStrdupFunc *strdupFunc)
xmlGcMemSetup	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlGcMemSetup	(xmlFreeFunc freeFunc,$/;"	p	signature:(xmlFreeFunc freeFunc, xmlMallocFunc mallocFunc, xmlMallocFunc mallocAtomicFunc, xmlReallocFunc reallocFunc, xmlStrdupFunc strdupFunc)
xmlGenericError	/usr/include/libxml2/libxml/globals.h	/^	xmlGenericErrorFunc xmlGenericError;$/;"	m	struct:_xmlGlobalState	access:public
xmlGenericError	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlGenericErrorFunc xmlGenericError;$/;"	v
xmlGenericError	/usr/include/libxml2/libxml/globals.h	338;"	d
xmlGenericError	/usr/include/libxml2/libxml/globals.h	76;"	d
xmlGenericErrorContext	/usr/include/libxml2/libxml/globals.h	/^	void *xmlGenericErrorContext;$/;"	m	struct:_xmlGlobalState	access:public
xmlGenericErrorContext	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR void * xmlGenericErrorContext;$/;"	v
xmlGenericErrorContext	/usr/include/libxml2/libxml/globals.h	354;"	d
xmlGenericErrorContext	/usr/include/libxml2/libxml/globals.h	78;"	d
xmlGetBufferAllocationScheme	/usr/include/libxml2/libxml/tree.h	/^		xmlGetBufferAllocationScheme(void);$/;"	p	signature:(void)
xmlGetCharEncodingHandler	/usr/include/libxml2/libxml/encoding.h	/^	xmlGetCharEncodingHandler	(xmlCharEncoding enc);$/;"	p	signature:(xmlCharEncoding enc)
xmlGetCharEncodingName	/usr/include/libxml2/libxml/encoding.h	/^	xmlGetCharEncodingName		(xmlCharEncoding enc);$/;"	p	signature:(xmlCharEncoding enc)
xmlGetCompressMode	/usr/include/libxml2/libxml/tree.h	/^		xmlGetCompressMode	(void);$/;"	p	signature:(void)
xmlGetDocCompressMode	/usr/include/libxml2/libxml/tree.h	/^		xmlGetDocCompressMode	(xmlDocPtr doc);$/;"	p	signature:(xmlDocPtr doc)
xmlGetDocEntity	/usr/include/libxml2/libxml/entities.h	/^			xmlGetDocEntity		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *name)
xmlGetDtdAttrDesc	/usr/include/libxml2/libxml/valid.h	/^		xmlGetDtdAttrDesc	(xmlDtdPtr dtd,$/;"	p	signature:(xmlDtdPtr dtd, const xmlChar *elem, const xmlChar *name)
xmlGetDtdElementDesc	/usr/include/libxml2/libxml/valid.h	/^		xmlGetDtdElementDesc	(xmlDtdPtr dtd,$/;"	p	signature:(xmlDtdPtr dtd, const xmlChar *name)
xmlGetDtdEntity	/usr/include/libxml2/libxml/entities.h	/^			xmlGetDtdEntity		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *name)
xmlGetDtdNotationDesc	/usr/include/libxml2/libxml/valid.h	/^		xmlGetDtdNotationDesc	(xmlDtdPtr dtd,$/;"	p	signature:(xmlDtdPtr dtd, const xmlChar *name)
xmlGetDtdQAttrDesc	/usr/include/libxml2/libxml/valid.h	/^		xmlGetDtdQAttrDesc	(xmlDtdPtr dtd,$/;"	p	signature:(xmlDtdPtr dtd, const xmlChar *elem, const xmlChar *name, const xmlChar *prefix)
xmlGetDtdQElementDesc	/usr/include/libxml2/libxml/valid.h	/^		xmlGetDtdQElementDesc	(xmlDtdPtr dtd,$/;"	p	signature:(xmlDtdPtr dtd, const xmlChar *name, const xmlChar *prefix)
xmlGetEncodingAlias	/usr/include/libxml2/libxml/encoding.h	/^	xmlGetEncodingAlias		(const char *alias);$/;"	p	signature:(const char *alias)
xmlGetExternalEntityLoader	/usr/include/libxml2/libxml/parser.h	/^		xmlGetExternalEntityLoader(void);$/;"	p	signature:(void)
xmlGetFeature	/usr/include/libxml2/libxml/parser.h	/^		xmlGetFeature		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const char *name, void *result)
xmlGetFeaturesList	/usr/include/libxml2/libxml/parser.h	/^		xmlGetFeaturesList	(int *len,$/;"	p	signature:(int *len, const char **result)
xmlGetGlobalState	/usr/include/libxml2/libxml/threads.h	/^			xmlGetGlobalState(void);$/;"	p	signature:(void)
xmlGetID	/usr/include/libxml2/libxml/valid.h	/^		xmlGetID	       (xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *ID)
xmlGetIntSubset	/usr/include/libxml2/libxml/tree.h	/^		xmlGetIntSubset		(xmlDocPtr doc);$/;"	p	signature:(xmlDocPtr doc)
xmlGetLastChild	/usr/include/libxml2/libxml/tree.h	/^		xmlGetLastChild		(xmlNodePtr parent);$/;"	p	signature:(xmlNodePtr parent)
xmlGetLastError	/usr/include/libxml2/libxml/xmlerror.h	/^    xmlGetLastError		(void);$/;"	p	signature:(void)
xmlGetLineNo	/usr/include/libxml2/libxml/tree.h	/^		xmlGetLineNo		(xmlNodePtr node);$/;"	p	signature:(xmlNodePtr node)
xmlGetNoNsProp	/usr/include/libxml2/libxml/tree.h	/^		xmlGetNoNsProp		(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, const xmlChar *name)
xmlGetNodePath	/usr/include/libxml2/libxml/tree.h	/^		xmlGetNodePath		(xmlNodePtr node);$/;"	p	signature:(xmlNodePtr node)
xmlGetNsList	/usr/include/libxml2/libxml/tree.h	/^		xmlGetNsList		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodePtr node)
xmlGetNsProp	/usr/include/libxml2/libxml/tree.h	/^		xmlGetNsProp		(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, const xmlChar *name, const xmlChar *nameSpace)
xmlGetParameterEntity	/usr/include/libxml2/libxml/entities.h	/^			xmlGetParameterEntity	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *name)
xmlGetPredefinedEntity	/usr/include/libxml2/libxml/entities.h	/^			xmlGetPredefinedEntity	(const xmlChar *name);$/;"	p	signature:(const xmlChar *name)
xmlGetProp	/usr/include/libxml2/libxml/tree.h	/^		xmlGetProp		(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, const xmlChar *name)
xmlGetRefs	/usr/include/libxml2/libxml/valid.h	/^		xmlGetRefs	       (xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *ID)
xmlGetThreadId	/usr/include/libxml2/libxml/threads.h	/^			xmlGetThreadId	(void);$/;"	p	signature:(void)
xmlGetUTF8Char	/usr/include/libxml2/libxml/xmlstring.h	/^        xmlGetUTF8Char                   (const unsigned char *utf,$/;"	p	signature:(const unsigned char *utf, int *len)
xmlGetWarningsDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	int xmlGetWarningsDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
xmlGetWarningsDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR int xmlGetWarningsDefaultValue;$/;"	v
xmlGetWarningsDefaultValue	/usr/include/libxml2/libxml/globals.h	370;"	d
xmlGetWarningsDefaultValue	/usr/include/libxml2/libxml/globals.h	80;"	d
xmlGlobalState	/usr/include/libxml2/libxml/globals.h	/^typedef struct _xmlGlobalState xmlGlobalState;$/;"	t	typeref:struct:_xmlGlobalState
xmlGlobalStatePtr	/usr/include/libxml2/libxml/globals.h	/^typedef xmlGlobalState *xmlGlobalStatePtr;$/;"	t
xmlHandleEntity	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlHandleEntity		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlEntityPtr entity)
xmlHasFeature	/usr/include/libxml2/libxml/parser.h	/^		xmlHasFeature		(xmlFeature feature);$/;"	p	signature:(xmlFeature feature)
xmlHasNsProp	/usr/include/libxml2/libxml/tree.h	/^		xmlHasNsProp		(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, const xmlChar *name, const xmlChar *nameSpace)
xmlHasProp	/usr/include/libxml2/libxml/tree.h	/^		xmlHasProp		(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, const xmlChar *name)
xmlHashAddEntry	/usr/include/libxml2/libxml/hash.h	/^			xmlHashAddEntry	(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, void *userdata)
xmlHashAddEntry2	/usr/include/libxml2/libxml/hash.h	/^			xmlHashAddEntry2(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, const xmlChar *name2, void *userdata)
xmlHashAddEntry3	/usr/include/libxml2/libxml/hash.h	/^			xmlHashAddEntry3(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, const xmlChar *name2, const xmlChar *name3, void *userdata)
xmlHashCopier	/usr/include/libxml2/libxml/hash.h	/^typedef void *(*xmlHashCopier)(void *payload, xmlChar *name);$/;"	t
xmlHashCopy	/usr/include/libxml2/libxml/hash.h	/^			xmlHashCopy	(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, xmlHashCopier f)
xmlHashCreate	/usr/include/libxml2/libxml/hash.h	/^			xmlHashCreate	(int size);$/;"	p	signature:(int size)
xmlHashCreateDict	/usr/include/libxml2/libxml/hash.h	/^			xmlHashCreateDict(int size,$/;"	p	signature:(int size, xmlDictPtr dict)
xmlHashDeallocator	/usr/include/libxml2/libxml/hash.h	/^typedef void (*xmlHashDeallocator)(void *payload, xmlChar *name);$/;"	t
xmlHashFree	/usr/include/libxml2/libxml/hash.h	/^			xmlHashFree	(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, xmlHashDeallocator f)
xmlHashLookup	/usr/include/libxml2/libxml/hash.h	/^			xmlHashLookup	(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name)
xmlHashLookup2	/usr/include/libxml2/libxml/hash.h	/^			xmlHashLookup2	(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, const xmlChar *name2)
xmlHashLookup3	/usr/include/libxml2/libxml/hash.h	/^			xmlHashLookup3	(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, const xmlChar *name2, const xmlChar *name3)
xmlHashQLookup	/usr/include/libxml2/libxml/hash.h	/^			xmlHashQLookup	(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, const xmlChar *prefix)
xmlHashQLookup2	/usr/include/libxml2/libxml/hash.h	/^			xmlHashQLookup2	(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, const xmlChar *prefix, const xmlChar *name2, const xmlChar *prefix2)
xmlHashQLookup3	/usr/include/libxml2/libxml/hash.h	/^			xmlHashQLookup3	(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, const xmlChar *prefix, const xmlChar *name2, const xmlChar *prefix2, const xmlChar *name3, const xmlChar *prefix3)
xmlHashRemoveEntry	/usr/include/libxml2/libxml/hash.h	/^			xmlHashRemoveEntry(xmlHashTablePtr table, const xmlChar *name,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, xmlHashDeallocator f)
xmlHashRemoveEntry2	/usr/include/libxml2/libxml/hash.h	/^			xmlHashRemoveEntry2(xmlHashTablePtr table, const xmlChar *name,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, const xmlChar *name2, xmlHashDeallocator f)
xmlHashRemoveEntry3	/usr/include/libxml2/libxml/hash.h	/^			xmlHashRemoveEntry3(xmlHashTablePtr table, const xmlChar *name,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, const xmlChar *name2, const xmlChar *name3, xmlHashDeallocator f)
xmlHashScan	/usr/include/libxml2/libxml/hash.h	/^			xmlHashScan	(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, xmlHashScanner f, void *data)
xmlHashScan3	/usr/include/libxml2/libxml/hash.h	/^			xmlHashScan3	(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, const xmlChar *name2, const xmlChar *name3, xmlHashScanner f, void *data)
xmlHashScanFull	/usr/include/libxml2/libxml/hash.h	/^			xmlHashScanFull	(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, xmlHashScannerFull f, void *data)
xmlHashScanFull3	/usr/include/libxml2/libxml/hash.h	/^			xmlHashScanFull3(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, const xmlChar *name2, const xmlChar *name3, xmlHashScannerFull f, void *data)
xmlHashScanner	/usr/include/libxml2/libxml/hash.h	/^typedef void (*xmlHashScanner)(void *payload, void *data, xmlChar *name);$/;"	t
xmlHashScannerFull	/usr/include/libxml2/libxml/hash.h	/^typedef void (*xmlHashScannerFull)(void *payload, void *data,$/;"	t
xmlHashSize	/usr/include/libxml2/libxml/hash.h	/^			xmlHashSize	(xmlHashTablePtr table);$/;"	p	signature:(xmlHashTablePtr table)
xmlHashTable	/usr/include/libxml2/libxml/hash.h	/^typedef struct _xmlHashTable xmlHashTable;$/;"	t	typeref:struct:_xmlHashTable
xmlHashTablePtr	/usr/include/libxml2/libxml/hash.h	/^typedef xmlHashTable *xmlHashTablePtr;$/;"	t
xmlHashUpdateEntry	/usr/include/libxml2/libxml/hash.h	/^			xmlHashUpdateEntry(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, void *userdata, xmlHashDeallocator f)
xmlHashUpdateEntry2	/usr/include/libxml2/libxml/hash.h	/^			xmlHashUpdateEntry2(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, const xmlChar *name2, void *userdata, xmlHashDeallocator f)
xmlHashUpdateEntry3	/usr/include/libxml2/libxml/hash.h	/^			xmlHashUpdateEntry3(xmlHashTablePtr table,$/;"	p	signature:(xmlHashTablePtr table, const xmlChar *name, const xmlChar *name2, const xmlChar *name3, void *userdata, xmlHashDeallocator f)
xmlID	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlID xmlID;$/;"	t	typeref:struct:_xmlID
xmlIDPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlID *xmlIDPtr;$/;"	t
xmlIDTable	/usr/include/libxml2/libxml/valid.h	/^typedef struct _xmlHashTable xmlIDTable;$/;"	t	typeref:struct:_xmlHashTable
xmlIDTablePtr	/usr/include/libxml2/libxml/valid.h	/^typedef xmlIDTable *xmlIDTablePtr;$/;"	t
xmlIOFTPClose	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlIOFTPClose 			(void * context);$/;"	p	signature:(void * context)
xmlIOFTPMatch	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlIOFTPMatch 			(const char *filename);$/;"	p	signature:(const char *filename)
xmlIOFTPOpen	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlIOFTPOpen 			(const char *filename);$/;"	p	signature:(const char *filename)
xmlIOFTPRead	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlIOFTPRead			(void * context, $/;"	p	signature:(void * context, char * buffer, int len)
xmlIOHTTPClose	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlIOHTTPClose 			(void * context);$/;"	p	signature:(void * context)
xmlIOHTTPMatch	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlIOHTTPMatch 			(const char *filename);$/;"	p	signature:(const char *filename)
xmlIOHTTPOpen	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlIOHTTPOpen 			(const char *filename);$/;"	p	signature:(const char *filename)
xmlIOHTTPOpenW	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlIOHTTPOpenW			(const char * post_uri,$/;"	p	signature:(const char * post_uri, int compression )
xmlIOHTTPRead	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlIOHTTPRead			(void * context, $/;"	p	signature:(void * context, char * buffer, int len)
xmlIOParseDTD	/usr/include/libxml2/libxml/parser.h	/^		xmlIOParseDTD		(xmlSAXHandlerPtr sax,$/;"	p	signature:(xmlSAXHandlerPtr sax, xmlParserInputBufferPtr input, xmlCharEncoding enc)
xmlIndentTreeOutput	/usr/include/libxml2/libxml/globals.h	/^	int xmlIndentTreeOutput;$/;"	m	struct:_xmlGlobalState	access:public
xmlIndentTreeOutput	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR int xmlIndentTreeOutput;$/;"	v
xmlIndentTreeOutput	/usr/include/libxml2/libxml/globals.h	379;"	d
xmlIndentTreeOutput	/usr/include/libxml2/libxml/globals.h	81;"	d
xmlInitCharEncodingHandlers	/usr/include/libxml2/libxml/encoding.h	/^	xmlInitCharEncodingHandlers	(void);$/;"	p	signature:(void)
xmlInitGlobals	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN void XMLCALL xmlInitGlobals(void);$/;"	p	signature:(void)
xmlInitMemory	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlInitMemory	(void);$/;"	p	signature:(void)
xmlInitNodeInfoSeq	/usr/include/libxml2/libxml/parser.h	/^		xmlInitNodeInfoSeq	(xmlParserNodeInfoSeqPtr seq);$/;"	p	signature:(xmlParserNodeInfoSeqPtr seq)
xmlInitParser	/usr/include/libxml2/libxml/parser.h	/^		xmlInitParser		(void);$/;"	p	signature:(void)
xmlInitParserCtxt	/usr/include/libxml2/libxml/parser.h	/^		xmlInitParserCtxt	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlInitThreads	/usr/include/libxml2/libxml/threads.h	/^			xmlInitThreads	(void);$/;"	p	signature:(void)
xmlInitializeCatalog	/usr/include/libxml2/libxml/catalog.h	/^		xmlInitializeCatalog	(void);$/;"	p	signature:(void)
xmlInitializeDict	/usr/include/libxml2/libxml/dict.h	/^XMLPUBFUN int XMLCALL  xmlInitializeDict(void);$/;"	p	signature:(void)
xmlInitializeGlobalState	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN void XMLCALL	xmlInitializeGlobalState(xmlGlobalStatePtr gs);$/;"	p	signature:(xmlGlobalStatePtr gs)
xmlInitializePredefinedEntities	/usr/include/libxml2/libxml/entities.h	/^		xmlInitializePredefinedEntities	(void);$/;"	p	signature:(void)
xmlInputCloseCallback	/usr/include/libxml2/libxml/xmlIO.h	/^typedef int (XMLCALL *xmlInputCloseCallback) (void * context);$/;"	t
xmlInputMatchCallback	/usr/include/libxml2/libxml/xmlIO.h	/^typedef int (XMLCALL *xmlInputMatchCallback) (char const *filename);$/;"	t
xmlInputOpenCallback	/usr/include/libxml2/libxml/xmlIO.h	/^typedef void * (XMLCALL *xmlInputOpenCallback) (char const *filename);$/;"	t
xmlInputReadCallback	/usr/include/libxml2/libxml/xmlIO.h	/^typedef int (XMLCALL *xmlInputReadCallback) (void * context, char * buffer, int len);$/;"	t
xmlIsBaseChar	/usr/include/libxml2/libxml/chvalid.h	/^		xmlIsBaseChar(unsigned int ch);$/;"	p	signature:(unsigned int ch)
xmlIsBaseCharGroup	/usr/include/libxml2/libxml/chvalid.h	/^XMLPUBVAR const xmlChRangeGroup xmlIsBaseCharGroup;$/;"	v
xmlIsBaseCharQ	/usr/include/libxml2/libxml/chvalid.h	76;"	d
xmlIsBaseChar_ch	/usr/include/libxml2/libxml/chvalid.h	64;"	d
xmlIsBlank	/usr/include/libxml2/libxml/chvalid.h	/^		xmlIsBlank(unsigned int ch);$/;"	p	signature:(unsigned int ch)
xmlIsBlankNode	/usr/include/libxml2/libxml/tree.h	/^		xmlIsBlankNode		(xmlNodePtr node);$/;"	p	signature:(xmlNodePtr node)
xmlIsBlankQ	/usr/include/libxml2/libxml/chvalid.h	98;"	d
xmlIsBlank_ch	/usr/include/libxml2/libxml/chvalid.h	88;"	d
xmlIsChar	/usr/include/libxml2/libxml/chvalid.h	/^		xmlIsChar(unsigned int ch);$/;"	p	signature:(unsigned int ch)
xmlIsCharGroup	/usr/include/libxml2/libxml/chvalid.h	/^XMLPUBVAR const xmlChRangeGroup xmlIsCharGroup;$/;"	v
xmlIsCharQ	/usr/include/libxml2/libxml/chvalid.h	118;"	d
xmlIsChar_ch	/usr/include/libxml2/libxml/chvalid.h	108;"	d
xmlIsCombining	/usr/include/libxml2/libxml/chvalid.h	/^		xmlIsCombining(unsigned int ch);$/;"	p	signature:(unsigned int ch)
xmlIsCombiningGroup	/usr/include/libxml2/libxml/chvalid.h	/^XMLPUBVAR const xmlChRangeGroup xmlIsCombiningGroup;$/;"	v
xmlIsCombiningQ	/usr/include/libxml2/libxml/chvalid.h	132;"	d
xmlIsDigit	/usr/include/libxml2/libxml/chvalid.h	/^		xmlIsDigit(unsigned int ch);$/;"	p	signature:(unsigned int ch)
xmlIsDigitGroup	/usr/include/libxml2/libxml/chvalid.h	/^XMLPUBVAR const xmlChRangeGroup xmlIsDigitGroup;$/;"	v
xmlIsDigitQ	/usr/include/libxml2/libxml/chvalid.h	152;"	d
xmlIsDigit_ch	/usr/include/libxml2/libxml/chvalid.h	144;"	d
xmlIsExtender	/usr/include/libxml2/libxml/chvalid.h	/^		xmlIsExtender(unsigned int ch);$/;"	p	signature:(unsigned int ch)
xmlIsExtenderGroup	/usr/include/libxml2/libxml/chvalid.h	/^XMLPUBVAR const xmlChRangeGroup xmlIsExtenderGroup;$/;"	v
xmlIsExtenderQ	/usr/include/libxml2/libxml/chvalid.h	172;"	d
xmlIsExtender_ch	/usr/include/libxml2/libxml/chvalid.h	164;"	d
xmlIsID	/usr/include/libxml2/libxml/valid.h	/^		xmlIsID		       (xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodePtr elem, xmlAttrPtr attr)
xmlIsIdeographic	/usr/include/libxml2/libxml/chvalid.h	/^		xmlIsIdeographic(unsigned int ch);$/;"	p	signature:(unsigned int ch)
xmlIsIdeographicGroup	/usr/include/libxml2/libxml/chvalid.h	/^XMLPUBVAR const xmlChRangeGroup xmlIsIdeographicGroup;$/;"	v
xmlIsIdeographicQ	/usr/include/libxml2/libxml/chvalid.h	184;"	d
xmlIsLetter	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN int XMLCALL                   xmlIsLetter     (int c);$/;"	p	signature:(int c)
xmlIsMainThread	/usr/include/libxml2/libxml/threads.h	/^			xmlIsMainThread	(void);$/;"	p	signature:(void)
xmlIsMixedElement	/usr/include/libxml2/libxml/valid.h	/^		xmlIsMixedElement	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *name)
xmlIsPubidChar	/usr/include/libxml2/libxml/chvalid.h	/^		xmlIsPubidChar(unsigned int ch);$/;"	p	signature:(unsigned int ch)
xmlIsPubidCharQ	/usr/include/libxml2/libxml/chvalid.h	207;"	d
xmlIsPubidChar_ch	/usr/include/libxml2/libxml/chvalid.h	199;"	d
xmlIsPubidChar_tab	/usr/include/libxml2/libxml/chvalid.h	/^XMLPUBVAR const unsigned char xmlIsPubidChar_tab[256];$/;"	v
xmlIsRef	/usr/include/libxml2/libxml/valid.h	/^		xmlIsRef	       (xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodePtr elem, xmlAttrPtr attr)
xmlIsXHTML	/usr/include/libxml2/libxml/tree.h	/^		xmlIsXHTML		(const xmlChar *systemID,$/;"	p	signature:(const xmlChar *systemID, const xmlChar *publicID)
xmlKeepBlanksDefault	/usr/include/libxml2/libxml/parser.h	/^		xmlKeepBlanksDefault	(int val);$/;"	p	signature:(int val)
xmlKeepBlanksDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	int xmlKeepBlanksDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
xmlKeepBlanksDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR int xmlKeepBlanksDefaultValue;$/;"	v
xmlKeepBlanksDefaultValue	/usr/include/libxml2/libxml/globals.h	397;"	d
xmlKeepBlanksDefaultValue	/usr/include/libxml2/libxml/globals.h	83;"	d
xmlLastElementChild	/usr/include/libxml2/libxml/tree.h	/^            xmlLastElementChild         (xmlNodePtr parent);$/;"	p	signature:(xmlNodePtr parent)
xmlLastError	/usr/include/libxml2/libxml/globals.h	/^	xmlError xmlLastError;$/;"	m	struct:_xmlGlobalState	access:public
xmlLastError	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlError xmlLastError;$/;"	v
xmlLastError	/usr/include/libxml2/libxml/globals.h	272;"	d
xmlLastError	/usr/include/libxml2/libxml/globals.h	97;"	d
xmlLineNumbersDefault	/usr/include/libxml2/libxml/parser.h	/^		xmlLineNumbersDefault	(int val);$/;"	p	signature:(int val)
xmlLineNumbersDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	int xmlLineNumbersDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
xmlLineNumbersDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR int xmlLineNumbersDefaultValue;$/;"	v
xmlLineNumbersDefaultValue	/usr/include/libxml2/libxml/globals.h	406;"	d
xmlLineNumbersDefaultValue	/usr/include/libxml2/libxml/globals.h	84;"	d
xmlLink	/usr/include/libxml2/libxml/list.h	/^typedef struct _xmlLink xmlLink;$/;"	t	typeref:struct:_xmlLink
xmlLinkGetData	/usr/include/libxml2/libxml/list.h	/^		xmlLinkGetData          (xmlLinkPtr lk);$/;"	p	signature:(xmlLinkPtr lk)
xmlLinkPtr	/usr/include/libxml2/libxml/list.h	/^typedef xmlLink *xmlLinkPtr;$/;"	t
xmlList	/usr/include/libxml2/libxml/list.h	/^typedef struct _xmlList xmlList;$/;"	t	typeref:struct:_xmlList
xmlListAppend	/usr/include/libxml2/libxml/list.h	/^		xmlListAppend		(xmlListPtr l,$/;"	p	signature:(xmlListPtr l, void *data)
xmlListClear	/usr/include/libxml2/libxml/list.h	/^		xmlListClear		(xmlListPtr l);$/;"	p	signature:(xmlListPtr l)
xmlListCopy	/usr/include/libxml2/libxml/list.h	/^		xmlListCopy		(xmlListPtr cur,$/;"	p	signature:(xmlListPtr cur, const xmlListPtr old)
xmlListCreate	/usr/include/libxml2/libxml/list.h	/^		xmlListCreate		(xmlListDeallocator deallocator,$/;"	p	signature:(xmlListDeallocator deallocator, xmlListDataCompare compare)
xmlListDataCompare	/usr/include/libxml2/libxml/list.h	/^typedef int  (*xmlListDataCompare) (const void *data0, const void *data1);$/;"	t
xmlListDeallocator	/usr/include/libxml2/libxml/list.h	/^typedef void (*xmlListDeallocator) (xmlLinkPtr lk);$/;"	t
xmlListDelete	/usr/include/libxml2/libxml/list.h	/^		xmlListDelete		(xmlListPtr l);$/;"	p	signature:(xmlListPtr l)
xmlListDup	/usr/include/libxml2/libxml/list.h	/^		xmlListDup		(const xmlListPtr old);$/;"	p	signature:(const xmlListPtr old)
xmlListEmpty	/usr/include/libxml2/libxml/list.h	/^		xmlListEmpty		(xmlListPtr l);$/;"	p	signature:(xmlListPtr l)
xmlListEnd	/usr/include/libxml2/libxml/list.h	/^		xmlListEnd		(xmlListPtr l);$/;"	p	signature:(xmlListPtr l)
xmlListFront	/usr/include/libxml2/libxml/list.h	/^		xmlListFront		(xmlListPtr l);$/;"	p	signature:(xmlListPtr l)
xmlListInsert	/usr/include/libxml2/libxml/list.h	/^		xmlListInsert		(xmlListPtr l,$/;"	p	signature:(xmlListPtr l, void *data)
xmlListMerge	/usr/include/libxml2/libxml/list.h	/^		xmlListMerge		(xmlListPtr l1,$/;"	p	signature:(xmlListPtr l1, xmlListPtr l2)
xmlListPopBack	/usr/include/libxml2/libxml/list.h	/^		xmlListPopBack		(xmlListPtr l);$/;"	p	signature:(xmlListPtr l)
xmlListPopFront	/usr/include/libxml2/libxml/list.h	/^		xmlListPopFront		(xmlListPtr l);$/;"	p	signature:(xmlListPtr l)
xmlListPtr	/usr/include/libxml2/libxml/list.h	/^typedef xmlList *xmlListPtr;$/;"	t
xmlListPushBack	/usr/include/libxml2/libxml/list.h	/^		xmlListPushBack		(xmlListPtr l,$/;"	p	signature:(xmlListPtr l, void *data)
xmlListPushFront	/usr/include/libxml2/libxml/list.h	/^		xmlListPushFront	(xmlListPtr l,$/;"	p	signature:(xmlListPtr l, void *data)
xmlListRemoveAll	/usr/include/libxml2/libxml/list.h	/^		xmlListRemoveAll	(xmlListPtr l,$/;"	p	signature:(xmlListPtr l, void *data)
xmlListRemoveFirst	/usr/include/libxml2/libxml/list.h	/^		xmlListRemoveFirst	(xmlListPtr l,$/;"	p	signature:(xmlListPtr l, void *data)
xmlListRemoveLast	/usr/include/libxml2/libxml/list.h	/^		xmlListRemoveLast	(xmlListPtr l,$/;"	p	signature:(xmlListPtr l, void *data)
xmlListReverse	/usr/include/libxml2/libxml/list.h	/^		xmlListReverse		(xmlListPtr l);$/;"	p	signature:(xmlListPtr l)
xmlListReverseSearch	/usr/include/libxml2/libxml/list.h	/^		xmlListReverseSearch	(xmlListPtr l,$/;"	p	signature:(xmlListPtr l, void *data)
xmlListReverseWalk	/usr/include/libxml2/libxml/list.h	/^		xmlListReverseWalk	(xmlListPtr l,$/;"	p	signature:(xmlListPtr l, xmlListWalker walker, const void *user)
xmlListSearch	/usr/include/libxml2/libxml/list.h	/^		xmlListSearch		(xmlListPtr l,$/;"	p	signature:(xmlListPtr l, void *data)
xmlListSize	/usr/include/libxml2/libxml/list.h	/^		xmlListSize		(xmlListPtr l);$/;"	p	signature:(xmlListPtr l)
xmlListSort	/usr/include/libxml2/libxml/list.h	/^		xmlListSort		(xmlListPtr l);$/;"	p	signature:(xmlListPtr l)
xmlListWalk	/usr/include/libxml2/libxml/list.h	/^		xmlListWalk		(xmlListPtr l,$/;"	p	signature:(xmlListPtr l, xmlListWalker walker, const void *user)
xmlListWalker	/usr/include/libxml2/libxml/list.h	/^typedef int (*xmlListWalker) (const void *data, const void *user);$/;"	t
xmlLoadACatalog	/usr/include/libxml2/libxml/catalog.h	/^		xmlLoadACatalog		(const char *filename);$/;"	p	signature:(const char *filename)
xmlLoadCatalog	/usr/include/libxml2/libxml/catalog.h	/^		xmlLoadCatalog		(const char *filename);$/;"	p	signature:(const char *filename)
xmlLoadCatalogs	/usr/include/libxml2/libxml/catalog.h	/^		xmlLoadCatalogs		(const char *paths);$/;"	p	signature:(const char *paths)
xmlLoadExtDtdDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	int xmlLoadExtDtdDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
xmlLoadExtDtdDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR int xmlLoadExtDtdDefaultValue;$/;"	v
xmlLoadExtDtdDefaultValue	/usr/include/libxml2/libxml/globals.h	415;"	d
xmlLoadExtDtdDefaultValue	/usr/include/libxml2/libxml/globals.h	85;"	d
xmlLoadExternalEntity	/usr/include/libxml2/libxml/parser.h	/^		xmlLoadExternalEntity	(const char *URL,$/;"	p	signature:(const char *URL, const char *ID, xmlParserCtxtPtr ctxt)
xmlLoadSGMLSuperCatalog	/usr/include/libxml2/libxml/catalog.h	/^		xmlLoadSGMLSuperCatalog	(const char *filename);$/;"	p	signature:(const char *filename)
xmlLocationSet	/usr/include/libxml2/libxml/xpointer.h	/^typedef struct _xmlLocationSet xmlLocationSet;$/;"	t	typeref:struct:_xmlLocationSet
xmlLocationSetPtr	/usr/include/libxml2/libxml/xpointer.h	/^typedef xmlLocationSet *xmlLocationSetPtr;$/;"	t
xmlLockLibrary	/usr/include/libxml2/libxml/threads.h	/^			xmlLockLibrary	(void);$/;"	p	signature:(void)
xmlLsCountNode	/usr/include/libxml2/libxml/debugXML.h	/^	xmlLsCountNode		(xmlNodePtr node);$/;"	p	signature:(xmlNodePtr node)
xmlLsOneNode	/usr/include/libxml2/libxml/debugXML.h	/^	xmlLsOneNode		(FILE *output, xmlNodePtr node);$/;"	p	signature:(FILE *output, xmlNodePtr node)
xmlMalloc	/usr/include/libxml2/libxml/globals.h	/^	xmlMallocFunc xmlMalloc;$/;"	m	struct:_xmlGlobalState	access:public
xmlMalloc	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlMallocFunc xmlMalloc;$/;"	v
xmlMalloc	/usr/include/libxml2/libxml/globals.h	204;"	d
xmlMalloc	/usr/include/libxml2/libxml/globals.h	86;"	d
xmlMalloc	/usr/include/libxml2/libxml/xmlmemory.h	179;"	d
xmlMallocAtomic	/usr/include/libxml2/libxml/globals.h	/^	xmlMallocFunc xmlMallocAtomic;$/;"	m	struct:_xmlGlobalState	access:public
xmlMallocAtomic	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlMallocFunc xmlMallocAtomic;$/;"	v
xmlMallocAtomic	/usr/include/libxml2/libxml/globals.h	212;"	d
xmlMallocAtomic	/usr/include/libxml2/libxml/globals.h	87;"	d
xmlMallocAtomic	/usr/include/libxml2/libxml/xmlmemory.h	189;"	d
xmlMallocFunc	/usr/include/libxml2/libxml/xmlmemory.h	/^typedef void *(LIBXML_ATTR_ALLOC_SIZE(1) XMLCALL *xmlMallocFunc)(size_t size);$/;"	p	signature:(size_t size)
xmlMemBlocks	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlMemBlocks	(void);$/;"	p	signature:(void)
xmlMemDisplay	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlMemDisplay	(FILE *fp);$/;"	p	signature:(FILE *fp)
xmlMemDisplayLast	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlMemDisplayLast(FILE *fp, long nbBytes);$/;"	p	signature:(FILE *fp, long nbBytes)
xmlMemFree	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlMemFree	(void *ptr);$/;"	p	signature:(void *ptr)
xmlMemGet	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlMemGet	(xmlFreeFunc *freeFunc,$/;"	p	signature:(xmlFreeFunc *freeFunc, xmlMallocFunc *mallocFunc, xmlReallocFunc *reallocFunc, xmlStrdupFunc *strdupFunc)
xmlMemRealloc	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlMemRealloc	(void *ptr,size_t size);$/;"	p	signature:(void *ptr,size_t size)
xmlMemSetup	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlMemSetup	(xmlFreeFunc freeFunc,$/;"	p	signature:(xmlFreeFunc freeFunc, xmlMallocFunc mallocFunc, xmlReallocFunc reallocFunc, xmlStrdupFunc strdupFunc)
xmlMemShow	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlMemShow	(FILE *fp, int nr);$/;"	p	signature:(FILE *fp, int nr)
xmlMemStrdup	/usr/include/libxml2/libxml/globals.h	/^	xmlStrdupFunc xmlMemStrdup;$/;"	m	struct:_xmlGlobalState	access:public
xmlMemStrdup	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlStrdupFunc xmlMemStrdup;$/;"	v
xmlMemStrdup	/usr/include/libxml2/libxml/globals.h	236;"	d
xmlMemStrdup	/usr/include/libxml2/libxml/globals.h	88;"	d
xmlMemStrdup	/usr/include/libxml2/libxml/xmlmemory.h	208;"	d
xmlMemStrdupLoc	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlMemStrdupLoc	(const char *str, const char *file, int line);$/;"	p	signature:(const char *str, const char *file, int line)
xmlMemUsed	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlMemUsed	(void);$/;"	p	signature:(void)
xmlMemoryDump	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlMemoryDump	(void);$/;"	p	signature:(void)
xmlMemoryStrdup	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlMemoryStrdup	(const char *str);$/;"	p	signature:(const char *str)
xmlModule	/usr/include/libxml2/libxml/xmlmodule.h	/^typedef struct _xmlModule xmlModule;$/;"	t	typeref:struct:_xmlModule
xmlModuleClose	/usr/include/libxml2/libxml/xmlmodule.h	/^XMLPUBFUN int XMLCALL xmlModuleClose		(xmlModulePtr module);$/;"	p	signature:(xmlModulePtr module)
xmlModuleFree	/usr/include/libxml2/libxml/xmlmodule.h	/^XMLPUBFUN int XMLCALL xmlModuleFree		(xmlModulePtr module);$/;"	p	signature:(xmlModulePtr module)
xmlModuleOpen	/usr/include/libxml2/libxml/xmlmodule.h	/^XMLPUBFUN xmlModulePtr XMLCALL xmlModuleOpen	(const char *filename,$/;"	p	signature:(const char *filename, int options)
xmlModuleOption	/usr/include/libxml2/libxml/xmlmodule.h	/^} xmlModuleOption;$/;"	t	typeref:enum:__anon20
xmlModulePtr	/usr/include/libxml2/libxml/xmlmodule.h	/^typedef xmlModule *xmlModulePtr;$/;"	t
xmlModuleSymbol	/usr/include/libxml2/libxml/xmlmodule.h	/^XMLPUBFUN int XMLCALL xmlModuleSymbol		(xmlModulePtr module,$/;"	p	signature:(xmlModulePtr module, const char* name, void **result)
xmlMutex	/usr/include/libxml2/libxml/threads.h	/^typedef struct _xmlMutex xmlMutex;$/;"	t	typeref:struct:_xmlMutex
xmlMutexLock	/usr/include/libxml2/libxml/threads.h	/^			xmlMutexLock	(xmlMutexPtr tok);$/;"	p	signature:(xmlMutexPtr tok)
xmlMutexPtr	/usr/include/libxml2/libxml/threads.h	/^typedef xmlMutex *xmlMutexPtr;$/;"	t
xmlMutexUnlock	/usr/include/libxml2/libxml/threads.h	/^			xmlMutexUnlock	(xmlMutexPtr tok);$/;"	p	signature:(xmlMutexPtr tok)
xmlNamespaceParseNCName	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlNamespaceParseNCName	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlNamespaceParseNSDef	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlNamespaceParseNSDef	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlNamespaceParseQName	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlNamespaceParseQName	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlChar **prefix)
xmlNanoFTPCheckResponse	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPCheckResponse	(void *ctx);$/;"	p	signature:(void *ctx)
xmlNanoFTPCleanup	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPCleanup	(void);$/;"	p	signature:(void)
xmlNanoFTPClose	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPClose		(void *ctx);$/;"	p	signature:(void *ctx)
xmlNanoFTPCloseConnection	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPCloseConnection(void *ctx);$/;"	p	signature:(void *ctx)
xmlNanoFTPConnect	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPConnect	(void *ctx);$/;"	p	signature:(void *ctx)
xmlNanoFTPConnectTo	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPConnectTo	(const char *server,$/;"	p	signature:(const char *server, int port)
xmlNanoFTPCwd	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPCwd		(void *ctx,$/;"	p	signature:(void *ctx, const char *directory)
xmlNanoFTPDele	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPDele		(void *ctx,$/;"	p	signature:(void *ctx, const char *file)
xmlNanoFTPFreeCtxt	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPFreeCtxt	(void * ctx);$/;"	p	signature:(void * ctx)
xmlNanoFTPGet	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPGet		(void *ctx,$/;"	p	signature:(void *ctx, ftpDataCallback callback, void *userData, const char *filename)
xmlNanoFTPGetConnection	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPGetConnection	(void *ctx);$/;"	p	signature:(void *ctx)
xmlNanoFTPGetResponse	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPGetResponse	(void *ctx);$/;"	p	signature:(void *ctx)
xmlNanoFTPGetSocket	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPGetSocket	(void *ctx,$/;"	p	signature:(void *ctx, const char *filename)
xmlNanoFTPInit	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPInit		(void);$/;"	p	signature:(void)
xmlNanoFTPList	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPList		(void *ctx,$/;"	p	signature:(void *ctx, ftpListCallback callback, void *userData, const char *filename)
xmlNanoFTPNewCtxt	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPNewCtxt	(const char *URL);$/;"	p	signature:(const char *URL)
xmlNanoFTPOpen	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPOpen		(const char *URL);$/;"	p	signature:(const char *URL)
xmlNanoFTPProxy	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPProxy		(const char *host,$/;"	p	signature:(const char *host, int port, const char *user, const char *passwd, int type)
xmlNanoFTPQuit	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPQuit		(void *ctx);$/;"	p	signature:(void *ctx)
xmlNanoFTPRead	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPRead		(void *ctx,$/;"	p	signature:(void *ctx, void *dest, int len)
xmlNanoFTPScanProxy	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPScanProxy	(const char *URL);$/;"	p	signature:(const char *URL)
xmlNanoFTPUpdateURL	/usr/include/libxml2/libxml/nanoftp.h	/^	xmlNanoFTPUpdateURL	(void *ctx,$/;"	p	signature:(void *ctx, const char *URL)
xmlNanoHTTPAuthHeader	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPAuthHeader	(void *ctx);$/;"	p	signature:(void *ctx)
xmlNanoHTTPCleanup	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPCleanup	(void);$/;"	p	signature:(void)
xmlNanoHTTPClose	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPClose	(void *ctx);$/;"	p	signature:(void *ctx)
xmlNanoHTTPContentLength	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPContentLength( void * ctx );$/;"	p	signature:( void * ctx )
xmlNanoHTTPEncoding	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPEncoding	(void *ctx);$/;"	p	signature:(void *ctx)
xmlNanoHTTPFetch	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPFetch	(const char *URL,$/;"	p	signature:(const char *URL, const char *filename, char **contentType)
xmlNanoHTTPInit	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPInit		(void);$/;"	p	signature:(void)
xmlNanoHTTPMethod	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPMethod	(const char *URL,$/;"	p	signature:(const char *URL, const char *method, const char *input, char **contentType, const char *headers, int ilen)
xmlNanoHTTPMethodRedir	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPMethodRedir	(const char *URL,$/;"	p	signature:(const char *URL, const char *method, const char *input, char **contentType, char **redir, const char *headers, int ilen)
xmlNanoHTTPMimeType	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPMimeType	(void *ctx);$/;"	p	signature:(void *ctx)
xmlNanoHTTPOpen	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPOpen		(const char *URL,$/;"	p	signature:(const char *URL, char **contentType)
xmlNanoHTTPOpenRedir	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPOpenRedir	(const char *URL,$/;"	p	signature:(const char *URL, char **contentType, char **redir)
xmlNanoHTTPRead	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPRead		(void *ctx,$/;"	p	signature:(void *ctx, void *dest, int len)
xmlNanoHTTPRedir	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPRedir	(void *ctx);$/;"	p	signature:(void *ctx)
xmlNanoHTTPReturnCode	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPReturnCode	(void *ctx);$/;"	p	signature:(void *ctx)
xmlNanoHTTPSave	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPSave		(void *ctxt,$/;"	p	signature:(void *ctxt, const char *filename)
xmlNanoHTTPScanProxy	/usr/include/libxml2/libxml/nanohttp.h	/^	xmlNanoHTTPScanProxy	(const char *URL);$/;"	p	signature:(const char *URL)
xmlNewAutomata	/usr/include/libxml2/libxml/xmlautomata.h	/^		    xmlNewAutomata		(void);$/;"	p	signature:(void)
xmlNewCDataBlock	/usr/include/libxml2/libxml/tree.h	/^		xmlNewCDataBlock	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *content, int len)
xmlNewCatalog	/usr/include/libxml2/libxml/catalog.h	/^		xmlNewCatalog		(int sgml);$/;"	p	signature:(int sgml)
xmlNewCharEncodingHandler	/usr/include/libxml2/libxml/encoding.h	/^	xmlNewCharEncodingHandler	(const char *name, $/;"	p	signature:(const char *name, xmlCharEncodingInputFunc input, xmlCharEncodingOutputFunc output)
xmlNewCharRef	/usr/include/libxml2/libxml/tree.h	/^		xmlNewCharRef		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *name)
xmlNewChild	/usr/include/libxml2/libxml/tree.h	/^		xmlNewChild		(xmlNodePtr parent,$/;"	p	signature:(xmlNodePtr parent, xmlNsPtr ns, const xmlChar *name, const xmlChar *content)
xmlNewComment	/usr/include/libxml2/libxml/tree.h	/^		xmlNewComment		(const xmlChar *content);$/;"	p	signature:(const xmlChar *content)
xmlNewDoc	/usr/include/libxml2/libxml/tree.h	/^		xmlNewDoc		(const xmlChar *version);$/;"	p	signature:(const xmlChar *version)
xmlNewDocComment	/usr/include/libxml2/libxml/tree.h	/^		xmlNewDocComment	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *content)
xmlNewDocElementContent	/usr/include/libxml2/libxml/valid.h	/^		xmlNewDocElementContent	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *name, xmlElementContentType type)
xmlNewDocFragment	/usr/include/libxml2/libxml/tree.h	/^		xmlNewDocFragment	(xmlDocPtr doc);$/;"	p	signature:(xmlDocPtr doc)
xmlNewDocNode	/usr/include/libxml2/libxml/tree.h	/^		xmlNewDocNode		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNsPtr ns, const xmlChar *name, const xmlChar *content)
xmlNewDocNodeEatName	/usr/include/libxml2/libxml/tree.h	/^		xmlNewDocNodeEatName	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNsPtr ns, xmlChar *name, const xmlChar *content)
xmlNewDocPI	/usr/include/libxml2/libxml/tree.h	/^		xmlNewDocPI		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *name, const xmlChar *content)
xmlNewDocProp	/usr/include/libxml2/libxml/tree.h	/^		xmlNewDocProp		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *name, const xmlChar *value)
xmlNewDocRawNode	/usr/include/libxml2/libxml/tree.h	/^		xmlNewDocRawNode	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNsPtr ns, const xmlChar *name, const xmlChar *content)
xmlNewDocText	/usr/include/libxml2/libxml/tree.h	/^		xmlNewDocText		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *content)
xmlNewDocTextLen	/usr/include/libxml2/libxml/tree.h	/^		xmlNewDocTextLen	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *content, int len)
xmlNewDtd	/usr/include/libxml2/libxml/tree.h	/^		xmlNewDtd		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *name, const xmlChar *ExternalID, const xmlChar *SystemID)
xmlNewElementContent	/usr/include/libxml2/libxml/valid.h	/^		xmlNewElementContent	(const xmlChar *name,$/;"	p	signature:(const xmlChar *name, xmlElementContentType type)
xmlNewEntity	/usr/include/libxml2/libxml/entities.h	/^			xmlNewEntity		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *name, int type, const xmlChar *ExternalID, const xmlChar *SystemID, const xmlChar *content)
xmlNewEntityInputStream	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlNewEntityInputStream	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlEntityPtr entity)
xmlNewGlobalNs	/usr/include/libxml2/libxml/tree.h	/^		xmlNewGlobalNs		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *href, const xmlChar *prefix)
xmlNewIOInputStream	/usr/include/libxml2/libxml/parser.h	/^		xmlNewIOInputStream	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlParserInputBufferPtr input, xmlCharEncoding enc)
xmlNewInputFromFile	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlNewInputFromFile	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const char *filename)
xmlNewInputStream	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlNewInputStream	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlNewMutex	/usr/include/libxml2/libxml/threads.h	/^			xmlNewMutex	(void);$/;"	p	signature:(void)
xmlNewNode	/usr/include/libxml2/libxml/tree.h	/^		xmlNewNode		(xmlNsPtr ns,$/;"	p	signature:(xmlNsPtr ns, const xmlChar *name)
xmlNewNodeEatName	/usr/include/libxml2/libxml/tree.h	/^		xmlNewNodeEatName	(xmlNsPtr ns,$/;"	p	signature:(xmlNsPtr ns, xmlChar *name)
xmlNewNs	/usr/include/libxml2/libxml/tree.h	/^		xmlNewNs		(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, const xmlChar *href, const xmlChar *prefix)
xmlNewNsProp	/usr/include/libxml2/libxml/tree.h	/^		xmlNewNsProp		(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, xmlNsPtr ns, const xmlChar *name, const xmlChar *value)
xmlNewNsPropEatName	/usr/include/libxml2/libxml/tree.h	/^		xmlNewNsPropEatName	(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, xmlNsPtr ns, xmlChar *name, const xmlChar *value)
xmlNewPI	/usr/include/libxml2/libxml/tree.h	/^		xmlNewPI		(const xmlChar *name,$/;"	p	signature:(const xmlChar *name, const xmlChar *content)
xmlNewParserCtxt	/usr/include/libxml2/libxml/parser.h	/^		xmlNewParserCtxt	(void);$/;"	p	signature:(void)
xmlNewProp	/usr/include/libxml2/libxml/tree.h	/^		xmlNewProp		(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, const xmlChar *name, const xmlChar *value)
xmlNewRMutex	/usr/include/libxml2/libxml/threads.h	/^			xmlNewRMutex	(void);$/;"	p	signature:(void)
xmlNewReference	/usr/include/libxml2/libxml/tree.h	/^		xmlNewReference		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *name)
xmlNewStringInputStream	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlNewStringInputStream	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const xmlChar *buffer)
xmlNewText	/usr/include/libxml2/libxml/tree.h	/^		xmlNewText		(const xmlChar *content);$/;"	p	signature:(const xmlChar *content)
xmlNewTextChild	/usr/include/libxml2/libxml/tree.h	/^		xmlNewTextChild		(xmlNodePtr parent,$/;"	p	signature:(xmlNodePtr parent, xmlNsPtr ns, const xmlChar *name, const xmlChar *content)
xmlNewTextLen	/usr/include/libxml2/libxml/tree.h	/^		xmlNewTextLen		(const xmlChar *content,$/;"	p	signature:(const xmlChar *content, int len)
xmlNewTextReader	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlNewTextReader	(xmlParserInputBufferPtr input,$/;"	p	signature:(xmlParserInputBufferPtr input, const char *URI)
xmlNewTextReaderFilename	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlNewTextReaderFilename(const char *URI);$/;"	p	signature:(const char *URI)
xmlNewTextWriter	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlNewTextWriter(xmlOutputBufferPtr out);$/;"	p	signature:(xmlOutputBufferPtr out)
xmlNewTextWriterDoc	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlNewTextWriterDoc(xmlDocPtr * doc, int compression);$/;"	p	signature:(xmlDocPtr * doc, int compression)
xmlNewTextWriterFilename	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlNewTextWriterFilename(const char *uri, int compression);$/;"	p	signature:(const char *uri, int compression)
xmlNewTextWriterMemory	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlNewTextWriterMemory(xmlBufferPtr buf, int compression);$/;"	p	signature:(xmlBufferPtr buf, int compression)
xmlNewTextWriterPushParser	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlNewTextWriterPushParser(xmlParserCtxtPtr ctxt, int compression);$/;"	p	signature:(xmlParserCtxtPtr ctxt, int compression)
xmlNewTextWriterTree	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlNewTextWriterTree(xmlDocPtr doc, xmlNodePtr node,$/;"	p	signature:(xmlDocPtr doc, xmlNodePtr node, int compression)
xmlNewValidCtxt	/usr/include/libxml2/libxml/valid.h	/^		xmlNewValidCtxt(void);$/;"	p	signature:(void)
xmlNextChar	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN void XMLCALL			xmlNextChar		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlNextElementSibling	/usr/include/libxml2/libxml/tree.h	/^            xmlNextElementSibling       (xmlNodePtr node);$/;"	p	signature:(xmlNodePtr node)
xmlNoNetExternalEntityLoader	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlNoNetExternalEntityLoader	(const char *URL,$/;"	p	signature:(const char *URL, const char *ID, xmlParserCtxtPtr ctxt)
xmlNode	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlNode xmlNode;$/;"	t	typeref:struct:_xmlNode
xmlNodeAddContent	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeAddContent	(xmlNodePtr cur,$/;"	p	signature:(xmlNodePtr cur, const xmlChar *content)
xmlNodeAddContentLen	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeAddContentLen	(xmlNodePtr cur,$/;"	p	signature:(xmlNodePtr cur, const xmlChar *content, int len)
xmlNodeBufGetContent	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeBufGetContent	(xmlBufferPtr buffer,$/;"	p	signature:(xmlBufferPtr buffer, xmlNodePtr cur)
xmlNodeDump	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeDump		(xmlBufferPtr buf,$/;"	p	signature:(xmlBufferPtr buf, xmlDocPtr doc, xmlNodePtr cur, int level, int format)
xmlNodeDumpOutput	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeDumpOutput	(xmlOutputBufferPtr buf,$/;"	p	signature:(xmlOutputBufferPtr buf, xmlDocPtr doc, xmlNodePtr cur, int level, int format, const char *encoding)
xmlNodeGetBase	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeGetBase		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodePtr cur)
xmlNodeGetContent	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeGetContent	(xmlNodePtr cur);$/;"	p	signature:(xmlNodePtr cur)
xmlNodeGetLang	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeGetLang		(xmlNodePtr cur);$/;"	p	signature:(xmlNodePtr cur)
xmlNodeGetSpacePreserve	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeGetSpacePreserve	(xmlNodePtr cur);$/;"	p	signature:(xmlNodePtr cur)
xmlNodeIsText	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeIsText		(xmlNodePtr node);$/;"	p	signature:(xmlNodePtr node)
xmlNodeListGetRawString	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeListGetRawString	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodePtr list, int inLine)
xmlNodeListGetString	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeListGetString	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodePtr list, int inLine)
xmlNodePtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlNode *xmlNodePtr;$/;"	t
xmlNodeSet	/usr/include/libxml2/libxml/xpath.h	/^typedef struct _xmlNodeSet xmlNodeSet;$/;"	t	typeref:struct:_xmlNodeSet
xmlNodeSetBase	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeSetBase		(xmlNodePtr cur,$/;"	p	signature:(xmlNodePtr cur, const xmlChar *uri)
xmlNodeSetContent	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeSetContent	(xmlNodePtr cur,$/;"	p	signature:(xmlNodePtr cur, const xmlChar *content)
xmlNodeSetContentLen	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeSetContentLen	(xmlNodePtr cur,$/;"	p	signature:(xmlNodePtr cur, const xmlChar *content, int len)
xmlNodeSetLang	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeSetLang		(xmlNodePtr cur,$/;"	p	signature:(xmlNodePtr cur, const xmlChar *lang)
xmlNodeSetName	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeSetName		(xmlNodePtr cur,$/;"	p	signature:(xmlNodePtr cur, const xmlChar *name)
xmlNodeSetPtr	/usr/include/libxml2/libxml/xpath.h	/^typedef xmlNodeSet *xmlNodeSetPtr;$/;"	t
xmlNodeSetSpacePreserve	/usr/include/libxml2/libxml/tree.h	/^		xmlNodeSetSpacePreserve (xmlNodePtr cur,$/;"	p	signature:(xmlNodePtr cur, int val)
xmlNormalizeURIPath	/usr/include/libxml2/libxml/uri.h	/^		xmlNormalizeURIPath	(char *path);$/;"	p	signature:(char *path)
xmlNormalizeWindowsPath	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlNormalizeWindowsPath		(const xmlChar *path);$/;"	p	signature:(const xmlChar *path)
xmlNotation	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlNotation xmlNotation;$/;"	t	typeref:struct:_xmlNotation
xmlNotationPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlNotation *xmlNotationPtr;$/;"	t
xmlNotationTable	/usr/include/libxml2/libxml/valid.h	/^typedef struct _xmlHashTable xmlNotationTable;$/;"	t	typeref:struct:_xmlHashTable
xmlNotationTablePtr	/usr/include/libxml2/libxml/valid.h	/^typedef xmlNotationTable *xmlNotationTablePtr;$/;"	t
xmlNs	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlNs xmlNs;$/;"	t	typeref:struct:_xmlNs
xmlNsPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlNs *xmlNsPtr;$/;"	t
xmlNsType	/usr/include/libxml2/libxml/tree.h	/^typedef xmlElementType xmlNsType;$/;"	t
xmlOutputBuffer	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlOutputBuffer xmlOutputBuffer;$/;"	t	typeref:struct:_xmlOutputBuffer
xmlOutputBufferClose	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlOutputBufferClose		(xmlOutputBufferPtr out);$/;"	p	signature:(xmlOutputBufferPtr out)
xmlOutputBufferCreateBuffer	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlOutputBufferCreateBuffer	(xmlBufferPtr buffer,$/;"	p	signature:(xmlBufferPtr buffer, xmlCharEncodingHandlerPtr encoder)
xmlOutputBufferCreateFd	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlOutputBufferCreateFd		(int fd,$/;"	p	signature:(int fd, xmlCharEncodingHandlerPtr encoder)
xmlOutputBufferCreateFile	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlOutputBufferCreateFile	(FILE *file,$/;"	p	signature:(FILE *file, xmlCharEncodingHandlerPtr encoder)
xmlOutputBufferCreateFilename	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlOutputBufferCreateFilename	(const char *URI,$/;"	p	signature:(const char *URI, xmlCharEncodingHandlerPtr encoder, int compression)
xmlOutputBufferCreateFilenameDefault	/usr/include/libxml2/libxml/globals.h	/^XMLCALL xmlOutputBufferCreateFilenameDefault (xmlOutputBufferCreateFilenameFunc func);$/;"	p	signature:(xmlOutputBufferCreateFilenameFunc func)
xmlOutputBufferCreateFilenameFunc	/usr/include/libxml2/libxml/globals.h	/^typedef xmlOutputBufferPtr (*xmlOutputBufferCreateFilenameFunc) (const char *URI, xmlCharEncodingHandlerPtr encoder, int compression);$/;"	t
xmlOutputBufferCreateFilenameValue	/usr/include/libxml2/libxml/globals.h	/^	xmlOutputBufferCreateFilenameFunc xmlOutputBufferCreateFilenameValue;$/;"	m	struct:_xmlGlobalState	access:public
xmlOutputBufferCreateFilenameValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlOutputBufferCreateFilenameFunc xmlOutputBufferCreateFilenameValue;$/;"	v
xmlOutputBufferCreateFilenameValue	/usr/include/libxml2/libxml/globals.h	492;"	d
xmlOutputBufferCreateFilenameValue	/usr/include/libxml2/libxml/globals.h	99;"	d
xmlOutputBufferCreateIO	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlOutputBufferCreateIO		(xmlOutputWriteCallback   iowrite,$/;"	p	signature:(xmlOutputWriteCallback iowrite, xmlOutputCloseCallback ioclose, void *ioctx, xmlCharEncodingHandlerPtr encoder)
xmlOutputBufferFlush	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlOutputBufferFlush		(xmlOutputBufferPtr out);$/;"	p	signature:(xmlOutputBufferPtr out)
xmlOutputBufferPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlOutputBuffer *xmlOutputBufferPtr;$/;"	t
xmlOutputBufferWrite	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlOutputBufferWrite		(xmlOutputBufferPtr out,$/;"	p	signature:(xmlOutputBufferPtr out, int len, const char *buf)
xmlOutputBufferWriteEscape	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlOutputBufferWriteEscape	(xmlOutputBufferPtr out,$/;"	p	signature:(xmlOutputBufferPtr out, const xmlChar *str, xmlCharEncodingOutputFunc escaping)
xmlOutputBufferWriteString	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlOutputBufferWriteString	(xmlOutputBufferPtr out,$/;"	p	signature:(xmlOutputBufferPtr out, const char *str)
xmlOutputCloseCallback	/usr/include/libxml2/libxml/xmlIO.h	/^typedef int (XMLCALL *xmlOutputCloseCallback) (void * context);$/;"	t
xmlOutputMatchCallback	/usr/include/libxml2/libxml/xmlIO.h	/^typedef int (XMLCALL *xmlOutputMatchCallback) (char const *filename);$/;"	t
xmlOutputOpenCallback	/usr/include/libxml2/libxml/xmlIO.h	/^typedef void * (XMLCALL *xmlOutputOpenCallback) (char const *filename);$/;"	t
xmlOutputWriteCallback	/usr/include/libxml2/libxml/xmlIO.h	/^typedef int (XMLCALL *xmlOutputWriteCallback) (void * context, const char * buffer,$/;"	t
xmlParseAttValue	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseAttValue	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseAttribute	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseAttribute	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlChar **value)
xmlParseAttributeListDecl	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseAttributeListDecl(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseAttributeType	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseAttributeType	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlEnumerationPtr *tree)
xmlParseBalancedChunkMemory	/usr/include/libxml2/libxml/parser.h	/^		xmlParseBalancedChunkMemory(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlSAXHandlerPtr sax, void *user_data, int depth, const xmlChar *string, xmlNodePtr *lst)
xmlParseBalancedChunkMemoryRecover	/usr/include/libxml2/libxml/parser.h	/^		xmlParseBalancedChunkMemoryRecover(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlSAXHandlerPtr sax, void *user_data, int depth, const xmlChar *string, xmlNodePtr *lst, int recover)
xmlParseCDSect	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseCDSect		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseCatalogFile	/usr/include/libxml2/libxml/catalog.h	/^		xmlParseCatalogFile	(const char *filename);$/;"	p	signature:(const char *filename)
xmlParseCharData	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseCharData	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, int cdata)
xmlParseCharEncoding	/usr/include/libxml2/libxml/encoding.h	/^	xmlParseCharEncoding		(const char *name);$/;"	p	signature:(const char *name)
xmlParseCharRef	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseCharRef		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseChunk	/usr/include/libxml2/libxml/parser.h	/^		xmlParseChunk		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const char *chunk, int size, int terminate)
xmlParseComment	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseComment		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseContent	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseContent		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseCtxtExternalEntity	/usr/include/libxml2/libxml/parser.h	/^		xmlParseCtxtExternalEntity(xmlParserCtxtPtr ctx,$/;"	p	signature:(xmlParserCtxtPtr ctx, const xmlChar *URL, const xmlChar *ID, xmlNodePtr *lst)
xmlParseDTD	/usr/include/libxml2/libxml/parser.h	/^		xmlParseDTD		(const xmlChar *ExternalID,$/;"	p	signature:(const xmlChar *ExternalID, const xmlChar *SystemID)
xmlParseDefaultDecl	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseDefaultDecl	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlChar **value)
xmlParseDoc	/usr/include/libxml2/libxml/parser.h	/^		xmlParseDoc		(const xmlChar *cur);$/;"	p	signature:(const xmlChar *cur)
xmlParseDocTypeDecl	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseDocTypeDecl	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseDocument	/usr/include/libxml2/libxml/parser.h	/^		xmlParseDocument	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseElement	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseElement		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseElementChildrenContentDecl	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseElementChildrenContentDecl$/;"	p	signature:(xmlParserCtxtPtr ctxt, int inputchk)
xmlParseElementContentDecl	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseElementContentDecl(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const xmlChar *name, xmlElementContentPtr *result)
xmlParseElementDecl	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseElementDecl	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseElementMixedContentDecl	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseElementMixedContentDecl$/;"	p	signature:(xmlParserCtxtPtr ctxt, int inputchk)
xmlParseEncName	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseEncName		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseEncodingDecl	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseEncodingDecl	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseEndTag	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseEndTag		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseEntity	/usr/include/libxml2/libxml/parser.h	/^		xmlParseEntity		(const char *filename);$/;"	p	signature:(const char *filename)
xmlParseEntityDecl	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseEntityDecl	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseEntityRef	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseEntityRef	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseEntityValue	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseEntityValue	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlChar **orig)
xmlParseEnumeratedType	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseEnumeratedType	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlEnumerationPtr *tree)
xmlParseEnumerationType	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseEnumerationType	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseExtParsedEnt	/usr/include/libxml2/libxml/parser.h	/^		xmlParseExtParsedEnt	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseExternalEntity	/usr/include/libxml2/libxml/parser.h	/^		xmlParseExternalEntity	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlSAXHandlerPtr sax, void *user_data, int depth, const xmlChar *URL, const xmlChar *ID, xmlNodePtr *lst)
xmlParseExternalID	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseExternalID	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlChar **publicID, int strict)
xmlParseExternalSubset	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseExternalSubset	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const xmlChar *ExternalID, const xmlChar *SystemID)
xmlParseFile	/usr/include/libxml2/libxml/parser.h	/^		xmlParseFile		(const char *filename);$/;"	p	signature:(const char *filename)
xmlParseInNodeContext	/usr/include/libxml2/libxml/parser.h	/^		xmlParseInNodeContext	(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, const char *data, int datalen, int options, xmlNodePtr *lst)
xmlParseMarkupDecl	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseMarkupDecl	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseMemory	/usr/include/libxml2/libxml/parser.h	/^		xmlParseMemory		(const char *buffer,$/;"	p	signature:(const char *buffer, int size)
xmlParseMisc	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseMisc		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseName	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseName		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseNamespace	/usr/include/libxml2/libxml/parserInternals.h	/^                        xmlParseNamespace       (xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseNmtoken	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseNmtoken		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseNotationDecl	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseNotationDecl	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseNotationType	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseNotationType	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParsePEReference	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParsePEReference	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParsePI	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParsePI		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParsePITarget	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParsePITarget	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParsePubidLiteral	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParsePubidLiteral	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseQuotedString	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseQuotedString	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseReference	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseReference	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseSDDecl	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseSDDecl		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseStartTag	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseStartTag	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseSystemLiteral	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseSystemLiteral	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseTextDecl	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseTextDecl	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseURI	/usr/include/libxml2/libxml/uri.h	/^		xmlParseURI		(const char *str);$/;"	p	signature:(const char *str)
xmlParseURIRaw	/usr/include/libxml2/libxml/uri.h	/^		xmlParseURIRaw		(const char *str,$/;"	p	signature:(const char *str, int raw)
xmlParseURIReference	/usr/include/libxml2/libxml/uri.h	/^		xmlParseURIReference	(xmlURIPtr uri,$/;"	p	signature:(xmlURIPtr uri, const char *str)
xmlParseVersionInfo	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseVersionInfo	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseVersionNum	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseVersionNum	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParseXMLDecl	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlParseXMLDecl		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParserAddNodeInfo	/usr/include/libxml2/libxml/parser.h	/^		xmlParserAddNodeInfo	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const xmlParserNodeInfoPtr info)
xmlParserCtxt	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlParserCtxt xmlParserCtxt;$/;"	t	typeref:struct:_xmlParserCtxt
xmlParserCtxtPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlParserCtxt *xmlParserCtxtPtr;$/;"	t
xmlParserDebugEntities	/usr/include/libxml2/libxml/globals.h	/^	int xmlParserDebugEntities;$/;"	m	struct:_xmlGlobalState	access:public
xmlParserDebugEntities	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR int xmlParserDebugEntities;$/;"	v
xmlParserDebugEntities	/usr/include/libxml2/libxml/globals.h	424;"	d
xmlParserDebugEntities	/usr/include/libxml2/libxml/globals.h	89;"	d
xmlParserErrors	/usr/include/libxml2/libxml/xmlerror.h	/^} xmlParserErrors;$/;"	t	typeref:enum:__anon44
xmlParserFindNodeInfo	/usr/include/libxml2/libxml/parser.h	/^		xmlParserFindNodeInfo	(const xmlParserCtxtPtr ctxt,$/;"	p	signature:(const xmlParserCtxtPtr ctxt, const xmlNodePtr node)
xmlParserFindNodeInfoIndex	/usr/include/libxml2/libxml/parser.h	/^		xmlParserFindNodeInfoIndex(const xmlParserNodeInfoSeqPtr seq,$/;"	p	signature:(const xmlParserNodeInfoSeqPtr seq, const xmlNodePtr node)
xmlParserGetDirectory	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlParserGetDirectory			(const char *filename);$/;"	p	signature:(const char *filename)
xmlParserHandlePEReference	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN void XMLCALL			xmlParserHandlePEReference(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParserHandleReference	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN void XMLCALL	xmlParserHandleReference(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlParserInput	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlParserInput xmlParserInput;$/;"	t	typeref:struct:_xmlParserInput
xmlParserInputBuffer	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlParserInputBuffer xmlParserInputBuffer;$/;"	t	typeref:struct:_xmlParserInputBuffer
xmlParserInputBufferCreateFd	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlParserInputBufferCreateFd		(int fd,$/;"	p	signature:(int fd, xmlCharEncoding enc)
xmlParserInputBufferCreateFile	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlParserInputBufferCreateFile		(FILE *file,$/;"	p	signature:(FILE *file, xmlCharEncoding enc)
xmlParserInputBufferCreateFilename	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlParserInputBufferCreateFilename	(const char *URI,$/;"	p	signature:(const char *URI, xmlCharEncoding enc)
xmlParserInputBufferCreateFilenameDefault	/usr/include/libxml2/libxml/globals.h	/^XMLCALL xmlParserInputBufferCreateFilenameDefault (xmlParserInputBufferCreateFilenameFunc func);$/;"	p	signature:(xmlParserInputBufferCreateFilenameFunc func)
xmlParserInputBufferCreateFilenameFunc	/usr/include/libxml2/libxml/globals.h	/^typedef xmlParserInputBufferPtr (*xmlParserInputBufferCreateFilenameFunc) (const char *URI, xmlCharEncoding enc);$/;"	t
xmlParserInputBufferCreateFilenameValue	/usr/include/libxml2/libxml/globals.h	/^	xmlParserInputBufferCreateFilenameFunc xmlParserInputBufferCreateFilenameValue;$/;"	m	struct:_xmlGlobalState	access:public
xmlParserInputBufferCreateFilenameValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlParserInputBufferCreateFilenameFunc xmlParserInputBufferCreateFilenameValue;$/;"	v
xmlParserInputBufferCreateFilenameValue	/usr/include/libxml2/libxml/globals.h	484;"	d
xmlParserInputBufferCreateFilenameValue	/usr/include/libxml2/libxml/globals.h	98;"	d
xmlParserInputBufferCreateIO	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlParserInputBufferCreateIO		(xmlInputReadCallback   ioread,$/;"	p	signature:(xmlInputReadCallback ioread, xmlInputCloseCallback ioclose, void *ioctx, xmlCharEncoding enc)
xmlParserInputBufferCreateMem	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlParserInputBufferCreateMem		(const char *mem, int size,$/;"	p	signature:(const char *mem, int size, xmlCharEncoding enc)
xmlParserInputBufferCreateStatic	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlParserInputBufferCreateStatic	(const char *mem, int size,$/;"	p	signature:(const char *mem, int size, xmlCharEncoding enc)
xmlParserInputBufferGrow	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlParserInputBufferGrow		(xmlParserInputBufferPtr in,$/;"	p	signature:(xmlParserInputBufferPtr in, int len)
xmlParserInputBufferPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlParserInputBuffer *xmlParserInputBufferPtr;$/;"	t
xmlParserInputBufferPush	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlParserInputBufferPush		(xmlParserInputBufferPtr in,$/;"	p	signature:(xmlParserInputBufferPtr in, int len, const char *buf)
xmlParserInputBufferRead	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlParserInputBufferRead		(xmlParserInputBufferPtr in,$/;"	p	signature:(xmlParserInputBufferPtr in, int len)
xmlParserInputDeallocate	/usr/include/libxml2/libxml/parser.h	/^typedef void (* xmlParserInputDeallocate)(xmlChar *str);$/;"	t
xmlParserInputGrow	/usr/include/libxml2/libxml/parser.h	/^		xmlParserInputGrow	(xmlParserInputPtr in,$/;"	p	signature:(xmlParserInputPtr in, int len)
xmlParserInputPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlParserInput *xmlParserInputPtr;$/;"	t
xmlParserInputRead	/usr/include/libxml2/libxml/parser.h	/^		xmlParserInputRead	(xmlParserInputPtr in,$/;"	p	signature:(xmlParserInputPtr in, int len)
xmlParserInputShrink	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN void XMLCALL			xmlParserInputShrink	(xmlParserInputPtr in);$/;"	p	signature:(xmlParserInputPtr in)
xmlParserInputState	/usr/include/libxml2/libxml/parser.h	/^} xmlParserInputState;$/;"	t	typeref:enum:__anon6
xmlParserMaxDepth	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBVAR unsigned int xmlParserMaxDepth;$/;"	v
xmlParserMode	/usr/include/libxml2/libxml/parser.h	/^} xmlParserMode;$/;"	t	typeref:enum:__anon7
xmlParserNodeInfo	/usr/include/libxml2/libxml/parser.h	/^typedef struct _xmlParserNodeInfo xmlParserNodeInfo;$/;"	t	typeref:struct:_xmlParserNodeInfo
xmlParserNodeInfoPtr	/usr/include/libxml2/libxml/parser.h	/^typedef xmlParserNodeInfo *xmlParserNodeInfoPtr;$/;"	t
xmlParserNodeInfoSeq	/usr/include/libxml2/libxml/parser.h	/^typedef struct _xmlParserNodeInfoSeq xmlParserNodeInfoSeq;$/;"	t	typeref:struct:_xmlParserNodeInfoSeq
xmlParserNodeInfoSeqPtr	/usr/include/libxml2/libxml/parser.h	/^typedef xmlParserNodeInfoSeq *xmlParserNodeInfoSeqPtr;$/;"	t
xmlParserOption	/usr/include/libxml2/libxml/parser.h	/^} xmlParserOption;$/;"	t	typeref:enum:__anon8
xmlParserPrintFileContext	/usr/include/libxml2/libxml/xmlerror.h	/^    xmlParserPrintFileContext	(xmlParserInputPtr input);$/;"	p	signature:(xmlParserInputPtr input)
xmlParserPrintFileInfo	/usr/include/libxml2/libxml/xmlerror.h	/^    xmlParserPrintFileInfo	(xmlParserInputPtr input);$/;"	p	signature:(xmlParserInputPtr input)
xmlParserProperties	/usr/include/libxml2/libxml/xmlreader.h	/^} xmlParserProperties;$/;"	t	typeref:enum:__anon15
xmlParserSeverities	/usr/include/libxml2/libxml/xmlreader.h	/^} xmlParserSeverities;$/;"	t	typeref:enum:__anon13
xmlParserVersion	/usr/include/libxml2/libxml/globals.h	/^	const char *xmlParserVersion;$/;"	m	struct:_xmlGlobalState	access:public
xmlParserVersion	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR const char * xmlParserVersion;$/;"	v
xmlParserVersion	/usr/include/libxml2/libxml/globals.h	433;"	d
xmlParserVersion	/usr/include/libxml2/libxml/globals.h	90;"	d
xmlPathToURI	/usr/include/libxml2/libxml/uri.h	/^		xmlPathToURI		(const xmlChar *path);$/;"	p	signature:(const xmlChar *path)
xmlPattern	/usr/include/libxml2/libxml/pattern.h	/^typedef struct _xmlPattern xmlPattern;$/;"	t	typeref:struct:_xmlPattern
xmlPatternFlags	/usr/include/libxml2/libxml/pattern.h	/^} xmlPatternFlags;$/;"	t	typeref:enum:__anon40
xmlPatternFromRoot	/usr/include/libxml2/libxml/pattern.h	/^			xmlPatternFromRoot	(xmlPatternPtr comp);$/;"	p	signature:(xmlPatternPtr comp)
xmlPatternGetStreamCtxt	/usr/include/libxml2/libxml/pattern.h	/^			xmlPatternGetStreamCtxt	(xmlPatternPtr comp);$/;"	p	signature:(xmlPatternPtr comp)
xmlPatternMatch	/usr/include/libxml2/libxml/pattern.h	/^			xmlPatternMatch		(xmlPatternPtr comp,$/;"	p	signature:(xmlPatternPtr comp, xmlNodePtr node)
xmlPatternMaxDepth	/usr/include/libxml2/libxml/pattern.h	/^			xmlPatternMaxDepth	(xmlPatternPtr comp);$/;"	p	signature:(xmlPatternPtr comp)
xmlPatternMinDepth	/usr/include/libxml2/libxml/pattern.h	/^			xmlPatternMinDepth	(xmlPatternPtr comp);$/;"	p	signature:(xmlPatternPtr comp)
xmlPatternPtr	/usr/include/libxml2/libxml/pattern.h	/^typedef xmlPattern *xmlPatternPtr;$/;"	t
xmlPatternStreamable	/usr/include/libxml2/libxml/pattern.h	/^			xmlPatternStreamable	(xmlPatternPtr comp);$/;"	p	signature:(xmlPatternPtr comp)
xmlPatterncompile	/usr/include/libxml2/libxml/pattern.h	/^			xmlPatterncompile	(const xmlChar *pattern,$/;"	p	signature:(const xmlChar *pattern, xmlDict *dict, int flags, const xmlChar **namespaces)
xmlPedanticParserDefault	/usr/include/libxml2/libxml/parser.h	/^		xmlPedanticParserDefault(int val);$/;"	p	signature:(int val)
xmlPedanticParserDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	int xmlPedanticParserDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
xmlPedanticParserDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR int xmlPedanticParserDefaultValue;$/;"	v
xmlPedanticParserDefaultValue	/usr/include/libxml2/libxml/globals.h	441;"	d
xmlPedanticParserDefaultValue	/usr/include/libxml2/libxml/globals.h	91;"	d
xmlPopInput	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlPopInput		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlPopInputCallbacks	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlPopInputCallbacks			(void);$/;"	p	signature:(void)
xmlPreviousElementSibling	/usr/include/libxml2/libxml/tree.h	/^            xmlPreviousElementSibling   (xmlNodePtr node);$/;"	p	signature:(xmlNodePtr node)
xmlPrintURI	/usr/include/libxml2/libxml/uri.h	/^		xmlPrintURI		(FILE *stream,$/;"	p	signature:(FILE *stream, xmlURIPtr uri)
xmlPushInput	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlPushInput		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlParserInputPtr input)
xmlRMutex	/usr/include/libxml2/libxml/threads.h	/^typedef struct _xmlRMutex xmlRMutex;$/;"	t	typeref:struct:_xmlRMutex
xmlRMutexLock	/usr/include/libxml2/libxml/threads.h	/^			xmlRMutexLock	(xmlRMutexPtr tok);$/;"	p	signature:(xmlRMutexPtr tok)
xmlRMutexPtr	/usr/include/libxml2/libxml/threads.h	/^typedef xmlRMutex *xmlRMutexPtr;$/;"	t
xmlRMutexUnlock	/usr/include/libxml2/libxml/threads.h	/^			xmlRMutexUnlock	(xmlRMutexPtr tok);$/;"	p	signature:(xmlRMutexPtr tok)
xmlReadDoc	/usr/include/libxml2/libxml/parser.h	/^		xmlReadDoc		(const xmlChar *cur,$/;"	p	signature:(const xmlChar *cur, const char *URL, const char *encoding, int options)
xmlReadFd	/usr/include/libxml2/libxml/parser.h	/^		xmlReadFd		(int fd,$/;"	p	signature:(int fd, const char *URL, const char *encoding, int options)
xmlReadFile	/usr/include/libxml2/libxml/parser.h	/^		xmlReadFile		(const char *URL,$/;"	p	signature:(const char *URL, const char *encoding, int options)
xmlReadIO	/usr/include/libxml2/libxml/parser.h	/^		xmlReadIO		(xmlInputReadCallback ioread,$/;"	p	signature:(xmlInputReadCallback ioread, xmlInputCloseCallback ioclose, void *ioctx, const char *URL, const char *encoding, int options)
xmlReadMemory	/usr/include/libxml2/libxml/parser.h	/^		xmlReadMemory		(const char *buffer,$/;"	p	signature:(const char *buffer, int size, const char *URL, const char *encoding, int options)
xmlReaderForDoc	/usr/include/libxml2/libxml/xmlreader.h	/^		xmlReaderForDoc		(const xmlChar * cur,$/;"	p	signature:(const xmlChar * cur, const char *URL, const char *encoding, int options)
xmlReaderForFd	/usr/include/libxml2/libxml/xmlreader.h	/^		xmlReaderForFd		(int fd,$/;"	p	signature:(int fd, const char *URL, const char *encoding, int options)
xmlReaderForFile	/usr/include/libxml2/libxml/xmlreader.h	/^		xmlReaderForFile	(const char *filename,$/;"	p	signature:(const char *filename, const char *encoding, int options)
xmlReaderForIO	/usr/include/libxml2/libxml/xmlreader.h	/^		xmlReaderForIO		(xmlInputReadCallback ioread,$/;"	p	signature:(xmlInputReadCallback ioread, xmlInputCloseCallback ioclose, void *ioctx, const char *URL, const char *encoding, int options)
xmlReaderForMemory	/usr/include/libxml2/libxml/xmlreader.h	/^		xmlReaderForMemory	(const char *buffer,$/;"	p	signature:(const char *buffer, int size, const char *URL, const char *encoding, int options)
xmlReaderNewDoc	/usr/include/libxml2/libxml/xmlreader.h	/^		xmlReaderNewDoc		(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, const xmlChar * cur, const char *URL, const char *encoding, int options)
xmlReaderNewFd	/usr/include/libxml2/libxml/xmlreader.h	/^		xmlReaderNewFd		(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, int fd, const char *URL, const char *encoding, int options)
xmlReaderNewFile	/usr/include/libxml2/libxml/xmlreader.h	/^		xmlReaderNewFile	(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, const char *filename, const char *encoding, int options)
xmlReaderNewIO	/usr/include/libxml2/libxml/xmlreader.h	/^		xmlReaderNewIO		(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, xmlInputReadCallback ioread, xmlInputCloseCallback ioclose, void *ioctx, const char *URL, const char *encoding, int options)
xmlReaderNewMemory	/usr/include/libxml2/libxml/xmlreader.h	/^		xmlReaderNewMemory	(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, const char *buffer, int size, const char *URL, const char *encoding, int options)
xmlReaderNewWalker	/usr/include/libxml2/libxml/xmlreader.h	/^		xmlReaderNewWalker	(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, xmlDocPtr doc)
xmlReaderTypes	/usr/include/libxml2/libxml/xmlreader.h	/^} xmlReaderTypes;$/;"	t	typeref:enum:__anon16
xmlReaderWalker	/usr/include/libxml2/libxml/xmlreader.h	/^		xmlReaderWalker		(xmlDocPtr doc);$/;"	p	signature:(xmlDocPtr doc)
xmlRealloc	/usr/include/libxml2/libxml/globals.h	/^	xmlReallocFunc xmlRealloc;$/;"	m	struct:_xmlGlobalState	access:public
xmlRealloc	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlReallocFunc xmlRealloc;$/;"	v
xmlRealloc	/usr/include/libxml2/libxml/globals.h	220;"	d
xmlRealloc	/usr/include/libxml2/libxml/globals.h	92;"	d
xmlRealloc	/usr/include/libxml2/libxml/xmlmemory.h	199;"	d
xmlReallocFunc	/usr/include/libxml2/libxml/xmlmemory.h	/^typedef void *(XMLCALL *xmlReallocFunc)(void *mem, size_t size);$/;"	t
xmlReallocLoc	/usr/include/libxml2/libxml/xmlmemory.h	/^	xmlReallocLoc	(void *ptr, size_t size, const char *file, int line);$/;"	p	signature:(void *ptr, size_t size, const char *file, int line)
xmlReconciliateNs	/usr/include/libxml2/libxml/tree.h	/^		xmlReconciliateNs	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodePtr tree)
xmlRecoverDoc	/usr/include/libxml2/libxml/parser.h	/^		xmlRecoverDoc		(const xmlChar *cur);$/;"	p	signature:(const xmlChar *cur)
xmlRecoverFile	/usr/include/libxml2/libxml/parser.h	/^		xmlRecoverFile		(const char *filename);$/;"	p	signature:(const char *filename)
xmlRecoverMemory	/usr/include/libxml2/libxml/parser.h	/^		xmlRecoverMemory	(const char *buffer,$/;"	p	signature:(const char *buffer, int size)
xmlRef	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlRef xmlRef;$/;"	t	typeref:struct:_xmlRef
xmlRefPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlRef *xmlRefPtr;$/;"	t
xmlRefTable	/usr/include/libxml2/libxml/valid.h	/^typedef struct _xmlHashTable xmlRefTable;$/;"	t	typeref:struct:_xmlHashTable
xmlRefTablePtr	/usr/include/libxml2/libxml/valid.h	/^typedef xmlRefTable *xmlRefTablePtr;$/;"	t
xmlRegExecCallbacks	/usr/include/libxml2/libxml/xmlregexp.h	/^typedef void (*xmlRegExecCallbacks) (xmlRegExecCtxtPtr exec,$/;"	t
xmlRegExecCtxt	/usr/include/libxml2/libxml/xmlregexp.h	/^typedef struct _xmlRegExecCtxt xmlRegExecCtxt;$/;"	t	typeref:struct:_xmlRegExecCtxt
xmlRegExecCtxtPtr	/usr/include/libxml2/libxml/xmlregexp.h	/^typedef xmlRegExecCtxt *xmlRegExecCtxtPtr;$/;"	t
xmlRegExecErrInfo	/usr/include/libxml2/libxml/xmlregexp.h	/^		    xmlRegExecErrInfo	(xmlRegExecCtxtPtr exec,$/;"	p	signature:(xmlRegExecCtxtPtr exec, const xmlChar **string, int *nbval, int *nbneg, xmlChar **values, int *terminal)
xmlRegExecNextValues	/usr/include/libxml2/libxml/xmlregexp.h	/^		    xmlRegExecNextValues(xmlRegExecCtxtPtr exec,$/;"	p	signature:(xmlRegExecCtxtPtr exec, int *nbval, int *nbneg, xmlChar **values, int *terminal)
xmlRegExecPushString	/usr/include/libxml2/libxml/xmlregexp.h	/^		    xmlRegExecPushString(xmlRegExecCtxtPtr exec,$/;"	p	signature:(xmlRegExecCtxtPtr exec, const xmlChar *value, void *data)
xmlRegExecPushString2	/usr/include/libxml2/libxml/xmlregexp.h	/^		    xmlRegExecPushString2(xmlRegExecCtxtPtr exec,$/;"	p	signature:(xmlRegExecCtxtPtr exec, const xmlChar *value, const xmlChar *value2, void *data)
xmlRegFreeExecCtxt	/usr/include/libxml2/libxml/xmlregexp.h	/^		    xmlRegFreeExecCtxt	(xmlRegExecCtxtPtr exec);$/;"	p	signature:(xmlRegExecCtxtPtr exec)
xmlRegFreeRegexp	/usr/include/libxml2/libxml/xmlregexp.h	/^XMLPUBFUN void XMLCALL			 xmlRegFreeRegexp(xmlRegexpPtr regexp);$/;"	p	signature:(xmlRegexpPtr regexp)
xmlRegNewExecCtxt	/usr/include/libxml2/libxml/xmlregexp.h	/^		    xmlRegNewExecCtxt	(xmlRegexpPtr comp,$/;"	p	signature:(xmlRegexpPtr comp, xmlRegExecCallbacks callback, void *data)
xmlRegexp	/usr/include/libxml2/libxml/xmlregexp.h	/^typedef struct _xmlRegexp xmlRegexp;$/;"	t	typeref:struct:_xmlRegexp
xmlRegexpCompile	/usr/include/libxml2/libxml/xmlregexp.h	/^		    xmlRegexpCompile	(const xmlChar *regexp);$/;"	p	signature:(const xmlChar *regexp)
xmlRegexpExec	/usr/include/libxml2/libxml/xmlregexp.h	/^		    xmlRegexpExec	(xmlRegexpPtr comp,$/;"	p	signature:(xmlRegexpPtr comp, const xmlChar *value)
xmlRegexpIsDeterminist	/usr/include/libxml2/libxml/xmlregexp.h	/^		    xmlRegexpIsDeterminist(xmlRegexpPtr comp);$/;"	p	signature:(xmlRegexpPtr comp)
xmlRegexpPrint	/usr/include/libxml2/libxml/xmlregexp.h	/^		    xmlRegexpPrint	(FILE *output,$/;"	p	signature:(FILE *output, xmlRegexpPtr regexp)
xmlRegexpPtr	/usr/include/libxml2/libxml/xmlregexp.h	/^typedef xmlRegexp *xmlRegexpPtr;$/;"	t
xmlRegisterCharEncodingHandler	/usr/include/libxml2/libxml/encoding.h	/^	xmlRegisterCharEncodingHandler	(xmlCharEncodingHandlerPtr handler);$/;"	p	signature:(xmlCharEncodingHandlerPtr handler)
xmlRegisterDefaultInputCallbacks	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlRegisterDefaultInputCallbacks	(void);$/;"	p	signature:(void)
xmlRegisterDefaultOutputCallbacks	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlRegisterDefaultOutputCallbacks(void);$/;"	p	signature:(void)
xmlRegisterHTTPPostCallbacks	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlRegisterHTTPPostCallbacks	(void );$/;"	p	signature:(void )
xmlRegisterInputCallbacks	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlRegisterInputCallbacks		(xmlInputMatchCallback matchFunc,$/;"	p	signature:(xmlInputMatchCallback matchFunc, xmlInputOpenCallback openFunc, xmlInputReadCallback readFunc, xmlInputCloseCallback closeFunc)
xmlRegisterNodeDefault	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlRegisterNodeFunc XMLCALL xmlRegisterNodeDefault(xmlRegisterNodeFunc func);$/;"	p	signature:(xmlRegisterNodeFunc func)
xmlRegisterNodeDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	xmlRegisterNodeFunc xmlRegisterNodeDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
xmlRegisterNodeDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlRegisterNodeFunc xmlRegisterNodeDefaultValue;$/;"	v
xmlRegisterNodeDefaultValue	/usr/include/libxml2/libxml/globals.h	468;"	d
xmlRegisterNodeDefaultValue	/usr/include/libxml2/libxml/globals.h	95;"	d
xmlRegisterNodeFunc	/usr/include/libxml2/libxml/globals.h	/^typedef void (*xmlRegisterNodeFunc) (xmlNodePtr node);$/;"	t
xmlRegisterOutputCallbacks	/usr/include/libxml2/libxml/xmlIO.h	/^	xmlRegisterOutputCallbacks	(xmlOutputMatchCallback matchFunc,$/;"	p	signature:(xmlOutputMatchCallback matchFunc, xmlOutputOpenCallback openFunc, xmlOutputWriteCallback writeFunc, xmlOutputCloseCallback closeFunc)
xmlRelaxNG	/usr/include/libxml2/libxml/relaxng.h	/^typedef struct _xmlRelaxNG xmlRelaxNG;$/;"	t	typeref:struct:_xmlRelaxNG
xmlRelaxNGCleanupTypes	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGCleanupTypes	(void);$/;"	p	signature:(void)
xmlRelaxNGDump	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGDump		(FILE *output,$/;"	p	signature:(FILE *output, xmlRelaxNGPtr schema)
xmlRelaxNGDumpTree	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGDumpTree	(FILE * output,$/;"	p	signature:(FILE * output, xmlRelaxNGPtr schema)
xmlRelaxNGFree	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGFree		(xmlRelaxNGPtr schema);$/;"	p	signature:(xmlRelaxNGPtr schema)
xmlRelaxNGFreeParserCtxt	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGFreeParserCtxt	(xmlRelaxNGParserCtxtPtr ctxt);$/;"	p	signature:(xmlRelaxNGParserCtxtPtr ctxt)
xmlRelaxNGFreeValidCtxt	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGFreeValidCtxt	(xmlRelaxNGValidCtxtPtr ctxt);$/;"	p	signature:(xmlRelaxNGValidCtxtPtr ctxt)
xmlRelaxNGGetParserErrors	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGGetParserErrors(xmlRelaxNGParserCtxtPtr ctxt,$/;"	p	signature:(xmlRelaxNGParserCtxtPtr ctxt, xmlRelaxNGValidityErrorFunc *err, xmlRelaxNGValidityWarningFunc *warn, void **ctx)
xmlRelaxNGGetValidErrors	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGGetValidErrors(xmlRelaxNGValidCtxtPtr ctxt,$/;"	p	signature:(xmlRelaxNGValidCtxtPtr ctxt, xmlRelaxNGValidityErrorFunc *err, xmlRelaxNGValidityWarningFunc *warn, void **ctx)
xmlRelaxNGInitTypes	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGInitTypes		(void);$/;"	p	signature:(void)
xmlRelaxNGNewDocParserCtxt	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGNewDocParserCtxt	(xmlDocPtr doc);$/;"	p	signature:(xmlDocPtr doc)
xmlRelaxNGNewMemParserCtxt	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGNewMemParserCtxt	(const char *buffer,$/;"	p	signature:(const char *buffer, int size)
xmlRelaxNGNewParserCtxt	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGNewParserCtxt	(const char *URL);$/;"	p	signature:(const char *URL)
xmlRelaxNGNewValidCtxt	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGNewValidCtxt	(xmlRelaxNGPtr schema);$/;"	p	signature:(xmlRelaxNGPtr schema)
xmlRelaxNGParse	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGParse		(xmlRelaxNGParserCtxtPtr ctxt);$/;"	p	signature:(xmlRelaxNGParserCtxtPtr ctxt)
xmlRelaxNGParserCtxt	/usr/include/libxml2/libxml/relaxng.h	/^typedef struct _xmlRelaxNGParserCtxt xmlRelaxNGParserCtxt;$/;"	t	typeref:struct:_xmlRelaxNGParserCtxt
xmlRelaxNGParserCtxtPtr	/usr/include/libxml2/libxml/relaxng.h	/^typedef xmlRelaxNGParserCtxt *xmlRelaxNGParserCtxtPtr;$/;"	t
xmlRelaxNGParserFlag	/usr/include/libxml2/libxml/relaxng.h	/^} xmlRelaxNGParserFlag;$/;"	t	typeref:enum:__anon2
xmlRelaxNGPtr	/usr/include/libxml2/libxml/relaxng.h	/^typedef xmlRelaxNG *xmlRelaxNGPtr;$/;"	t
xmlRelaxNGSetParserErrors	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGSetParserErrors(xmlRelaxNGParserCtxtPtr ctxt,$/;"	p	signature:(xmlRelaxNGParserCtxtPtr ctxt, xmlRelaxNGValidityErrorFunc err, xmlRelaxNGValidityWarningFunc warn, void *ctx)
xmlRelaxNGSetParserStructuredErrors	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGSetParserStructuredErrors($/;"	p	signature:( xmlRelaxNGParserCtxtPtr ctxt, xmlStructuredErrorFunc serror, void *ctx)
xmlRelaxNGSetValidErrors	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGSetValidErrors(xmlRelaxNGValidCtxtPtr ctxt,$/;"	p	signature:(xmlRelaxNGValidCtxtPtr ctxt, xmlRelaxNGValidityErrorFunc err, xmlRelaxNGValidityWarningFunc warn, void *ctx)
xmlRelaxNGSetValidStructuredErrors	/usr/include/libxml2/libxml/relaxng.h	/^			xmlRelaxNGSetValidStructuredErrors(xmlRelaxNGValidCtxtPtr ctxt,$/;"	p	signature:(xmlRelaxNGValidCtxtPtr ctxt, xmlStructuredErrorFunc serror, void *ctx)
xmlRelaxNGValidCtxt	/usr/include/libxml2/libxml/relaxng.h	/^typedef struct _xmlRelaxNGValidCtxt xmlRelaxNGValidCtxt;$/;"	t	typeref:struct:_xmlRelaxNGValidCtxt
xmlRelaxNGValidCtxtPtr	/usr/include/libxml2/libxml/relaxng.h	/^typedef xmlRelaxNGValidCtxt *xmlRelaxNGValidCtxtPtr;$/;"	t
xmlRelaxNGValidErr	/usr/include/libxml2/libxml/relaxng.h	/^} xmlRelaxNGValidErr;$/;"	t	typeref:enum:__anon1
xmlRelaxNGValidateDoc	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGValidateDoc	(xmlRelaxNGValidCtxtPtr ctxt,$/;"	p	signature:(xmlRelaxNGValidCtxtPtr ctxt, xmlDocPtr doc)
xmlRelaxNGValidateFullElement	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGValidateFullElement	(xmlRelaxNGValidCtxtPtr ctxt,$/;"	p	signature:(xmlRelaxNGValidCtxtPtr ctxt, xmlDocPtr doc, xmlNodePtr elem)
xmlRelaxNGValidatePopElement	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGValidatePopElement	(xmlRelaxNGValidCtxtPtr ctxt,$/;"	p	signature:(xmlRelaxNGValidCtxtPtr ctxt, xmlDocPtr doc, xmlNodePtr elem)
xmlRelaxNGValidatePushCData	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGValidatePushCData	(xmlRelaxNGValidCtxtPtr ctxt,$/;"	p	signature:(xmlRelaxNGValidCtxtPtr ctxt, const xmlChar *data, int len)
xmlRelaxNGValidatePushElement	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxNGValidatePushElement	(xmlRelaxNGValidCtxtPtr ctxt,$/;"	p	signature:(xmlRelaxNGValidCtxtPtr ctxt, xmlDocPtr doc, xmlNodePtr elem)
xmlRelaxParserSetFlag	/usr/include/libxml2/libxml/relaxng.h	/^		    xmlRelaxParserSetFlag	(xmlRelaxNGParserCtxtPtr ctxt,$/;"	p	signature:(xmlRelaxNGParserCtxtPtr ctxt, int flag)
xmlRemoveID	/usr/include/libxml2/libxml/valid.h	/^		xmlRemoveID	       (xmlDocPtr doc, $/;"	p	signature:(xmlDocPtr doc, xmlAttrPtr attr)
xmlRemoveProp	/usr/include/libxml2/libxml/tree.h	/^		xmlRemoveProp		(xmlAttrPtr cur);$/;"	p	signature:(xmlAttrPtr cur)
xmlRemoveRef	/usr/include/libxml2/libxml/valid.h	/^		xmlRemoveRef	       (xmlDocPtr doc, $/;"	p	signature:(xmlDocPtr doc, xmlAttrPtr attr)
xmlReplaceNode	/usr/include/libxml2/libxml/tree.h	/^		xmlReplaceNode		(xmlNodePtr old,$/;"	p	signature:(xmlNodePtr old, xmlNodePtr cur)
xmlResetError	/usr/include/libxml2/libxml/xmlerror.h	/^    xmlResetError		(xmlErrorPtr err);$/;"	p	signature:(xmlErrorPtr err)
xmlResetLastError	/usr/include/libxml2/libxml/xmlerror.h	/^    xmlResetLastError		(void);$/;"	p	signature:(void)
xmlRootNode	/usr/include/libxml2/libxml/tree.h	610;"	d
xmlSAX2AttributeDecl	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2AttributeDecl		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *elem, const xmlChar *fullname, int type, int def, const xmlChar *defaultValue, xmlEnumerationPtr tree)
xmlSAX2CDataBlock	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2CDataBlock		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *value, int len)
xmlSAX2Characters	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2Characters		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *ch, int len)
xmlSAX2Comment	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2Comment			(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *value)
xmlSAX2ElementDecl	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2ElementDecl		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name, int type, xmlElementContentPtr content)
xmlSAX2EndDocument	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2EndDocument		(void *ctx);$/;"	p	signature:(void *ctx)
xmlSAX2EndElement	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2EndElement		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name)
xmlSAX2EndElementNs	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2EndElementNs		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *localname, const xmlChar *prefix, const xmlChar *URI)
xmlSAX2EntityDecl	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2EntityDecl		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name, int type, const xmlChar *publicId, const xmlChar *systemId, xmlChar *content)
xmlSAX2ExternalSubset	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2ExternalSubset		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name, const xmlChar *ExternalID, const xmlChar *SystemID)
xmlSAX2GetColumnNumber	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2GetColumnNumber		(void *ctx);$/;"	p	signature:(void *ctx)
xmlSAX2GetEntity	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2GetEntity		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name)
xmlSAX2GetLineNumber	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2GetLineNumber		(void *ctx);$/;"	p	signature:(void *ctx)
xmlSAX2GetParameterEntity	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2GetParameterEntity	(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name)
xmlSAX2GetPublicId	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2GetPublicId		(void *ctx);$/;"	p	signature:(void *ctx)
xmlSAX2GetSystemId	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2GetSystemId		(void *ctx);$/;"	p	signature:(void *ctx)
xmlSAX2HasExternalSubset	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2HasExternalSubset	(void *ctx);$/;"	p	signature:(void *ctx)
xmlSAX2HasInternalSubset	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2HasInternalSubset	(void *ctx);$/;"	p	signature:(void *ctx)
xmlSAX2IgnorableWhitespace	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2IgnorableWhitespace	(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *ch, int len)
xmlSAX2InitDefaultSAXHandler	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2InitDefaultSAXHandler    (xmlSAXHandler *hdlr,$/;"	p	signature:(xmlSAXHandler *hdlr, int warning)
xmlSAX2InitDocbDefaultSAXHandler	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2InitDocbDefaultSAXHandler(xmlSAXHandler *hdlr);$/;"	p	signature:(xmlSAXHandler *hdlr)
xmlSAX2InitHtmlDefaultSAXHandler	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2InitHtmlDefaultSAXHandler(xmlSAXHandler *hdlr);$/;"	p	signature:(xmlSAXHandler *hdlr)
xmlSAX2InternalSubset	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2InternalSubset		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name, const xmlChar *ExternalID, const xmlChar *SystemID)
xmlSAX2IsStandalone	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2IsStandalone		(void *ctx);$/;"	p	signature:(void *ctx)
xmlSAX2NotationDecl	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2NotationDecl		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name, const xmlChar *publicId, const xmlChar *systemId)
xmlSAX2ProcessingInstruction	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2ProcessingInstruction	(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *target, const xmlChar *data)
xmlSAX2Reference	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2Reference		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name)
xmlSAX2ResolveEntity	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2ResolveEntity		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *publicId, const xmlChar *systemId)
xmlSAX2SetDocumentLocator	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2SetDocumentLocator	(void *ctx,$/;"	p	signature:(void *ctx, xmlSAXLocatorPtr loc)
xmlSAX2StartDocument	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2StartDocument		(void *ctx);$/;"	p	signature:(void *ctx)
xmlSAX2StartElement	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2StartElement		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *fullname, const xmlChar **atts)
xmlSAX2StartElementNs	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2StartElementNs		(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *localname, const xmlChar *prefix, const xmlChar *URI, int nb_namespaces, const xmlChar **namespaces, int nb_attributes, int nb_defaulted, const xmlChar **attributes)
xmlSAX2UnparsedEntityDecl	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAX2UnparsedEntityDecl	(void *ctx,$/;"	p	signature:(void *ctx, const xmlChar *name, const xmlChar *publicId, const xmlChar *systemId, const xmlChar *notationName)
xmlSAXDefaultVersion	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAXDefaultVersion		(int version);$/;"	p	signature:(int version)
xmlSAXHandler	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlSAXHandler xmlSAXHandler;$/;"	t	typeref:struct:_xmlSAXHandler
xmlSAXHandlerPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlSAXHandler *xmlSAXHandlerPtr;$/;"	t
xmlSAXHandlerV1	/usr/include/libxml2/libxml/parser.h	/^typedef struct _xmlSAXHandlerV1 xmlSAXHandlerV1;$/;"	t	typeref:struct:_xmlSAXHandlerV1
xmlSAXHandlerV1Ptr	/usr/include/libxml2/libxml/parser.h	/^typedef xmlSAXHandlerV1 *xmlSAXHandlerV1Ptr;$/;"	t
xmlSAXLocator	/usr/include/libxml2/libxml/tree.h	/^typedef struct _xmlSAXLocator xmlSAXLocator;$/;"	t	typeref:struct:_xmlSAXLocator
xmlSAXLocatorPtr	/usr/include/libxml2/libxml/tree.h	/^typedef xmlSAXLocator *xmlSAXLocatorPtr;$/;"	t
xmlSAXParseDTD	/usr/include/libxml2/libxml/parser.h	/^		xmlSAXParseDTD		(xmlSAXHandlerPtr sax,$/;"	p	signature:(xmlSAXHandlerPtr sax, const xmlChar *ExternalID, const xmlChar *SystemID)
xmlSAXParseDoc	/usr/include/libxml2/libxml/parser.h	/^		xmlSAXParseDoc		(xmlSAXHandlerPtr sax,$/;"	p	signature:(xmlSAXHandlerPtr sax, const xmlChar *cur, int recovery)
xmlSAXParseEntity	/usr/include/libxml2/libxml/parser.h	/^		xmlSAXParseEntity	(xmlSAXHandlerPtr sax,$/;"	p	signature:(xmlSAXHandlerPtr sax, const char *filename)
xmlSAXParseFile	/usr/include/libxml2/libxml/parser.h	/^		xmlSAXParseFile		(xmlSAXHandlerPtr sax,$/;"	p	signature:(xmlSAXHandlerPtr sax, const char *filename, int recovery)
xmlSAXParseFileWithData	/usr/include/libxml2/libxml/parser.h	/^		xmlSAXParseFileWithData	(xmlSAXHandlerPtr sax,$/;"	p	signature:(xmlSAXHandlerPtr sax, const char *filename, int recovery, void *data)
xmlSAXParseMemory	/usr/include/libxml2/libxml/parser.h	/^		xmlSAXParseMemory	(xmlSAXHandlerPtr sax,$/;"	p	signature:(xmlSAXHandlerPtr sax, const char *buffer, int size, int recovery)
xmlSAXParseMemoryWithData	/usr/include/libxml2/libxml/parser.h	/^		xmlSAXParseMemoryWithData (xmlSAXHandlerPtr sax,$/;"	p	signature:(xmlSAXHandlerPtr sax, const char *buffer, int size, int recovery, void *data)
xmlSAXUserParseFile	/usr/include/libxml2/libxml/parser.h	/^		xmlSAXUserParseFile	(xmlSAXHandlerPtr sax,$/;"	p	signature:(xmlSAXHandlerPtr sax, void *user_data, const char *filename)
xmlSAXUserParseMemory	/usr/include/libxml2/libxml/parser.h	/^		xmlSAXUserParseMemory	(xmlSAXHandlerPtr sax,$/;"	p	signature:(xmlSAXHandlerPtr sax, void *user_data, const char *buffer, int size)
xmlSAXVersion	/usr/include/libxml2/libxml/SAX2.h	/^		xmlSAXVersion			(xmlSAXHandler *hdlr,$/;"	p	signature:(xmlSAXHandler *hdlr, int version)
xmlSaveClose	/usr/include/libxml2/libxml/xmlsave.h	/^		xmlSaveClose		(xmlSaveCtxtPtr ctxt);$/;"	p	signature:(xmlSaveCtxtPtr ctxt)
xmlSaveCtxt	/usr/include/libxml2/libxml/xmlsave.h	/^typedef struct _xmlSaveCtxt xmlSaveCtxt;$/;"	t	typeref:struct:_xmlSaveCtxt
xmlSaveCtxtPtr	/usr/include/libxml2/libxml/xmlsave.h	/^typedef xmlSaveCtxt *xmlSaveCtxtPtr;$/;"	t
xmlSaveDoc	/usr/include/libxml2/libxml/xmlsave.h	/^		xmlSaveDoc		(xmlSaveCtxtPtr ctxt,$/;"	p	signature:(xmlSaveCtxtPtr ctxt, xmlDocPtr doc)
xmlSaveFile	/usr/include/libxml2/libxml/tree.h	/^		xmlSaveFile		(const char *filename,$/;"	p	signature:(const char *filename, xmlDocPtr cur)
xmlSaveFileEnc	/usr/include/libxml2/libxml/tree.h	/^		xmlSaveFileEnc		(const char *filename,$/;"	p	signature:(const char *filename, xmlDocPtr cur, const char *encoding)
xmlSaveFileTo	/usr/include/libxml2/libxml/tree.h	/^		xmlSaveFileTo		(xmlOutputBufferPtr buf,$/;"	p	signature:(xmlOutputBufferPtr buf, xmlDocPtr cur, const char *encoding)
xmlSaveFlush	/usr/include/libxml2/libxml/xmlsave.h	/^		xmlSaveFlush		(xmlSaveCtxtPtr ctxt);$/;"	p	signature:(xmlSaveCtxtPtr ctxt)
xmlSaveFormatFile	/usr/include/libxml2/libxml/tree.h	/^		xmlSaveFormatFile	(const char *filename,$/;"	p	signature:(const char *filename, xmlDocPtr cur, int format)
xmlSaveFormatFileEnc	/usr/include/libxml2/libxml/tree.h	/^		xmlSaveFormatFileEnc    (const char *filename,$/;"	p	signature:(const char *filename, xmlDocPtr cur, const char *encoding, int format)
xmlSaveFormatFileTo	/usr/include/libxml2/libxml/tree.h	/^		xmlSaveFormatFileTo     (xmlOutputBufferPtr buf,$/;"	p	signature:(xmlOutputBufferPtr buf, xmlDocPtr cur, const char *encoding, int format)
xmlSaveNoEmptyTags	/usr/include/libxml2/libxml/globals.h	/^	int xmlSaveNoEmptyTags;$/;"	m	struct:_xmlGlobalState	access:public
xmlSaveNoEmptyTags	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR int xmlSaveNoEmptyTags;$/;"	v
xmlSaveNoEmptyTags	/usr/include/libxml2/libxml/globals.h	450;"	d
xmlSaveNoEmptyTags	/usr/include/libxml2/libxml/globals.h	93;"	d
xmlSaveOption	/usr/include/libxml2/libxml/xmlsave.h	/^} xmlSaveOption;$/;"	t	typeref:enum:__anon3
xmlSaveSetAttrEscape	/usr/include/libxml2/libxml/xmlsave.h	/^		xmlSaveSetAttrEscape	(xmlSaveCtxtPtr ctxt,$/;"	p	signature:(xmlSaveCtxtPtr ctxt, xmlCharEncodingOutputFunc escape)
xmlSaveSetEscape	/usr/include/libxml2/libxml/xmlsave.h	/^		xmlSaveSetEscape	(xmlSaveCtxtPtr ctxt,$/;"	p	signature:(xmlSaveCtxtPtr ctxt, xmlCharEncodingOutputFunc escape)
xmlSaveToBuffer	/usr/include/libxml2/libxml/xmlsave.h	/^		xmlSaveToBuffer		(xmlBufferPtr buffer,$/;"	p	signature:(xmlBufferPtr buffer, const char *encoding, int options)
xmlSaveToFd	/usr/include/libxml2/libxml/xmlsave.h	/^		xmlSaveToFd		(int fd,$/;"	p	signature:(int fd, const char *encoding, int options)
xmlSaveToFilename	/usr/include/libxml2/libxml/xmlsave.h	/^		xmlSaveToFilename	(const char *filename,$/;"	p	signature:(const char *filename, const char *encoding, int options)
xmlSaveToIO	/usr/include/libxml2/libxml/xmlsave.h	/^		xmlSaveToIO		(xmlOutputWriteCallback iowrite,$/;"	p	signature:(xmlOutputWriteCallback iowrite, xmlOutputCloseCallback ioclose, void *ioctx, const char *encoding, int options)
xmlSaveTree	/usr/include/libxml2/libxml/xmlsave.h	/^		xmlSaveTree		(xmlSaveCtxtPtr ctxt,$/;"	p	signature:(xmlSaveCtxtPtr ctxt, xmlNodePtr node)
xmlSaveUri	/usr/include/libxml2/libxml/uri.h	/^		xmlSaveUri		(xmlURIPtr uri);$/;"	p	signature:(xmlURIPtr uri)
xmlScanName	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlScanName		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlSchema	/usr/include/libxml2/libxml/xmlschemas.h	/^typedef struct _xmlSchema xmlSchema;$/;"	t	typeref:struct:_xmlSchema
xmlSchemaAnnot	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef struct _xmlSchemaAnnot xmlSchemaAnnot;$/;"	t	typeref:struct:_xmlSchemaAnnot
xmlSchemaAnnotPtr	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef xmlSchemaAnnot *xmlSchemaAnnotPtr;$/;"	t
xmlSchemaAttribute	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef struct _xmlSchemaAttribute xmlSchemaAttribute;$/;"	t	typeref:struct:_xmlSchemaAttribute
xmlSchemaAttributeGroup	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef struct _xmlSchemaAttributeGroup xmlSchemaAttributeGroup;$/;"	t	typeref:struct:_xmlSchemaAttributeGroup
xmlSchemaAttributeGroupPtr	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef xmlSchemaAttributeGroup *xmlSchemaAttributeGroupPtr;$/;"	t
xmlSchemaAttributeLink	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef struct _xmlSchemaAttributeLink xmlSchemaAttributeLink;$/;"	t	typeref:struct:_xmlSchemaAttributeLink
xmlSchemaAttributeLinkPtr	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef xmlSchemaAttributeLink *xmlSchemaAttributeLinkPtr;$/;"	t
xmlSchemaAttributePtr	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef xmlSchemaAttribute *xmlSchemaAttributePtr;$/;"	t
xmlSchemaCheckFacet	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaCheckFacet		(xmlSchemaFacetPtr facet,$/;"	p	signature:(xmlSchemaFacetPtr facet, xmlSchemaTypePtr typeDecl, xmlSchemaParserCtxtPtr ctxt, const xmlChar *name)
xmlSchemaCleanupTypes	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaCleanupTypes		(void);$/;"	p	signature:(void)
xmlSchemaCollapseString	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaCollapseString		(const xmlChar *value);$/;"	p	signature:(const xmlChar *value)
xmlSchemaCompareValues	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaCompareValues		(xmlSchemaValPtr x,$/;"	p	signature:(xmlSchemaValPtr x, xmlSchemaValPtr y)
xmlSchemaCompareValuesWhtsp	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaCompareValuesWhtsp	(xmlSchemaValPtr x,$/;"	p	signature:(xmlSchemaValPtr x, xmlSchemaWhitespaceValueType xws, xmlSchemaValPtr y, xmlSchemaWhitespaceValueType yws)
xmlSchemaContentType	/usr/include/libxml2/libxml/schemasInternals.h	/^} xmlSchemaContentType;$/;"	t	typeref:enum:__anon37
xmlSchemaCopyValue	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaCopyValue		(xmlSchemaValPtr val);$/;"	p	signature:(xmlSchemaValPtr val)
xmlSchemaDump	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaDump		(FILE *output,$/;"	p	signature:(FILE *output, xmlSchemaPtr schema)
xmlSchemaElement	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef struct _xmlSchemaElement xmlSchemaElement;$/;"	t	typeref:struct:_xmlSchemaElement
xmlSchemaElementPtr	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef xmlSchemaElement *xmlSchemaElementPtr;$/;"	t
xmlSchemaFacet	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef struct _xmlSchemaFacet xmlSchemaFacet;$/;"	t	typeref:struct:_xmlSchemaFacet
xmlSchemaFacetLink	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef struct _xmlSchemaFacetLink xmlSchemaFacetLink;$/;"	t	typeref:struct:_xmlSchemaFacetLink
xmlSchemaFacetLinkPtr	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef xmlSchemaFacetLink *xmlSchemaFacetLinkPtr;$/;"	t
xmlSchemaFacetPtr	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef xmlSchemaFacet *xmlSchemaFacetPtr;$/;"	t
xmlSchemaFree	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaFree		(xmlSchemaPtr schema);$/;"	p	signature:(xmlSchemaPtr schema)
xmlSchemaFreeFacet	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaFreeFacet		(xmlSchemaFacetPtr facet);$/;"	p	signature:(xmlSchemaFacetPtr facet)
xmlSchemaFreeParserCtxt	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaFreeParserCtxt	(xmlSchemaParserCtxtPtr ctxt);$/;"	p	signature:(xmlSchemaParserCtxtPtr ctxt)
xmlSchemaFreeType	/usr/include/libxml2/libxml/schemasInternals.h	/^XMLPUBFUN void XMLCALL         xmlSchemaFreeType        (xmlSchemaTypePtr type);$/;"	p	signature:(xmlSchemaTypePtr type)
xmlSchemaFreeValidCtxt	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaFreeValidCtxt	(xmlSchemaValidCtxtPtr ctxt);$/;"	p	signature:(xmlSchemaValidCtxtPtr ctxt)
xmlSchemaFreeValue	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaFreeValue		(xmlSchemaValPtr val);$/;"	p	signature:(xmlSchemaValPtr val)
xmlSchemaFreeWildcard	/usr/include/libxml2/libxml/schemasInternals.h	/^XMLPUBFUN void XMLCALL         xmlSchemaFreeWildcard(xmlSchemaWildcardPtr wildcard);$/;"	p	signature:(xmlSchemaWildcardPtr wildcard)
xmlSchemaGetBuiltInListSimpleTypeItemType	/usr/include/libxml2/libxml/xmlschemastypes.h	/^    xmlSchemaGetBuiltInListSimpleTypeItemType	(xmlSchemaTypePtr type);$/;"	p	signature:(xmlSchemaTypePtr type)
xmlSchemaGetBuiltInType	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaGetBuiltInType		(xmlSchemaValType type);$/;"	p	signature:(xmlSchemaValType type)
xmlSchemaGetCanonValue	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaGetCanonValue		(xmlSchemaValPtr val,$/;"	p	signature:(xmlSchemaValPtr val, const xmlChar **retValue)
xmlSchemaGetCanonValueWhtsp	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaGetCanonValueWhtsp	(xmlSchemaValPtr val,						 $/;"	p	signature:(xmlSchemaValPtr val, const xmlChar **retValue, xmlSchemaWhitespaceValueType ws)
xmlSchemaGetFacetValueAsULong	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaGetFacetValueAsULong	(xmlSchemaFacetPtr facet);$/;"	p	signature:(xmlSchemaFacetPtr facet)
xmlSchemaGetParserErrors	/usr/include/libxml2/libxml/xmlschemas.h	/^		xmlSchemaGetParserErrors(xmlSchemaParserCtxtPtr ctxt,$/;"	p	signature:(xmlSchemaParserCtxtPtr ctxt, xmlSchemaValidityErrorFunc * err, xmlSchemaValidityWarningFunc * warn, void **ctx)
xmlSchemaGetPredefinedType	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaGetPredefinedType	(const xmlChar *name,$/;"	p	signature:(const xmlChar *name, const xmlChar *ns)
xmlSchemaGetValType	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaGetValType		(xmlSchemaValPtr val);$/;"	p	signature:(xmlSchemaValPtr val)
xmlSchemaGetValidErrors	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaGetValidErrors	(xmlSchemaValidCtxtPtr ctxt,$/;"	p	signature:(xmlSchemaValidCtxtPtr ctxt, xmlSchemaValidityErrorFunc *err, xmlSchemaValidityWarningFunc *warn, void **ctx)
xmlSchemaInitTypes	/usr/include/libxml2/libxml/xmlschemastypes.h	/^    		xmlSchemaInitTypes		(void);$/;"	p	signature:(void)
xmlSchemaIsBuiltInTypeFacet	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaIsBuiltInTypeFacet	(xmlSchemaTypePtr type, $/;"	p	signature:(xmlSchemaTypePtr type, int facetType)
xmlSchemaIsValid	/usr/include/libxml2/libxml/xmlschemas.h	/^		xmlSchemaIsValid	(xmlSchemaValidCtxtPtr ctxt);$/;"	p	signature:(xmlSchemaValidCtxtPtr ctxt)
xmlSchemaNewDocParserCtxt	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaNewDocParserCtxt	(xmlDocPtr doc);$/;"	p	signature:(xmlDocPtr doc)
xmlSchemaNewFacet	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaNewFacet		(void);$/;"	p	signature:(void)
xmlSchemaNewMemParserCtxt	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaNewMemParserCtxt	(const char *buffer,$/;"	p	signature:(const char *buffer, int size)
xmlSchemaNewNOTATIONValue	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaNewNOTATIONValue	(const xmlChar *name,$/;"	p	signature:(const xmlChar *name, const xmlChar *ns)
xmlSchemaNewParserCtxt	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaNewParserCtxt	(const char *URL);$/;"	p	signature:(const char *URL)
xmlSchemaNewQNameValue	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaNewQNameValue		(const xmlChar *namespaceName,$/;"	p	signature:(const xmlChar *namespaceName, const xmlChar *localName)
xmlSchemaNewStringValue	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaNewStringValue		(xmlSchemaValType type,$/;"	p	signature:(xmlSchemaValType type, const xmlChar *value)
xmlSchemaNewValidCtxt	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaNewValidCtxt	(xmlSchemaPtr schema);$/;"	p	signature:(xmlSchemaPtr schema)
xmlSchemaNotation	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef struct _xmlSchemaNotation xmlSchemaNotation;$/;"	t	typeref:struct:_xmlSchemaNotation
xmlSchemaNotationPtr	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef xmlSchemaNotation *xmlSchemaNotationPtr;$/;"	t
xmlSchemaParse	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaParse		(xmlSchemaParserCtxtPtr ctxt);$/;"	p	signature:(xmlSchemaParserCtxtPtr ctxt)
xmlSchemaParserCtxt	/usr/include/libxml2/libxml/xmlschemas.h	/^typedef struct _xmlSchemaParserCtxt xmlSchemaParserCtxt;$/;"	t	typeref:struct:_xmlSchemaParserCtxt
xmlSchemaParserCtxtPtr	/usr/include/libxml2/libxml/xmlschemas.h	/^typedef xmlSchemaParserCtxt *xmlSchemaParserCtxtPtr;$/;"	t
xmlSchemaPtr	/usr/include/libxml2/libxml/xmlschemas.h	/^typedef xmlSchema *xmlSchemaPtr;$/;"	t
xmlSchemaSAXPlug	/usr/include/libxml2/libxml/xmlschemas.h	/^            xmlSchemaSAXPlug		(xmlSchemaValidCtxtPtr ctxt,$/;"	p	signature:(xmlSchemaValidCtxtPtr ctxt, xmlSAXHandlerPtr *sax, void **user_data)
xmlSchemaSAXPlugPtr	/usr/include/libxml2/libxml/xmlschemas.h	/^typedef xmlSchemaSAXPlugStruct *xmlSchemaSAXPlugPtr;$/;"	t
xmlSchemaSAXPlugStruct	/usr/include/libxml2/libxml/xmlschemas.h	/^typedef struct _xmlSchemaSAXPlug xmlSchemaSAXPlugStruct;$/;"	t	typeref:struct:_xmlSchemaSAXPlug
xmlSchemaSAXUnplug	/usr/include/libxml2/libxml/xmlschemas.h	/^            xmlSchemaSAXUnplug		(xmlSchemaSAXPlugPtr plug);$/;"	p	signature:(xmlSchemaSAXPlugPtr plug)
xmlSchemaSetParserErrors	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaSetParserErrors	(xmlSchemaParserCtxtPtr ctxt,$/;"	p	signature:(xmlSchemaParserCtxtPtr ctxt, xmlSchemaValidityErrorFunc err, xmlSchemaValidityWarningFunc warn, void *ctx)
xmlSchemaSetParserStructuredErrors	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaSetParserStructuredErrors(xmlSchemaParserCtxtPtr ctxt,$/;"	p	signature:(xmlSchemaParserCtxtPtr ctxt, xmlStructuredErrorFunc serror, void *ctx)
xmlSchemaSetValidErrors	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaSetValidErrors	(xmlSchemaValidCtxtPtr ctxt,$/;"	p	signature:(xmlSchemaValidCtxtPtr ctxt, xmlSchemaValidityErrorFunc err, xmlSchemaValidityWarningFunc warn, void *ctx)
xmlSchemaSetValidOptions	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaSetValidOptions	(xmlSchemaValidCtxtPtr ctxt,$/;"	p	signature:(xmlSchemaValidCtxtPtr ctxt, int options)
xmlSchemaSetValidStructuredErrors	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaSetValidStructuredErrors(xmlSchemaValidCtxtPtr ctxt,$/;"	p	signature:(xmlSchemaValidCtxtPtr ctxt, xmlStructuredErrorFunc serror, void *ctx)
xmlSchemaType	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef struct _xmlSchemaType xmlSchemaType;$/;"	t	typeref:struct:_xmlSchemaType
xmlSchemaTypeLink	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef struct _xmlSchemaTypeLink xmlSchemaTypeLink;$/;"	t	typeref:struct:_xmlSchemaTypeLink
xmlSchemaTypeLinkPtr	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef xmlSchemaTypeLink *xmlSchemaTypeLinkPtr;$/;"	t
xmlSchemaTypePtr	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef xmlSchemaType *xmlSchemaTypePtr;$/;"	t
xmlSchemaTypeType	/usr/include/libxml2/libxml/schemasInternals.h	/^} xmlSchemaTypeType;$/;"	t	typeref:enum:__anon36
xmlSchemaVal	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef struct _xmlSchemaVal xmlSchemaVal;$/;"	t	typeref:struct:_xmlSchemaVal
xmlSchemaValPredefTypeNode	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaValPredefTypeNode	(xmlSchemaTypePtr type,$/;"	p	signature:(xmlSchemaTypePtr type, const xmlChar *value, xmlSchemaValPtr *val, xmlNodePtr node)
xmlSchemaValPredefTypeNodeNoNorm	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaValPredefTypeNodeNoNorm(xmlSchemaTypePtr type, $/;"	p	signature:(xmlSchemaTypePtr type, const xmlChar *value, xmlSchemaValPtr *val, xmlNodePtr node)
xmlSchemaValPtr	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef xmlSchemaVal *xmlSchemaValPtr;$/;"	t
xmlSchemaValType	/usr/include/libxml2/libxml/schemasInternals.h	/^} xmlSchemaValType;$/;"	t	typeref:enum:__anon35
xmlSchemaValidCtxt	/usr/include/libxml2/libxml/xmlschemas.h	/^typedef struct _xmlSchemaValidCtxt xmlSchemaValidCtxt;$/;"	t	typeref:struct:_xmlSchemaValidCtxt
xmlSchemaValidCtxtGetOptions	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaValidCtxtGetOptions(xmlSchemaValidCtxtPtr ctxt);$/;"	p	signature:(xmlSchemaValidCtxtPtr ctxt)
xmlSchemaValidCtxtGetParserCtxt	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaValidCtxtGetParserCtxt(xmlSchemaValidCtxtPtr ctxt);$/;"	p	signature:(xmlSchemaValidCtxtPtr ctxt)
xmlSchemaValidCtxtPtr	/usr/include/libxml2/libxml/xmlschemas.h	/^typedef xmlSchemaValidCtxt *xmlSchemaValidCtxtPtr;$/;"	t
xmlSchemaValidError	/usr/include/libxml2/libxml/xmlschemas.h	/^} xmlSchemaValidError;$/;"	t	typeref:enum:__anon21
xmlSchemaValidOption	/usr/include/libxml2/libxml/xmlschemas.h	/^} xmlSchemaValidOption;$/;"	t	typeref:enum:__anon22
xmlSchemaValidateDoc	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaValidateDoc	(xmlSchemaValidCtxtPtr ctxt,$/;"	p	signature:(xmlSchemaValidCtxtPtr ctxt, xmlDocPtr instance)
xmlSchemaValidateFacet	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaValidateFacet		(xmlSchemaTypePtr base,$/;"	p	signature:(xmlSchemaTypePtr base, xmlSchemaFacetPtr facet, const xmlChar *value, xmlSchemaValPtr val)
xmlSchemaValidateFacetWhtsp	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaValidateFacetWhtsp	(xmlSchemaFacetPtr facet,$/;"	p	signature:(xmlSchemaFacetPtr facet, xmlSchemaWhitespaceValueType fws, xmlSchemaValType valType, const xmlChar *value, xmlSchemaValPtr val, xmlSchemaWhitespaceValueType ws)
xmlSchemaValidateFile	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaValidateFile	(xmlSchemaValidCtxtPtr ctxt,$/;"	p	signature:(xmlSchemaValidCtxtPtr ctxt, const char * filename, int options)
xmlSchemaValidateLengthFacet	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaValidateLengthFacet	(xmlSchemaTypePtr type, $/;"	p	signature:(xmlSchemaTypePtr type, xmlSchemaFacetPtr facet, const xmlChar *value, xmlSchemaValPtr val, unsigned long *length)
xmlSchemaValidateLengthFacetWhtsp	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaValidateLengthFacetWhtsp(xmlSchemaFacetPtr facet,$/;"	p	signature:(xmlSchemaFacetPtr facet, xmlSchemaValType valType, const xmlChar *value, xmlSchemaValPtr val, unsigned long *length, xmlSchemaWhitespaceValueType ws)
xmlSchemaValidateListSimpleTypeFacet	/usr/include/libxml2/libxml/xmlschemastypes.h	/^    xmlSchemaValidateListSimpleTypeFacet	(xmlSchemaFacetPtr facet,$/;"	p	signature:(xmlSchemaFacetPtr facet, const xmlChar *value, unsigned long actualLen, unsigned long *expectedLen)
xmlSchemaValidateOneElement	/usr/include/libxml2/libxml/xmlschemas.h	/^            xmlSchemaValidateOneElement (xmlSchemaValidCtxtPtr ctxt,$/;"	p	signature:(xmlSchemaValidCtxtPtr ctxt, xmlNodePtr elem)
xmlSchemaValidatePredefinedType	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaValidatePredefinedType	(xmlSchemaTypePtr type,$/;"	p	signature:(xmlSchemaTypePtr type, const xmlChar *value, xmlSchemaValPtr *val)
xmlSchemaValidateStream	/usr/include/libxml2/libxml/xmlschemas.h	/^	    xmlSchemaValidateStream	(xmlSchemaValidCtxtPtr ctxt,$/;"	p	signature:(xmlSchemaValidCtxtPtr ctxt, xmlParserInputBufferPtr input, xmlCharEncoding enc, xmlSAXHandlerPtr sax, void *user_data)
xmlSchemaValueAppend	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaValueAppend		(xmlSchemaValPtr prev,$/;"	p	signature:(xmlSchemaValPtr prev, xmlSchemaValPtr cur)
xmlSchemaValueGetAsBoolean	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaValueGetAsBoolean	(xmlSchemaValPtr val);$/;"	p	signature:(xmlSchemaValPtr val)
xmlSchemaValueGetAsString	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaValueGetAsString	(xmlSchemaValPtr val);$/;"	p	signature:(xmlSchemaValPtr val)
xmlSchemaValueGetNext	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaValueGetNext		(xmlSchemaValPtr cur);$/;"	p	signature:(xmlSchemaValPtr cur)
xmlSchemaWhiteSpaceReplace	/usr/include/libxml2/libxml/xmlschemastypes.h	/^		xmlSchemaWhiteSpaceReplace	(const xmlChar *value);$/;"	p	signature:(const xmlChar *value)
xmlSchemaWhitespaceValueType	/usr/include/libxml2/libxml/xmlschemastypes.h	/^} xmlSchemaWhitespaceValueType;$/;"	t	typeref:enum:__anon38
xmlSchemaWildcard	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef struct _xmlSchemaWildcard xmlSchemaWildcard;$/;"	t	typeref:struct:_xmlSchemaWildcard
xmlSchemaWildcardNs	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef struct _xmlSchemaWildcardNs xmlSchemaWildcardNs;$/;"	t	typeref:struct:_xmlSchemaWildcardNs
xmlSchemaWildcardNsPtr	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef xmlSchemaWildcardNs *xmlSchemaWildcardNsPtr;$/;"	t
xmlSchemaWildcardPtr	/usr/include/libxml2/libxml/schemasInternals.h	/^typedef xmlSchemaWildcard *xmlSchemaWildcardPtr;$/;"	t
xmlSchematron	/usr/include/libxml2/libxml/schematron.h	/^typedef struct _xmlSchematron xmlSchematron;$/;"	t	typeref:struct:_xmlSchematron
xmlSchematronFree	/usr/include/libxml2/libxml/schematron.h	/^	    xmlSchematronFree		(xmlSchematronPtr schema);$/;"	p	signature:(xmlSchematronPtr schema)
xmlSchematronFreeParserCtxt	/usr/include/libxml2/libxml/schematron.h	/^	    xmlSchematronFreeParserCtxt	(xmlSchematronParserCtxtPtr ctxt);$/;"	p	signature:(xmlSchematronParserCtxtPtr ctxt)
xmlSchematronFreeValidCtxt	/usr/include/libxml2/libxml/schematron.h	/^	    xmlSchematronFreeValidCtxt	(xmlSchematronValidCtxtPtr ctxt);$/;"	p	signature:(xmlSchematronValidCtxtPtr ctxt)
xmlSchematronNewDocParserCtxt	/usr/include/libxml2/libxml/schematron.h	/^	    xmlSchematronNewDocParserCtxt(xmlDocPtr doc);$/;"	p	signature:(xmlDocPtr doc)
xmlSchematronNewMemParserCtxt	/usr/include/libxml2/libxml/schematron.h	/^	    xmlSchematronNewMemParserCtxt(const char *buffer,$/;"	p	signature:(const char *buffer, int size)
xmlSchematronNewParserCtxt	/usr/include/libxml2/libxml/schematron.h	/^	    xmlSchematronNewParserCtxt	(const char *URL);$/;"	p	signature:(const char *URL)
xmlSchematronNewValidCtxt	/usr/include/libxml2/libxml/schematron.h	/^	    xmlSchematronNewValidCtxt	(xmlSchematronPtr schema,$/;"	p	signature:(xmlSchematronPtr schema, int options)
xmlSchematronParse	/usr/include/libxml2/libxml/schematron.h	/^	    xmlSchematronParse		(xmlSchematronParserCtxtPtr ctxt);$/;"	p	signature:(xmlSchematronParserCtxtPtr ctxt)
xmlSchematronParserCtxt	/usr/include/libxml2/libxml/schematron.h	/^typedef struct _xmlSchematronParserCtxt xmlSchematronParserCtxt;$/;"	t	typeref:struct:_xmlSchematronParserCtxt
xmlSchematronParserCtxtPtr	/usr/include/libxml2/libxml/schematron.h	/^typedef xmlSchematronParserCtxt *xmlSchematronParserCtxtPtr;$/;"	t
xmlSchematronPtr	/usr/include/libxml2/libxml/schematron.h	/^typedef xmlSchematron *xmlSchematronPtr;$/;"	t
xmlSchematronSetValidStructuredErrors	/usr/include/libxml2/libxml/schematron.h	/^	    xmlSchematronSetValidStructuredErrors($/;"	p	signature:( xmlSchematronValidCtxtPtr ctxt, xmlStructuredErrorFunc serror, void *ctx)
xmlSchematronValidCtxt	/usr/include/libxml2/libxml/schematron.h	/^typedef struct _xmlSchematronValidCtxt xmlSchematronValidCtxt;$/;"	t	typeref:struct:_xmlSchematronValidCtxt
xmlSchematronValidCtxtPtr	/usr/include/libxml2/libxml/schematron.h	/^typedef xmlSchematronValidCtxt *xmlSchematronValidCtxtPtr;$/;"	t
xmlSchematronValidOptions	/usr/include/libxml2/libxml/schematron.h	/^} xmlSchematronValidOptions;$/;"	t	typeref:enum:__anon10
xmlSchematronValidateDoc	/usr/include/libxml2/libxml/schematron.h	/^	    xmlSchematronValidateDoc	(xmlSchematronValidCtxtPtr ctxt,$/;"	p	signature:(xmlSchematronValidCtxtPtr ctxt, xmlDocPtr instance)
xmlSchematronValidityErrorFunc	/usr/include/libxml2/libxml/schematron.h	/^typedef void (*xmlSchematronValidityErrorFunc) (void *ctx, const char *msg, ...);$/;"	t
xmlSchematronValidityWarningFunc	/usr/include/libxml2/libxml/schematron.h	/^typedef void (*xmlSchematronValidityWarningFunc) (void *ctx, const char *msg, ...);$/;"	t
xmlSearchNs	/usr/include/libxml2/libxml/tree.h	/^		xmlSearchNs		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodePtr node, const xmlChar *nameSpace)
xmlSearchNsByHref	/usr/include/libxml2/libxml/tree.h	/^		xmlSearchNsByHref	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodePtr node, const xmlChar *href)
xmlSetBufferAllocationScheme	/usr/include/libxml2/libxml/tree.h	/^		xmlSetBufferAllocationScheme(xmlBufferAllocationScheme scheme);$/;"	p	signature:(xmlBufferAllocationScheme scheme)
xmlSetCompressMode	/usr/include/libxml2/libxml/tree.h	/^		xmlSetCompressMode	(int mode);$/;"	p	signature:(int mode)
xmlSetDocCompressMode	/usr/include/libxml2/libxml/tree.h	/^		xmlSetDocCompressMode	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, int mode)
xmlSetEntityReferenceFunc	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN void XMLCALL		xmlSetEntityReferenceFunc	(xmlEntityReferenceFunc func);$/;"	p	signature:(xmlEntityReferenceFunc func)
xmlSetExternalEntityLoader	/usr/include/libxml2/libxml/parser.h	/^		xmlSetExternalEntityLoader(xmlExternalEntityLoader f);$/;"	p	signature:(xmlExternalEntityLoader f)
xmlSetFeature	/usr/include/libxml2/libxml/parser.h	/^		xmlSetFeature		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const char *name, void *value)
xmlSetGenericErrorFunc	/usr/include/libxml2/libxml/xmlerror.h	/^    xmlSetGenericErrorFunc	(void *ctx,$/;"	p	signature:(void *ctx, xmlGenericErrorFunc handler)
xmlSetListDoc	/usr/include/libxml2/libxml/tree.h	/^		xmlSetListDoc		(xmlNodePtr list,$/;"	p	signature:(xmlNodePtr list, xmlDocPtr doc)
xmlSetNs	/usr/include/libxml2/libxml/tree.h	/^		xmlSetNs		(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, xmlNsPtr ns)
xmlSetNsProp	/usr/include/libxml2/libxml/tree.h	/^		xmlSetNsProp		(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, xmlNsPtr ns, const xmlChar *name, const xmlChar *value)
xmlSetProp	/usr/include/libxml2/libxml/tree.h	/^		xmlSetProp		(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, const xmlChar *name, const xmlChar *value)
xmlSetStructuredErrorFunc	/usr/include/libxml2/libxml/xmlerror.h	/^    xmlSetStructuredErrorFunc	(void *ctx,$/;"	p	signature:(void *ctx, xmlStructuredErrorFunc handler)
xmlSetTreeDoc	/usr/include/libxml2/libxml/tree.h	/^		xmlSetTreeDoc		(xmlNodePtr tree,$/;"	p	signature:(xmlNodePtr tree, xmlDocPtr doc)
xmlSetupParserForBuffer	/usr/include/libxml2/libxml/parser.h	/^		xmlSetupParserForBuffer	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const xmlChar* buffer, const char *filename)
xmlShell	/usr/include/libxml2/libxml/debugXML.h	/^	xmlShell		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, char *filename, xmlShellReadlineFunc input, FILE *output)
xmlShellBase	/usr/include/libxml2/libxml/debugXML.h	/^	xmlShellBase		(xmlShellCtxtPtr ctxt,$/;"	p	signature:(xmlShellCtxtPtr ctxt, char *arg, xmlNodePtr node, xmlNodePtr node2)
xmlShellCat	/usr/include/libxml2/libxml/debugXML.h	/^	xmlShellCat		(xmlShellCtxtPtr ctxt,$/;"	p	signature:(xmlShellCtxtPtr ctxt, char *arg, xmlNodePtr node, xmlNodePtr node2)
xmlShellCmd	/usr/include/libxml2/libxml/debugXML.h	/^typedef int (* xmlShellCmd) (xmlShellCtxtPtr ctxt,$/;"	t
xmlShellCtxt	/usr/include/libxml2/libxml/debugXML.h	/^typedef struct _xmlShellCtxt xmlShellCtxt;$/;"	t	typeref:struct:_xmlShellCtxt
xmlShellCtxtPtr	/usr/include/libxml2/libxml/debugXML.h	/^typedef xmlShellCtxt *xmlShellCtxtPtr;$/;"	t
xmlShellDir	/usr/include/libxml2/libxml/debugXML.h	/^	xmlShellDir		(xmlShellCtxtPtr ctxt,$/;"	p	signature:(xmlShellCtxtPtr ctxt, char *arg, xmlNodePtr node, xmlNodePtr node2)
xmlShellDu	/usr/include/libxml2/libxml/debugXML.h	/^	xmlShellDu		(xmlShellCtxtPtr ctxt,$/;"	p	signature:(xmlShellCtxtPtr ctxt, char *arg, xmlNodePtr tree, xmlNodePtr node2)
xmlShellList	/usr/include/libxml2/libxml/debugXML.h	/^	xmlShellList		(xmlShellCtxtPtr ctxt,$/;"	p	signature:(xmlShellCtxtPtr ctxt, char *arg, xmlNodePtr node, xmlNodePtr node2)
xmlShellLoad	/usr/include/libxml2/libxml/debugXML.h	/^	xmlShellLoad		(xmlShellCtxtPtr ctxt,$/;"	p	signature:(xmlShellCtxtPtr ctxt, char *filename, xmlNodePtr node, xmlNodePtr node2)
xmlShellPrintNode	/usr/include/libxml2/libxml/debugXML.h	/^	xmlShellPrintNode	(xmlNodePtr node);$/;"	p	signature:(xmlNodePtr node)
xmlShellPrintXPathError	/usr/include/libxml2/libxml/debugXML.h	/^	xmlShellPrintXPathError	(int errorType,$/;"	p	signature:(int errorType, const char *arg)
xmlShellPrintXPathResult	/usr/include/libxml2/libxml/debugXML.h	/^	xmlShellPrintXPathResult(xmlXPathObjectPtr list);$/;"	p	signature:(xmlXPathObjectPtr list)
xmlShellPwd	/usr/include/libxml2/libxml/debugXML.h	/^	xmlShellPwd		(xmlShellCtxtPtr ctxt,$/;"	p	signature:(xmlShellCtxtPtr ctxt, char *buffer, xmlNodePtr node, xmlNodePtr node2)
xmlShellReadlineFunc	/usr/include/libxml2/libxml/debugXML.h	/^typedef char * (* xmlShellReadlineFunc)(char *prompt);$/;"	t
xmlShellSave	/usr/include/libxml2/libxml/debugXML.h	/^	xmlShellSave		(xmlShellCtxtPtr ctxt,$/;"	p	signature:(xmlShellCtxtPtr ctxt, char *filename, xmlNodePtr node, xmlNodePtr node2)
xmlShellValidate	/usr/include/libxml2/libxml/debugXML.h	/^	xmlShellValidate	(xmlShellCtxtPtr ctxt,$/;"	p	signature:(xmlShellCtxtPtr ctxt, char *dtd, xmlNodePtr node, xmlNodePtr node2)
xmlShellWrite	/usr/include/libxml2/libxml/debugXML.h	/^	xmlShellWrite		(xmlShellCtxtPtr ctxt,$/;"	p	signature:(xmlShellCtxtPtr ctxt, char *filename, xmlNodePtr node, xmlNodePtr node2)
xmlSkipBlankChars	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN int XMLCALL			xmlSkipBlankChars	(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlSnprintfElementContent	/usr/include/libxml2/libxml/valid.h	/^		xmlSnprintfElementContent(char *buf,$/;"	p	signature:(char *buf, int size, xmlElementContentPtr content, int englob)
xmlSplitQName	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlSplitQName		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const xmlChar *name, xmlChar **prefix)
xmlSplitQName2	/usr/include/libxml2/libxml/tree.h	/^		xmlSplitQName2		(const xmlChar *name,$/;"	p	signature:(const xmlChar *name, xmlChar **prefix)
xmlSplitQName3	/usr/include/libxml2/libxml/tree.h	/^		xmlSplitQName3		(const xmlChar *name,$/;"	p	signature:(const xmlChar *name, int *len)
xmlSprintfElementContent	/usr/include/libxml2/libxml/valid.h	/^		xmlSprintfElementContent(char *buf,$/;"	p	signature:(char *buf, xmlElementContentPtr content, int englob)
xmlStopParser	/usr/include/libxml2/libxml/parser.h	/^		xmlStopParser		(xmlParserCtxtPtr ctxt);$/;"	p	signature:(xmlParserCtxtPtr ctxt)
xmlStrEqual	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrEqual              (const xmlChar *str1,$/;"	p	signature:(const xmlChar *str1, const xmlChar *str2)
xmlStrPrintf	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrPrintf             (xmlChar *buf,$/;"	p	signature:(xmlChar *buf, int len, const xmlChar *msg, ...)
xmlStrQEqual	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrQEqual             (const xmlChar *pref,$/;"	p	signature:(const xmlChar *pref, const xmlChar *name, const xmlChar *str)
xmlStrVPrintf	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrVPrintf                (xmlChar *buf,$/;"	p	signature:(xmlChar *buf, int len, const xmlChar *msg, va_list ap)
xmlStrcasecmp	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrcasecmp            (const xmlChar *str1,$/;"	p	signature:(const xmlChar *str1, const xmlChar *str2)
xmlStrcasestr	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrcasestr            (const xmlChar *str,$/;"	p	signature:(const xmlChar *str, const xmlChar *val)
xmlStrcat	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrcat                (xmlChar *cur,$/;"	p	signature:(xmlChar *cur, const xmlChar *add)
xmlStrchr	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrchr                (const xmlChar *str,$/;"	p	signature:(const xmlChar *str, xmlChar val)
xmlStrcmp	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrcmp                (const xmlChar *str1,$/;"	p	signature:(const xmlChar *str1, const xmlChar *str2)
xmlStrdup	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrdup                (const xmlChar *cur);$/;"	p	signature:(const xmlChar *cur)
xmlStrdupFunc	/usr/include/libxml2/libxml/xmlmemory.h	/^typedef char *(XMLCALL *xmlStrdupFunc)(const char *str);$/;"	t
xmlStreamCtxt	/usr/include/libxml2/libxml/pattern.h	/^typedef struct _xmlStreamCtxt xmlStreamCtxt;$/;"	t	typeref:struct:_xmlStreamCtxt
xmlStreamCtxtPtr	/usr/include/libxml2/libxml/pattern.h	/^typedef xmlStreamCtxt *xmlStreamCtxtPtr;$/;"	t
xmlStreamPop	/usr/include/libxml2/libxml/pattern.h	/^			xmlStreamPop		(xmlStreamCtxtPtr stream);$/;"	p	signature:(xmlStreamCtxtPtr stream)
xmlStreamPush	/usr/include/libxml2/libxml/pattern.h	/^			xmlStreamPush		(xmlStreamCtxtPtr stream,$/;"	p	signature:(xmlStreamCtxtPtr stream, const xmlChar *name, const xmlChar *ns)
xmlStreamPushAttr	/usr/include/libxml2/libxml/pattern.h	/^			xmlStreamPushAttr	(xmlStreamCtxtPtr stream,$/;"	p	signature:(xmlStreamCtxtPtr stream, const xmlChar *name, const xmlChar *ns)
xmlStreamPushNode	/usr/include/libxml2/libxml/pattern.h	/^			xmlStreamPushNode	(xmlStreamCtxtPtr stream,$/;"	p	signature:(xmlStreamCtxtPtr stream, const xmlChar *name, const xmlChar *ns, int nodeType)
xmlStreamWantsAnyNode	/usr/include/libxml2/libxml/pattern.h	/^			xmlStreamWantsAnyNode	(xmlStreamCtxtPtr stream);$/;"	p	signature:(xmlStreamCtxtPtr stream)
xmlStringComment	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBVAR const xmlChar xmlStringComment[];$/;"	v
xmlStringCurrentChar	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBFUN int XMLCALL			xmlStringCurrentChar	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const xmlChar *cur, int *len)
xmlStringDecodeEntities	/usr/include/libxml2/libxml/parserInternals.h	/^		xmlStringDecodeEntities		(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const xmlChar *str, int what, xmlChar end, xmlChar end2, xmlChar end3)
xmlStringGetNodeList	/usr/include/libxml2/libxml/tree.h	/^		xmlStringGetNodeList	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *value)
xmlStringLenDecodeEntities	/usr/include/libxml2/libxml/parserInternals.h	/^		xmlStringLenDecodeEntities	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, const xmlChar *str, int len, int what, xmlChar end, xmlChar end2, xmlChar end3)
xmlStringLenGetNodeList	/usr/include/libxml2/libxml/tree.h	/^		xmlStringLenGetNodeList	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, const xmlChar *value, int len)
xmlStringText	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBVAR const xmlChar xmlStringText[];$/;"	v
xmlStringTextNoenc	/usr/include/libxml2/libxml/parserInternals.h	/^XMLPUBVAR const xmlChar xmlStringTextNoenc[];$/;"	v
xmlStrlen	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrlen                (const xmlChar *str);$/;"	p	signature:(const xmlChar *str)
xmlStrncasecmp	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrncasecmp           (const xmlChar *str1,$/;"	p	signature:(const xmlChar *str1, const xmlChar *str2, int len)
xmlStrncat	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrncat               (xmlChar *cur,$/;"	p	signature:(xmlChar *cur, const xmlChar *add, int len)
xmlStrncatNew	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrncatNew            (const xmlChar *str1,$/;"	p	signature:(const xmlChar *str1, const xmlChar *str2, int len)
xmlStrncmp	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrncmp               (const xmlChar *str1,$/;"	p	signature:(const xmlChar *str1, const xmlChar *str2, int len)
xmlStrndup	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrndup               (const xmlChar *cur,$/;"	p	signature:(const xmlChar *cur, int len)
xmlStrstr	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrstr                (const xmlChar *str,$/;"	p	signature:(const xmlChar *str, const xmlChar *val)
xmlStrsub	/usr/include/libxml2/libxml/xmlstring.h	/^                xmlStrsub                (const xmlChar *str,$/;"	p	signature:(const xmlChar *str, int start, int len)
xmlStructuredError	/usr/include/libxml2/libxml/globals.h	/^	xmlStructuredErrorFunc xmlStructuredError;$/;"	m	struct:_xmlGlobalState	access:public
xmlStructuredError	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR xmlStructuredErrorFunc xmlStructuredError;$/;"	v
xmlStructuredError	/usr/include/libxml2/libxml/globals.h	346;"	d
xmlStructuredError	/usr/include/libxml2/libxml/globals.h	77;"	d
xmlStructuredErrorContext	/usr/include/libxml2/libxml/globals.h	/^	void *xmlStructuredErrorContext;$/;"	m	struct:_xmlGlobalState	access:public
xmlStructuredErrorContext	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR void * xmlStructuredErrorContext;$/;"	v
xmlStructuredErrorContext	/usr/include/libxml2/libxml/globals.h	362;"	d
xmlStructuredErrorContext	/usr/include/libxml2/libxml/globals.h	79;"	d
xmlStructuredErrorFunc	/usr/include/libxml2/libxml/xmlerror.h	/^typedef void (XMLCALL *xmlStructuredErrorFunc) (void *userData, xmlErrorPtr error);$/;"	t
xmlSubstituteEntitiesDefault	/usr/include/libxml2/libxml/parser.h	/^		xmlSubstituteEntitiesDefault(int val);$/;"	p	signature:(int val)
xmlSubstituteEntitiesDefaultValue	/usr/include/libxml2/libxml/globals.h	/^	int xmlSubstituteEntitiesDefaultValue;$/;"	m	struct:_xmlGlobalState	access:public
xmlSubstituteEntitiesDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR int xmlSubstituteEntitiesDefaultValue;$/;"	v
xmlSubstituteEntitiesDefaultValue	/usr/include/libxml2/libxml/globals.h	459;"	d
xmlSubstituteEntitiesDefaultValue	/usr/include/libxml2/libxml/globals.h	94;"	d
xmlSwitchEncoding	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlSwitchEncoding	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlCharEncoding enc)
xmlSwitchInputEncoding	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlSwitchInputEncoding	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlParserInputPtr input, xmlCharEncodingHandlerPtr handler)
xmlSwitchToEncoding	/usr/include/libxml2/libxml/parserInternals.h	/^			xmlSwitchToEncoding	(xmlParserCtxtPtr ctxt,$/;"	p	signature:(xmlParserCtxtPtr ctxt, xmlCharEncodingHandlerPtr handler)
xmlTextConcat	/usr/include/libxml2/libxml/tree.h	/^		xmlTextConcat		(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, const xmlChar *content, int len)
xmlTextMerge	/usr/include/libxml2/libxml/tree.h	/^		xmlTextMerge		(xmlNodePtr first,$/;"	p	signature:(xmlNodePtr first, xmlNodePtr second)
xmlTextReader	/usr/include/libxml2/libxml/xmlreader.h	/^typedef struct _xmlTextReader xmlTextReader;$/;"	t	typeref:struct:_xmlTextReader
xmlTextReaderAttributeCount	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderAttributeCount(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderBaseUri	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderBaseUri	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderByteConsumed	/usr/include/libxml2/libxml/xmlreader.h	/^		xmlTextReaderByteConsumed	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderClose	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderClose		(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderConstBaseUri	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderConstBaseUri	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderConstEncoding	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderConstEncoding  (xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderConstLocalName	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderConstLocalName	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderConstName	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderConstName	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderConstNamespaceUri	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderConstNamespaceUri(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderConstPrefix	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderConstPrefix	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderConstString	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderConstString	(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, const xmlChar *str)
xmlTextReaderConstValue	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderConstValue	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderConstXmlLang	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderConstXmlLang	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderConstXmlVersion	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderConstXmlVersion(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderCurrentDoc	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderCurrentDoc	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderCurrentNode	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderCurrentNode	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderDepth	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderDepth	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderErrorFunc	/usr/include/libxml2/libxml/xmlreader.h	/^typedef void   (XMLCALL *xmlTextReaderErrorFunc)(void *arg,$/;"	t
xmlTextReaderExpand	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderExpand		(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderGetAttribute	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderGetAttribute	(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, const xmlChar *name)
xmlTextReaderGetAttributeNo	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderGetAttributeNo	(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, int no)
xmlTextReaderGetAttributeNs	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderGetAttributeNs	(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, const xmlChar *localName, const xmlChar *namespaceURI)
xmlTextReaderGetErrorHandler	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderGetErrorHandler(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, xmlTextReaderErrorFunc *f, void **arg)
xmlTextReaderGetParserColumnNumber	/usr/include/libxml2/libxml/xmlreader.h	/^            xmlTextReaderGetParserColumnNumber(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderGetParserLineNumber	/usr/include/libxml2/libxml/xmlreader.h	/^            xmlTextReaderGetParserLineNumber(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderGetParserProp	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderGetParserProp	(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, int prop)
xmlTextReaderGetRemainder	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderGetRemainder	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderHasAttributes	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderHasAttributes(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderHasValue	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderHasValue(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderIsDefault	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderIsDefault	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderIsEmptyElement	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderIsEmptyElement(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderIsNamespaceDecl	/usr/include/libxml2/libxml/xmlreader.h	/^                        xmlTextReaderIsNamespaceDecl(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderIsValid	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderIsValid	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderLocalName	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderLocalName	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderLocatorBaseURI	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderLocatorBaseURI (xmlTextReaderLocatorPtr locator);$/;"	p	signature:(xmlTextReaderLocatorPtr locator)
xmlTextReaderLocatorLineNumber	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderLocatorLineNumber(xmlTextReaderLocatorPtr locator);$/;"	p	signature:(xmlTextReaderLocatorPtr locator)
xmlTextReaderLocatorPtr	/usr/include/libxml2/libxml/xmlreader.h	/^typedef void *  xmlTextReaderLocatorPtr;$/;"	t
xmlTextReaderLookupNamespace	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderLookupNamespace(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, const xmlChar *prefix)
xmlTextReaderMode	/usr/include/libxml2/libxml/xmlreader.h	/^} xmlTextReaderMode;$/;"	t	typeref:enum:__anon14
xmlTextReaderMoveToAttribute	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderMoveToAttribute(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, const xmlChar *name)
xmlTextReaderMoveToAttributeNo	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderMoveToAttributeNo(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, int no)
xmlTextReaderMoveToAttributeNs	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderMoveToAttributeNs(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, const xmlChar *localName, const xmlChar *namespaceURI)
xmlTextReaderMoveToElement	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderMoveToElement	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderMoveToFirstAttribute	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderMoveToFirstAttribute(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderMoveToNextAttribute	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderMoveToNextAttribute(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderName	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderName	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderNamespaceUri	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderNamespaceUri(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderNext	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderNext		(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderNextSibling	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderNextSibling	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderNodeType	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderNodeType	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderNormalization	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderNormalization	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderPrefix	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderPrefix	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderPreserve	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderPreserve	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderPreservePattern	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderPreservePattern(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, const xmlChar *pattern, const xmlChar **namespaces)
xmlTextReaderPtr	/usr/include/libxml2/libxml/xmlreader.h	/^typedef xmlTextReader *xmlTextReaderPtr;$/;"	t
xmlTextReaderQuoteChar	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderQuoteChar	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderRead	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderRead	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderReadAttributeValue	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderReadAttributeValue	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderReadInnerXml	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderReadInnerXml	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderReadOuterXml	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderReadOuterXml	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderReadState	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderReadState	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderReadString	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderReadString		(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderRelaxNGSetSchema	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderRelaxNGSetSchema(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, xmlRelaxNGPtr schema)
xmlTextReaderRelaxNGValidate	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderRelaxNGValidate(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, const char *rng)
xmlTextReaderRelaxNGValidateCtxt	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderRelaxNGValidateCtxt(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, xmlRelaxNGValidCtxtPtr ctxt, int options)
xmlTextReaderSchemaValidate	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderSchemaValidate	(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, const char *xsd)
xmlTextReaderSchemaValidateCtxt	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderSchemaValidateCtxt(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, xmlSchemaValidCtxtPtr ctxt, int options)
xmlTextReaderSetErrorHandler	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderSetErrorHandler(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, xmlTextReaderErrorFunc f, void *arg)
xmlTextReaderSetParserProp	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderSetParserProp	(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, int prop, int value)
xmlTextReaderSetSchema	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderSetSchema	(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, xmlSchemaPtr schema)
xmlTextReaderSetStructuredErrorHandler	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderSetStructuredErrorHandler(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, xmlStructuredErrorFunc f, void *arg)
xmlTextReaderSetup	/usr/include/libxml2/libxml/xmlreader.h	/^            xmlTextReaderSetup(xmlTextReaderPtr reader,$/;"	p	signature:(xmlTextReaderPtr reader, xmlParserInputBufferPtr input, const char *URL, const char *encoding, int options)
xmlTextReaderStandalone	/usr/include/libxml2/libxml/xmlreader.h	/^		    xmlTextReaderStandalone     (xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderValue	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderValue	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextReaderXmlLang	/usr/include/libxml2/libxml/xmlreader.h	/^			xmlTextReaderXmlLang	(xmlTextReaderPtr reader);$/;"	p	signature:(xmlTextReaderPtr reader)
xmlTextWriter	/usr/include/libxml2/libxml/xmlwriter.h	/^    typedef struct _xmlTextWriter xmlTextWriter;$/;"	t	typeref:struct:_xmlTextWriter
xmlTextWriterEndAttribute	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterEndAttribute(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer)
xmlTextWriterEndCDATA	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterEndCDATA(xmlTextWriterPtr writer);$/;"	p	signature:(xmlTextWriterPtr writer)
xmlTextWriterEndComment	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterEndComment(xmlTextWriterPtr writer);$/;"	p	signature:(xmlTextWriterPtr writer)
xmlTextWriterEndDTD	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterEndDTD(xmlTextWriterPtr writer);$/;"	p	signature:(xmlTextWriterPtr writer)
xmlTextWriterEndDTDAttlist	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterEndDTDAttlist(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer)
xmlTextWriterEndDTDElement	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterEndDTDElement(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer)
xmlTextWriterEndDTDEntity	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterEndDTDEntity(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer)
xmlTextWriterEndDocument	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterEndDocument(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer)
xmlTextWriterEndElement	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterEndElement(xmlTextWriterPtr writer);$/;"	p	signature:(xmlTextWriterPtr writer)
xmlTextWriterEndPI	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterEndPI(xmlTextWriterPtr writer);$/;"	p	signature:(xmlTextWriterPtr writer)
xmlTextWriterFlush	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterFlush(xmlTextWriterPtr writer);$/;"	p	signature:(xmlTextWriterPtr writer)
xmlTextWriterFullEndElement	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterFullEndElement(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer)
xmlTextWriterPtr	/usr/include/libxml2/libxml/xmlwriter.h	/^    typedef xmlTextWriter *xmlTextWriterPtr;$/;"	t
xmlTextWriterSetIndent	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterSetIndent(xmlTextWriterPtr writer, int indent);$/;"	p	signature:(xmlTextWriterPtr writer, int indent)
xmlTextWriterSetIndentString	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterSetIndentString(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * str)
xmlTextWriterStartAttribute	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterStartAttribute(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * name)
xmlTextWriterStartAttributeNS	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterStartAttributeNS(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * prefix, const xmlChar * name, const xmlChar * namespaceURI)
xmlTextWriterStartCDATA	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterStartCDATA(xmlTextWriterPtr writer);$/;"	p	signature:(xmlTextWriterPtr writer)
xmlTextWriterStartComment	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterStartComment(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer)
xmlTextWriterStartDTD	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterStartDTD(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * name, const xmlChar * pubid, const xmlChar * sysid)
xmlTextWriterStartDTDAttlist	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterStartDTDAttlist(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * name)
xmlTextWriterStartDTDElement	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterStartDTDElement(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * name)
xmlTextWriterStartDTDEntity	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterStartDTDEntity(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, int pe, const xmlChar * name)
xmlTextWriterStartDocument	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterStartDocument(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const char *version, const char *encoding, const char *standalone)
xmlTextWriterStartElement	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterStartElement(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * name)
xmlTextWriterStartElementNS	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterStartElementNS(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * prefix, const xmlChar * name, const xmlChar * namespaceURI)
xmlTextWriterStartPI	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterStartPI(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * target)
xmlTextWriterWriteAttribute	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterWriteAttribute(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * name, const xmlChar * content)
xmlTextWriterWriteAttributeNS	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterWriteAttributeNS(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * prefix, const xmlChar * name, const xmlChar * namespaceURI, const xmlChar * content)
xmlTextWriterWriteBase64	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterWriteBase64(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const char *data, int start, int len)
xmlTextWriterWriteBinHex	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterWriteBinHex(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const char *data, int start, int len)
xmlTextWriterWriteCDATA	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterWriteCDATA(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * content)
xmlTextWriterWriteComment	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterWriteComment(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * content)
xmlTextWriterWriteDTD	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterWriteDTD(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * name, const xmlChar * pubid, const xmlChar * sysid, const xmlChar * subset)
xmlTextWriterWriteDTDAttlist	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterWriteDTDAttlist(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * name, const xmlChar * content)
xmlTextWriterWriteDTDElement	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterWriteDTDElement(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * name, const xmlChar * content)
xmlTextWriterWriteDTDEntity	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterWriteDTDEntity(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer, int pe, const xmlChar * name, const xmlChar * pubid, const xmlChar * sysid, const xmlChar * ndataid, const xmlChar * content)
xmlTextWriterWriteDTDExternalEntity	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterWriteDTDExternalEntity(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, int pe, const xmlChar * name, const xmlChar * pubid, const xmlChar * sysid, const xmlChar * ndataid)
xmlTextWriterWriteDTDExternalEntityContents	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterWriteDTDExternalEntityContents(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * pubid, const xmlChar * sysid, const xmlChar * ndataid)
xmlTextWriterWriteDTDInternalEntity	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterWriteDTDInternalEntity(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, int pe, const xmlChar * name, const xmlChar * content)
xmlTextWriterWriteDTDNotation	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterWriteDTDNotation(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * name, const xmlChar * pubid, const xmlChar * sysid)
xmlTextWriterWriteDocType	/usr/include/libxml2/libxml/xmlwriter.h	338;"	d
xmlTextWriterWriteElement	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterWriteElement(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * name, const xmlChar * content)
xmlTextWriterWriteElementNS	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterWriteElementNS(xmlTextWriterPtr$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * prefix, const xmlChar * name, const xmlChar * namespaceURI, const xmlChar * content)
xmlTextWriterWritePI	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterWritePI(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * target, const xmlChar * content)
xmlTextWriterWriteProcessingInstruction	/usr/include/libxml2/libxml/xmlwriter.h	276;"	d
xmlTextWriterWriteRaw	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterWriteRaw(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * content)
xmlTextWriterWriteRawLen	/usr/include/libxml2/libxml/xmlwriter.h	/^        xmlTextWriterWriteRawLen(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * content, int len)
xmlTextWriterWriteString	/usr/include/libxml2/libxml/xmlwriter.h	/^    XMLPUBFUN int XMLCALL xmlTextWriterWriteString(xmlTextWriterPtr writer,$/;"	p	signature:(xmlTextWriterPtr writer, const xmlChar * content)
xmlThrDefBufferAllocScheme	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlBufferAllocationScheme XMLCALL xmlThrDefBufferAllocScheme(xmlBufferAllocationScheme v);$/;"	p	signature:(xmlBufferAllocationScheme v)
xmlThrDefDefaultBufferSize	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int XMLCALL xmlThrDefDefaultBufferSize(int v);$/;"	p	signature:(int v)
xmlThrDefDeregisterNodeDefault	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlDeregisterNodeFunc XMLCALL xmlThrDefDeregisterNodeDefault(xmlDeregisterNodeFunc func);$/;"	p	signature:(xmlDeregisterNodeFunc func)
xmlThrDefDoValidityCheckingDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int XMLCALL xmlThrDefDoValidityCheckingDefaultValue(int v);$/;"	p	signature:(int v)
xmlThrDefGetWarningsDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int XMLCALL xmlThrDefGetWarningsDefaultValue(int v);$/;"	p	signature:(int v)
xmlThrDefIndentTreeOutput	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int XMLCALL xmlThrDefIndentTreeOutput(int v);$/;"	p	signature:(int v)
xmlThrDefKeepBlanksDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int XMLCALL xmlThrDefKeepBlanksDefaultValue(int v);$/;"	p	signature:(int v)
xmlThrDefLineNumbersDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int XMLCALL xmlThrDefLineNumbersDefaultValue(int v);$/;"	p	signature:(int v)
xmlThrDefLoadExtDtdDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int XMLCALL xmlThrDefLoadExtDtdDefaultValue(int v);$/;"	p	signature:(int v)
xmlThrDefOutputBufferCreateFilenameDefault	/usr/include/libxml2/libxml/globals.h	/^	xmlThrDefOutputBufferCreateFilenameDefault(xmlOutputBufferCreateFilenameFunc func);$/;"	p	signature:(xmlOutputBufferCreateFilenameFunc func)
xmlThrDefParserDebugEntities	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int XMLCALL xmlThrDefParserDebugEntities(int v);$/;"	p	signature:(int v)
xmlThrDefParserInputBufferCreateFilenameDefault	/usr/include/libxml2/libxml/globals.h	/^	xmlThrDefParserInputBufferCreateFilenameDefault(xmlParserInputBufferCreateFilenameFunc func);$/;"	p	signature:(xmlParserInputBufferCreateFilenameFunc func)
xmlThrDefPedanticParserDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int XMLCALL xmlThrDefPedanticParserDefaultValue(int v);$/;"	p	signature:(int v)
xmlThrDefRegisterNodeDefault	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN xmlRegisterNodeFunc XMLCALL xmlThrDefRegisterNodeDefault(xmlRegisterNodeFunc func);$/;"	p	signature:(xmlRegisterNodeFunc func)
xmlThrDefSaveNoEmptyTags	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int XMLCALL xmlThrDefSaveNoEmptyTags(int v);$/;"	p	signature:(int v)
xmlThrDefSetGenericErrorFunc	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN void XMLCALL xmlThrDefSetGenericErrorFunc(void *ctx, xmlGenericErrorFunc handler);$/;"	p	signature:(void *ctx, xmlGenericErrorFunc handler)
xmlThrDefSetStructuredErrorFunc	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN void XMLCALL xmlThrDefSetStructuredErrorFunc(void *ctx, xmlStructuredErrorFunc handler);$/;"	p	signature:(void *ctx, xmlStructuredErrorFunc handler)
xmlThrDefSubstituteEntitiesDefaultValue	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN int XMLCALL xmlThrDefSubstituteEntitiesDefaultValue(int v);$/;"	p	signature:(int v)
xmlThrDefTreeIndentString	/usr/include/libxml2/libxml/globals.h	/^XMLPUBFUN const char * XMLCALL xmlThrDefTreeIndentString(const char * v);$/;"	p	signature:(const char * v)
xmlTreeIndentString	/usr/include/libxml2/libxml/globals.h	/^	const char *xmlTreeIndentString;$/;"	m	struct:_xmlGlobalState	access:public
xmlTreeIndentString	/usr/include/libxml2/libxml/globals.h	/^XMLPUBVAR const char * xmlTreeIndentString;$/;"	v
xmlTreeIndentString	/usr/include/libxml2/libxml/globals.h	388;"	d
xmlTreeIndentString	/usr/include/libxml2/libxml/globals.h	82;"	d
xmlUCSIsAegeanNumbers	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsAegeanNumbers	(int code);$/;"	p	signature:(int code)
xmlUCSIsAlphabeticPresentationForms	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsAlphabeticPresentationForms	(int code);$/;"	p	signature:(int code)
xmlUCSIsArabic	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsArabic	(int code);$/;"	p	signature:(int code)
xmlUCSIsArabicPresentationFormsA	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsArabicPresentationFormsA	(int code);$/;"	p	signature:(int code)
xmlUCSIsArabicPresentationFormsB	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsArabicPresentationFormsB	(int code);$/;"	p	signature:(int code)
xmlUCSIsArmenian	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsArmenian	(int code);$/;"	p	signature:(int code)
xmlUCSIsArrows	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsArrows	(int code);$/;"	p	signature:(int code)
xmlUCSIsBasicLatin	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsBasicLatin	(int code);$/;"	p	signature:(int code)
xmlUCSIsBengali	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsBengali	(int code);$/;"	p	signature:(int code)
xmlUCSIsBlock	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsBlock	(int code, const char *block);$/;"	p	signature:(int code, const char *block)
xmlUCSIsBlockElements	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsBlockElements	(int code);$/;"	p	signature:(int code)
xmlUCSIsBopomofo	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsBopomofo	(int code);$/;"	p	signature:(int code)
xmlUCSIsBopomofoExtended	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsBopomofoExtended	(int code);$/;"	p	signature:(int code)
xmlUCSIsBoxDrawing	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsBoxDrawing	(int code);$/;"	p	signature:(int code)
xmlUCSIsBraillePatterns	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsBraillePatterns	(int code);$/;"	p	signature:(int code)
xmlUCSIsBuhid	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsBuhid	(int code);$/;"	p	signature:(int code)
xmlUCSIsByzantineMusicalSymbols	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsByzantineMusicalSymbols	(int code);$/;"	p	signature:(int code)
xmlUCSIsCJKCompatibility	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCJKCompatibility	(int code);$/;"	p	signature:(int code)
xmlUCSIsCJKCompatibilityForms	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCJKCompatibilityForms	(int code);$/;"	p	signature:(int code)
xmlUCSIsCJKCompatibilityIdeographs	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCJKCompatibilityIdeographs	(int code);$/;"	p	signature:(int code)
xmlUCSIsCJKCompatibilityIdeographsSupplement	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCJKCompatibilityIdeographsSupplement	(int code);$/;"	p	signature:(int code)
xmlUCSIsCJKRadicalsSupplement	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCJKRadicalsSupplement	(int code);$/;"	p	signature:(int code)
xmlUCSIsCJKSymbolsandPunctuation	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCJKSymbolsandPunctuation	(int code);$/;"	p	signature:(int code)
xmlUCSIsCJKUnifiedIdeographs	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCJKUnifiedIdeographs	(int code);$/;"	p	signature:(int code)
xmlUCSIsCJKUnifiedIdeographsExtensionA	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCJKUnifiedIdeographsExtensionA	(int code);$/;"	p	signature:(int code)
xmlUCSIsCJKUnifiedIdeographsExtensionB	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCJKUnifiedIdeographsExtensionB	(int code);$/;"	p	signature:(int code)
xmlUCSIsCat	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCat	(int code, const char *cat);$/;"	p	signature:(int code, const char *cat)
xmlUCSIsCatC	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatC	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatCc	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatCc	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatCf	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatCf	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatCo	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatCo	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatCs	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatCs	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatL	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatL	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatLl	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatLl	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatLm	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatLm	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatLo	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatLo	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatLt	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatLt	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatLu	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatLu	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatM	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatM	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatMc	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatMc	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatMe	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatMe	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatMn	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatMn	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatN	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatN	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatNd	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatNd	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatNl	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatNl	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatNo	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatNo	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatP	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatP	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatPc	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatPc	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatPd	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatPd	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatPe	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatPe	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatPf	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatPf	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatPi	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatPi	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatPo	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatPo	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatPs	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatPs	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatS	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatS	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatSc	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatSc	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatSk	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatSk	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatSm	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatSm	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatSo	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatSo	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatZ	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatZ	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatZl	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatZl	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatZp	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatZp	(int code);$/;"	p	signature:(int code)
xmlUCSIsCatZs	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCatZs	(int code);$/;"	p	signature:(int code)
xmlUCSIsCherokee	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCherokee	(int code);$/;"	p	signature:(int code)
xmlUCSIsCombiningDiacriticalMarks	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCombiningDiacriticalMarks	(int code);$/;"	p	signature:(int code)
xmlUCSIsCombiningDiacriticalMarksforSymbols	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCombiningDiacriticalMarksforSymbols	(int code);$/;"	p	signature:(int code)
xmlUCSIsCombiningHalfMarks	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCombiningHalfMarks	(int code);$/;"	p	signature:(int code)
xmlUCSIsCombiningMarksforSymbols	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCombiningMarksforSymbols	(int code);$/;"	p	signature:(int code)
xmlUCSIsControlPictures	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsControlPictures	(int code);$/;"	p	signature:(int code)
xmlUCSIsCurrencySymbols	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCurrencySymbols	(int code);$/;"	p	signature:(int code)
xmlUCSIsCypriotSyllabary	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCypriotSyllabary	(int code);$/;"	p	signature:(int code)
xmlUCSIsCyrillic	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCyrillic	(int code);$/;"	p	signature:(int code)
xmlUCSIsCyrillicSupplement	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsCyrillicSupplement	(int code);$/;"	p	signature:(int code)
xmlUCSIsDeseret	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsDeseret	(int code);$/;"	p	signature:(int code)
xmlUCSIsDevanagari	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsDevanagari	(int code);$/;"	p	signature:(int code)
xmlUCSIsDingbats	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsDingbats	(int code);$/;"	p	signature:(int code)
xmlUCSIsEnclosedAlphanumerics	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsEnclosedAlphanumerics	(int code);$/;"	p	signature:(int code)
xmlUCSIsEnclosedCJKLettersandMonths	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsEnclosedCJKLettersandMonths	(int code);$/;"	p	signature:(int code)
xmlUCSIsEthiopic	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsEthiopic	(int code);$/;"	p	signature:(int code)
xmlUCSIsGeneralPunctuation	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsGeneralPunctuation	(int code);$/;"	p	signature:(int code)
xmlUCSIsGeometricShapes	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsGeometricShapes	(int code);$/;"	p	signature:(int code)
xmlUCSIsGeorgian	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsGeorgian	(int code);$/;"	p	signature:(int code)
xmlUCSIsGothic	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsGothic	(int code);$/;"	p	signature:(int code)
xmlUCSIsGreek	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsGreek	(int code);$/;"	p	signature:(int code)
xmlUCSIsGreekExtended	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsGreekExtended	(int code);$/;"	p	signature:(int code)
xmlUCSIsGreekandCoptic	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsGreekandCoptic	(int code);$/;"	p	signature:(int code)
xmlUCSIsGujarati	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsGujarati	(int code);$/;"	p	signature:(int code)
xmlUCSIsGurmukhi	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsGurmukhi	(int code);$/;"	p	signature:(int code)
xmlUCSIsHalfwidthandFullwidthForms	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsHalfwidthandFullwidthForms	(int code);$/;"	p	signature:(int code)
xmlUCSIsHangulCompatibilityJamo	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsHangulCompatibilityJamo	(int code);$/;"	p	signature:(int code)
xmlUCSIsHangulJamo	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsHangulJamo	(int code);$/;"	p	signature:(int code)
xmlUCSIsHangulSyllables	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsHangulSyllables	(int code);$/;"	p	signature:(int code)
xmlUCSIsHanunoo	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsHanunoo	(int code);$/;"	p	signature:(int code)
xmlUCSIsHebrew	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsHebrew	(int code);$/;"	p	signature:(int code)
xmlUCSIsHighPrivateUseSurrogates	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsHighPrivateUseSurrogates	(int code);$/;"	p	signature:(int code)
xmlUCSIsHighSurrogates	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsHighSurrogates	(int code);$/;"	p	signature:(int code)
xmlUCSIsHiragana	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsHiragana	(int code);$/;"	p	signature:(int code)
xmlUCSIsIPAExtensions	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsIPAExtensions	(int code);$/;"	p	signature:(int code)
xmlUCSIsIdeographicDescriptionCharacters	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsIdeographicDescriptionCharacters	(int code);$/;"	p	signature:(int code)
xmlUCSIsKanbun	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsKanbun	(int code);$/;"	p	signature:(int code)
xmlUCSIsKangxiRadicals	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsKangxiRadicals	(int code);$/;"	p	signature:(int code)
xmlUCSIsKannada	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsKannada	(int code);$/;"	p	signature:(int code)
xmlUCSIsKatakana	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsKatakana	(int code);$/;"	p	signature:(int code)
xmlUCSIsKatakanaPhoneticExtensions	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsKatakanaPhoneticExtensions	(int code);$/;"	p	signature:(int code)
xmlUCSIsKhmer	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsKhmer	(int code);$/;"	p	signature:(int code)
xmlUCSIsKhmerSymbols	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsKhmerSymbols	(int code);$/;"	p	signature:(int code)
xmlUCSIsLao	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsLao	(int code);$/;"	p	signature:(int code)
xmlUCSIsLatin1Supplement	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsLatin1Supplement	(int code);$/;"	p	signature:(int code)
xmlUCSIsLatinExtendedA	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsLatinExtendedA	(int code);$/;"	p	signature:(int code)
xmlUCSIsLatinExtendedAdditional	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsLatinExtendedAdditional	(int code);$/;"	p	signature:(int code)
xmlUCSIsLatinExtendedB	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsLatinExtendedB	(int code);$/;"	p	signature:(int code)
xmlUCSIsLetterlikeSymbols	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsLetterlikeSymbols	(int code);$/;"	p	signature:(int code)
xmlUCSIsLimbu	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsLimbu	(int code);$/;"	p	signature:(int code)
xmlUCSIsLinearBIdeograms	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsLinearBIdeograms	(int code);$/;"	p	signature:(int code)
xmlUCSIsLinearBSyllabary	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsLinearBSyllabary	(int code);$/;"	p	signature:(int code)
xmlUCSIsLowSurrogates	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsLowSurrogates	(int code);$/;"	p	signature:(int code)
xmlUCSIsMalayalam	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsMalayalam	(int code);$/;"	p	signature:(int code)
xmlUCSIsMathematicalAlphanumericSymbols	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsMathematicalAlphanumericSymbols	(int code);$/;"	p	signature:(int code)
xmlUCSIsMathematicalOperators	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsMathematicalOperators	(int code);$/;"	p	signature:(int code)
xmlUCSIsMiscellaneousMathematicalSymbolsA	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsMiscellaneousMathematicalSymbolsA	(int code);$/;"	p	signature:(int code)
xmlUCSIsMiscellaneousMathematicalSymbolsB	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsMiscellaneousMathematicalSymbolsB	(int code);$/;"	p	signature:(int code)
xmlUCSIsMiscellaneousSymbols	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsMiscellaneousSymbols	(int code);$/;"	p	signature:(int code)
xmlUCSIsMiscellaneousSymbolsandArrows	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsMiscellaneousSymbolsandArrows	(int code);$/;"	p	signature:(int code)
xmlUCSIsMiscellaneousTechnical	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsMiscellaneousTechnical	(int code);$/;"	p	signature:(int code)
xmlUCSIsMongolian	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsMongolian	(int code);$/;"	p	signature:(int code)
xmlUCSIsMusicalSymbols	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsMusicalSymbols	(int code);$/;"	p	signature:(int code)
xmlUCSIsMyanmar	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsMyanmar	(int code);$/;"	p	signature:(int code)
xmlUCSIsNumberForms	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsNumberForms	(int code);$/;"	p	signature:(int code)
xmlUCSIsOgham	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsOgham	(int code);$/;"	p	signature:(int code)
xmlUCSIsOldItalic	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsOldItalic	(int code);$/;"	p	signature:(int code)
xmlUCSIsOpticalCharacterRecognition	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsOpticalCharacterRecognition	(int code);$/;"	p	signature:(int code)
xmlUCSIsOriya	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsOriya	(int code);$/;"	p	signature:(int code)
xmlUCSIsOsmanya	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsOsmanya	(int code);$/;"	p	signature:(int code)
xmlUCSIsPhoneticExtensions	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsPhoneticExtensions	(int code);$/;"	p	signature:(int code)
xmlUCSIsPrivateUse	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsPrivateUse	(int code);$/;"	p	signature:(int code)
xmlUCSIsPrivateUseArea	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsPrivateUseArea	(int code);$/;"	p	signature:(int code)
xmlUCSIsRunic	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsRunic	(int code);$/;"	p	signature:(int code)
xmlUCSIsShavian	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsShavian	(int code);$/;"	p	signature:(int code)
xmlUCSIsSinhala	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsSinhala	(int code);$/;"	p	signature:(int code)
xmlUCSIsSmallFormVariants	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsSmallFormVariants	(int code);$/;"	p	signature:(int code)
xmlUCSIsSpacingModifierLetters	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsSpacingModifierLetters	(int code);$/;"	p	signature:(int code)
xmlUCSIsSpecials	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsSpecials	(int code);$/;"	p	signature:(int code)
xmlUCSIsSuperscriptsandSubscripts	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsSuperscriptsandSubscripts	(int code);$/;"	p	signature:(int code)
xmlUCSIsSupplementalArrowsA	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsSupplementalArrowsA	(int code);$/;"	p	signature:(int code)
xmlUCSIsSupplementalArrowsB	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsSupplementalArrowsB	(int code);$/;"	p	signature:(int code)
xmlUCSIsSupplementalMathematicalOperators	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsSupplementalMathematicalOperators	(int code);$/;"	p	signature:(int code)
xmlUCSIsSupplementaryPrivateUseAreaA	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsSupplementaryPrivateUseAreaA	(int code);$/;"	p	signature:(int code)
xmlUCSIsSupplementaryPrivateUseAreaB	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsSupplementaryPrivateUseAreaB	(int code);$/;"	p	signature:(int code)
xmlUCSIsSyriac	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsSyriac	(int code);$/;"	p	signature:(int code)
xmlUCSIsTagalog	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsTagalog	(int code);$/;"	p	signature:(int code)
xmlUCSIsTagbanwa	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsTagbanwa	(int code);$/;"	p	signature:(int code)
xmlUCSIsTags	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsTags	(int code);$/;"	p	signature:(int code)
xmlUCSIsTaiLe	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsTaiLe	(int code);$/;"	p	signature:(int code)
xmlUCSIsTaiXuanJingSymbols	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsTaiXuanJingSymbols	(int code);$/;"	p	signature:(int code)
xmlUCSIsTamil	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsTamil	(int code);$/;"	p	signature:(int code)
xmlUCSIsTelugu	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsTelugu	(int code);$/;"	p	signature:(int code)
xmlUCSIsThaana	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsThaana	(int code);$/;"	p	signature:(int code)
xmlUCSIsThai	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsThai	(int code);$/;"	p	signature:(int code)
xmlUCSIsTibetan	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsTibetan	(int code);$/;"	p	signature:(int code)
xmlUCSIsUgaritic	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsUgaritic	(int code);$/;"	p	signature:(int code)
xmlUCSIsUnifiedCanadianAboriginalSyllabics	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsUnifiedCanadianAboriginalSyllabics	(int code);$/;"	p	signature:(int code)
xmlUCSIsVariationSelectors	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsVariationSelectors	(int code);$/;"	p	signature:(int code)
xmlUCSIsVariationSelectorsSupplement	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsVariationSelectorsSupplement	(int code);$/;"	p	signature:(int code)
xmlUCSIsYiRadicals	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsYiRadicals	(int code);$/;"	p	signature:(int code)
xmlUCSIsYiSyllables	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsYiSyllables	(int code);$/;"	p	signature:(int code)
xmlUCSIsYijingHexagramSymbols	/usr/include/libxml2/libxml/xmlunicode.h	/^XMLPUBFUN int XMLCALL xmlUCSIsYijingHexagramSymbols	(int code);$/;"	p	signature:(int code)
xmlURI	/usr/include/libxml2/libxml/uri.h	/^typedef struct _xmlURI xmlURI;$/;"	t	typeref:struct:_xmlURI
xmlURIEscape	/usr/include/libxml2/libxml/uri.h	/^		xmlURIEscape		(const xmlChar *str);$/;"	p	signature:(const xmlChar *str)
xmlURIEscapeStr	/usr/include/libxml2/libxml/uri.h	/^		xmlURIEscapeStr         (const xmlChar *str,$/;"	p	signature:(const xmlChar *str, const xmlChar *list)
xmlURIPtr	/usr/include/libxml2/libxml/uri.h	/^typedef xmlURI *xmlURIPtr;$/;"	t
xmlURIUnescapeString	/usr/include/libxml2/libxml/uri.h	/^		xmlURIUnescapeString	(const char *str,$/;"	p	signature:(const char *str, int len, char *target)
xmlUTF8Charcmp	/usr/include/libxml2/libxml/xmlstring.h	/^        xmlUTF8Charcmp                   (const xmlChar *utf1,$/;"	p	signature:(const xmlChar *utf1, const xmlChar *utf2)
xmlUTF8Size	/usr/include/libxml2/libxml/xmlstring.h	/^        xmlUTF8Size                      (const xmlChar *utf);$/;"	p	signature:(const xmlChar *utf)
xmlUTF8Strlen	/usr/include/libxml2/libxml/xmlstring.h	/^        xmlUTF8Strlen                    (const xmlChar *utf);$/;"	p	signature:(const xmlChar *utf)
xmlUTF8Strloc	/usr/include/libxml2/libxml/xmlstring.h	/^        xmlUTF8Strloc                    (const xmlChar *utf,$/;"	p	signature:(const xmlChar *utf, const xmlChar *utfchar)
xmlUTF8Strndup	/usr/include/libxml2/libxml/xmlstring.h	/^        xmlUTF8Strndup                   (const xmlChar *utf,$/;"	p	signature:(const xmlChar *utf, int len)
xmlUTF8Strpos	/usr/include/libxml2/libxml/xmlstring.h	/^        xmlUTF8Strpos                    (const xmlChar *utf,$/;"	p	signature:(const xmlChar *utf, int pos)
xmlUTF8Strsize	/usr/include/libxml2/libxml/xmlstring.h	/^        xmlUTF8Strsize                   (const xmlChar *utf,$/;"	p	signature:(const xmlChar *utf, int len)
xmlUTF8Strsub	/usr/include/libxml2/libxml/xmlstring.h	/^        xmlUTF8Strsub                    (const xmlChar *utf,$/;"	p	signature:(const xmlChar *utf, int start, int len)
xmlUnlinkNode	/usr/include/libxml2/libxml/tree.h	/^		xmlUnlinkNode		(xmlNodePtr cur);$/;"	p	signature:(xmlNodePtr cur)
xmlUnlockLibrary	/usr/include/libxml2/libxml/threads.h	/^			xmlUnlockLibrary(void);$/;"	p	signature:(void)
xmlUnsetNsProp	/usr/include/libxml2/libxml/tree.h	/^		xmlUnsetNsProp		(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, xmlNsPtr ns, const xmlChar *name)
xmlUnsetProp	/usr/include/libxml2/libxml/tree.h	/^		xmlUnsetProp		(xmlNodePtr node,$/;"	p	signature:(xmlNodePtr node, const xmlChar *name)
xmlValidBuildContentModel	/usr/include/libxml2/libxml/valid.h	/^		xmlValidBuildContentModel(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlElementPtr elem)
xmlValidCtxt	/usr/include/libxml2/libxml/valid.h	/^typedef struct _xmlValidCtxt xmlValidCtxt;$/;"	t	typeref:struct:_xmlValidCtxt
xmlValidCtxtNormalizeAttributeValue	/usr/include/libxml2/libxml/valid.h	/^		xmlValidCtxtNormalizeAttributeValue(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc, xmlNodePtr elem, const xmlChar *name, const xmlChar *value)
xmlValidCtxtPtr	/usr/include/libxml2/libxml/valid.h	/^typedef xmlValidCtxt *xmlValidCtxtPtr;$/;"	t
xmlValidGetPotentialChildren	/usr/include/libxml2/libxml/valid.h	/^		xmlValidGetPotentialChildren(xmlElementContent *ctree,$/;"	p	signature:(xmlElementContent *ctree, const xmlChar **names, int *len, int max)
xmlValidGetValidElements	/usr/include/libxml2/libxml/valid.h	/^		xmlValidGetValidElements(xmlNode *prev,$/;"	p	signature:(xmlNode *prev, xmlNode *next, const xmlChar **names, int max)
xmlValidNormalizeAttributeValue	/usr/include/libxml2/libxml/valid.h	/^		xmlValidNormalizeAttributeValue(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodePtr elem, const xmlChar *name, const xmlChar *value)
xmlValidState	/usr/include/libxml2/libxml/valid.h	/^typedef struct _xmlValidState xmlValidState;$/;"	t	typeref:struct:_xmlValidState
xmlValidStatePtr	/usr/include/libxml2/libxml/valid.h	/^typedef xmlValidState *xmlValidStatePtr;$/;"	t
xmlValidateAttributeDecl	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateAttributeDecl(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc, xmlAttributePtr attr)
xmlValidateAttributeValue	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateAttributeValue(xmlAttributeType type,$/;"	p	signature:(xmlAttributeType type, const xmlChar *value)
xmlValidateDocument	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateDocument	(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc)
xmlValidateDocumentFinal	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateDocumentFinal(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc)
xmlValidateDtd	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateDtd		(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc, xmlDtdPtr dtd)
xmlValidateDtdFinal	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateDtdFinal	(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc)
xmlValidateElement	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateElement	(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc, xmlNodePtr elem)
xmlValidateElementDecl	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateElementDecl	(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc, xmlElementPtr elem)
xmlValidateNCName	/usr/include/libxml2/libxml/tree.h	/^		xmlValidateNCName	(const xmlChar *value,$/;"	p	signature:(const xmlChar *value, int space)
xmlValidateNMToken	/usr/include/libxml2/libxml/tree.h	/^		xmlValidateNMToken	(const xmlChar *value,$/;"	p	signature:(const xmlChar *value, int space)
xmlValidateName	/usr/include/libxml2/libxml/tree.h	/^		xmlValidateName		(const xmlChar *value,$/;"	p	signature:(const xmlChar *value, int space)
xmlValidateNameValue	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateNameValue	(const xmlChar *value);$/;"	p	signature:(const xmlChar *value)
xmlValidateNamesValue	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateNamesValue	(const xmlChar *value);$/;"	p	signature:(const xmlChar *value)
xmlValidateNmtokenValue	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateNmtokenValue	(const xmlChar *value);$/;"	p	signature:(const xmlChar *value)
xmlValidateNmtokensValue	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateNmtokensValue(const xmlChar *value);$/;"	p	signature:(const xmlChar *value)
xmlValidateNotationDecl	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateNotationDecl	(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc, xmlNotationPtr nota)
xmlValidateNotationUse	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateNotationUse	(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc, const xmlChar *notationName)
xmlValidateOneAttribute	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateOneAttribute	(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc, xmlNodePtr elem, xmlAttrPtr attr, const xmlChar *value)
xmlValidateOneElement	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateOneElement	(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc, xmlNodePtr elem)
xmlValidateOneNamespace	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateOneNamespace	(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc, xmlNodePtr elem, const xmlChar *prefix, xmlNsPtr ns, const xmlChar *value)
xmlValidatePopElement	/usr/include/libxml2/libxml/valid.h	/^		xmlValidatePopElement	(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc, xmlNodePtr elem, const xmlChar *qname)
xmlValidatePushCData	/usr/include/libxml2/libxml/valid.h	/^		xmlValidatePushCData	(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, const xmlChar *data, int len)
xmlValidatePushElement	/usr/include/libxml2/libxml/valid.h	/^		xmlValidatePushElement	(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc, xmlNodePtr elem, const xmlChar *qname)
xmlValidateQName	/usr/include/libxml2/libxml/tree.h	/^		xmlValidateQName	(const xmlChar *value,$/;"	p	signature:(const xmlChar *value, int space)
xmlValidateRoot	/usr/include/libxml2/libxml/valid.h	/^		xmlValidateRoot		(xmlValidCtxtPtr ctxt,$/;"	p	signature:(xmlValidCtxtPtr ctxt, xmlDocPtr doc)
xmlXIncludeCtxt	/usr/include/libxml2/libxml/xinclude.h	/^typedef struct _xmlXIncludeCtxt xmlXIncludeCtxt;$/;"	t	typeref:struct:_xmlXIncludeCtxt
xmlXIncludeCtxtPtr	/usr/include/libxml2/libxml/xinclude.h	/^typedef xmlXIncludeCtxt *xmlXIncludeCtxtPtr;$/;"	t
xmlXIncludeFreeContext	/usr/include/libxml2/libxml/xinclude.h	/^		xmlXIncludeFreeContext	(xmlXIncludeCtxtPtr ctxt);$/;"	p	signature:(xmlXIncludeCtxtPtr ctxt)
xmlXIncludeNewContext	/usr/include/libxml2/libxml/xinclude.h	/^		xmlXIncludeNewContext	(xmlDocPtr doc);$/;"	p	signature:(xmlDocPtr doc)
xmlXIncludeProcess	/usr/include/libxml2/libxml/xinclude.h	/^		xmlXIncludeProcess	(xmlDocPtr doc);$/;"	p	signature:(xmlDocPtr doc)
xmlXIncludeProcessFlags	/usr/include/libxml2/libxml/xinclude.h	/^		xmlXIncludeProcessFlags	(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, int flags)
xmlXIncludeProcessFlagsData	/usr/include/libxml2/libxml/xinclude.h	/^		xmlXIncludeProcessFlagsData(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, int flags, void *data)
xmlXIncludeProcessNode	/usr/include/libxml2/libxml/xinclude.h	/^		xmlXIncludeProcessNode	(xmlXIncludeCtxtPtr ctxt,$/;"	p	signature:(xmlXIncludeCtxtPtr ctxt, xmlNodePtr tree)
xmlXIncludeProcessTree	/usr/include/libxml2/libxml/xinclude.h	/^		xmlXIncludeProcessTree	(xmlNodePtr tree);$/;"	p	signature:(xmlNodePtr tree)
xmlXIncludeProcessTreeFlags	/usr/include/libxml2/libxml/xinclude.h	/^		xmlXIncludeProcessTreeFlags(xmlNodePtr tree,$/;"	p	signature:(xmlNodePtr tree, int flags)
xmlXIncludeProcessTreeFlagsData	/usr/include/libxml2/libxml/xinclude.h	/^                xmlXIncludeProcessTreeFlagsData(xmlNodePtr tree,$/;"	p	signature:(xmlNodePtr tree, int flags, void *data)
xmlXIncludeSetFlags	/usr/include/libxml2/libxml/xinclude.h	/^		xmlXIncludeSetFlags	(xmlXIncludeCtxtPtr ctxt,$/;"	p	signature:(xmlXIncludeCtxtPtr ctxt, int flags)
xmlXPathAddValues	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathAddValues(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathAxis	/usr/include/libxml2/libxml/xpath.h	/^typedef struct _xmlXPathAxis xmlXPathAxis;$/;"	t	typeref:struct:_xmlXPathAxis
xmlXPathAxisFunc	/usr/include/libxml2/libxml/xpath.h	/^typedef xmlXPathObjectPtr (*xmlXPathAxisFunc) (xmlXPathParserContextPtr ctxt,$/;"	t
xmlXPathAxisPtr	/usr/include/libxml2/libxml/xpath.h	/^typedef xmlXPathAxis *xmlXPathAxisPtr;$/;"	t
xmlXPathBooleanFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathBooleanFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathCastBooleanToNumber	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCastBooleanToNumber	(int val);$/;"	p	signature:(int val)
xmlXPathCastBooleanToString	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCastBooleanToString	(int val);$/;"	p	signature:(int val)
xmlXPathCastNodeSetToBoolean	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCastNodeSetToBoolean(xmlNodeSetPtr ns);$/;"	p	signature:(xmlNodeSetPtr ns)
xmlXPathCastNodeSetToNumber	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCastNodeSetToNumber	(xmlNodeSetPtr ns);$/;"	p	signature:(xmlNodeSetPtr ns)
xmlXPathCastNodeSetToString	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCastNodeSetToString	(xmlNodeSetPtr ns);$/;"	p	signature:(xmlNodeSetPtr ns)
xmlXPathCastNodeToNumber	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCastNodeToNumber	(xmlNodePtr node);$/;"	p	signature:(xmlNodePtr node)
xmlXPathCastNodeToString	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCastNodeToString	(xmlNodePtr node);$/;"	p	signature:(xmlNodePtr node)
xmlXPathCastNumberToBoolean	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCastNumberToBoolean	(double val);$/;"	p	signature:(double val)
xmlXPathCastNumberToString	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCastNumberToString	(double val);$/;"	p	signature:(double val)
xmlXPathCastStringToBoolean	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCastStringToBoolean	(const xmlChar * val);$/;"	p	signature:(const xmlChar * val)
xmlXPathCastStringToNumber	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCastStringToNumber	(const xmlChar * val);$/;"	p	signature:(const xmlChar * val)
xmlXPathCastToBoolean	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCastToBoolean	(xmlXPathObjectPtr val);$/;"	p	signature:(xmlXPathObjectPtr val)
xmlXPathCastToNumber	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCastToNumber	(xmlXPathObjectPtr val);$/;"	p	signature:(xmlXPathObjectPtr val)
xmlXPathCastToString	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCastToString	(xmlXPathObjectPtr val);$/;"	p	signature:(xmlXPathObjectPtr val)
xmlXPathCeilingFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathCeilingFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathCheckError	/usr/include/libxml2/libxml/xpathInternals.h	81;"	d
xmlXPathCmpNodes	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCmpNodes		(xmlNodePtr node1,$/;"	p	signature:(xmlNodePtr node1, xmlNodePtr node2)
xmlXPathCompExpr	/usr/include/libxml2/libxml/xpath.h	/^typedef struct _xmlXPathCompExpr xmlXPathCompExpr;$/;"	t	typeref:struct:_xmlXPathCompExpr
xmlXPathCompExprPtr	/usr/include/libxml2/libxml/xpath.h	/^typedef xmlXPathCompExpr *xmlXPathCompExprPtr;$/;"	t
xmlXPathCompareValues	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN int XMLCALL xmlXPathCompareValues(xmlXPathParserContextPtr ctxt, int inf, int strict);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int inf, int strict)
xmlXPathCompile	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCompile		(const xmlChar *str);$/;"	p	signature:(const xmlChar *str)
xmlXPathCompiledEval	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCompiledEval	(xmlXPathCompExprPtr comp,$/;"	p	signature:(xmlXPathCompExprPtr comp, xmlXPathContextPtr ctx)
xmlXPathCompiledEvalToBoolean	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCompiledEvalToBoolean(xmlXPathCompExprPtr comp,$/;"	p	signature:(xmlXPathCompExprPtr comp, xmlXPathContextPtr ctxt)
xmlXPathConcatFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathConcatFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathContainsFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathContainsFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathContext	/usr/include/libxml2/libxml/xpath.h	/^typedef struct _xmlXPathContext xmlXPathContext;$/;"	t	typeref:struct:_xmlXPathContext
xmlXPathContextPtr	/usr/include/libxml2/libxml/xpath.h	/^typedef xmlXPathContext *xmlXPathContextPtr;$/;"	t
xmlXPathContextSetCache	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathContextSetCache(xmlXPathContextPtr ctxt,$/;"	p	signature:(xmlXPathContextPtr ctxt, int active, int value, int options)
xmlXPathConvertBoolean	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathConvertBoolean	(xmlXPathObjectPtr val);$/;"	p	signature:(xmlXPathObjectPtr val)
xmlXPathConvertFunc	/usr/include/libxml2/libxml/xpath.h	/^typedef int (*xmlXPathConvertFunc) (xmlXPathObjectPtr obj, int type);$/;"	t
xmlXPathConvertNumber	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathConvertNumber	(xmlXPathObjectPtr val);$/;"	p	signature:(xmlXPathObjectPtr val)
xmlXPathConvertString	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathConvertString	(xmlXPathObjectPtr val);$/;"	p	signature:(xmlXPathObjectPtr val)
xmlXPathCountFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathCountFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathCtxtCompile	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathCtxtCompile		(xmlXPathContextPtr ctxt,$/;"	p	signature:(xmlXPathContextPtr ctxt, const xmlChar *str)
xmlXPathDebugDumpCompExpr	/usr/include/libxml2/libxml/xpathInternals.h	/^	    xmlXPathDebugDumpCompExpr(FILE *output,$/;"	p	signature:(FILE *output, xmlXPathCompExprPtr comp, int depth)
xmlXPathDebugDumpObject	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathDebugDumpObject	(FILE *output,$/;"	p	signature:(FILE *output, xmlXPathObjectPtr cur, int depth)
xmlXPathDifference	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathDifference		(xmlNodeSetPtr nodes1,$/;"	p	signature:(xmlNodeSetPtr nodes1, xmlNodeSetPtr nodes2)
xmlXPathDistinct	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathDistinct		(xmlNodeSetPtr nodes);$/;"	p	signature:(xmlNodeSetPtr nodes)
xmlXPathDistinctSorted	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathDistinctSorted		(xmlNodeSetPtr nodes);$/;"	p	signature:(xmlNodeSetPtr nodes)
xmlXPathDivValues	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathDivValues(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathEmptyNodeSet	/usr/include/libxml2/libxml/xpathInternals.h	231;"	d
xmlXPathEqualValues	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN int XMLCALL xmlXPathEqualValues(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathErr	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathErr	(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int error)
xmlXPathError	/usr/include/libxml2/libxml/xpath.h	/^} xmlXPathError;$/;"	t	typeref:enum:__anon11
xmlXPathEval	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathEval		(const xmlChar *str,$/;"	p	signature:(const xmlChar *str, xmlXPathContextPtr ctx)
xmlXPathEvalExpr	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathEvalExpr		(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathEvalExpression	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathEvalExpression	(const xmlChar *str,$/;"	p	signature:(const xmlChar *str, xmlXPathContextPtr ctxt)
xmlXPathEvalFunc	/usr/include/libxml2/libxml/xpath.h	/^typedef void (*xmlXPathEvalFunc)(xmlXPathParserContextPtr ctxt,$/;"	t
xmlXPathEvalPredicate	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathEvalPredicate	(xmlXPathContextPtr ctxt,$/;"	p	signature:(xmlXPathContextPtr ctxt, xmlXPathObjectPtr res)
xmlXPathEvaluatePredicateResult	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathEvaluatePredicateResult (xmlXPathParserContextPtr ctxt, $/;"	p	signature:(xmlXPathParserContextPtr ctxt, xmlXPathObjectPtr res)
xmlXPathFalseFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathFalseFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathFloorFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathFloorFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathFreeCompExpr	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathFreeCompExpr	(xmlXPathCompExprPtr comp);$/;"	p	signature:(xmlXPathCompExprPtr comp)
xmlXPathFreeContext	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathFreeContext		(xmlXPathContextPtr ctxt);$/;"	p	signature:(xmlXPathContextPtr ctxt)
xmlXPathFreeNodeSet	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathFreeNodeSet		(xmlNodeSetPtr obj);$/;"	p	signature:(xmlNodeSetPtr obj)
xmlXPathFreeNodeSetList	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathFreeNodeSetList	(xmlXPathObjectPtr obj);$/;"	p	signature:(xmlXPathObjectPtr obj)
xmlXPathFreeObject	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathFreeObject		(xmlXPathObjectPtr obj);$/;"	p	signature:(xmlXPathObjectPtr obj)
xmlXPathFreeParserContext	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathFreeParserContext	(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathFuncLookupFunc	/usr/include/libxml2/libxml/xpath.h	/^typedef xmlXPathFunction (*xmlXPathFuncLookupFunc) (void *ctxt,$/;"	t
xmlXPathFuncPtr	/usr/include/libxml2/libxml/xpath.h	/^typedef xmlXPathFunct *xmlXPathFuncPtr;$/;"	t
xmlXPathFunct	/usr/include/libxml2/libxml/xpath.h	/^typedef struct _xmlXPathFunct xmlXPathFunct;$/;"	t	typeref:struct:_xmlXPathFunct
xmlXPathFunction	/usr/include/libxml2/libxml/xpath.h	/^typedef void (*xmlXPathFunction) (xmlXPathParserContextPtr ctxt, int nargs);$/;"	t
xmlXPathFunctionLookup	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathFunctionLookup		(xmlXPathContextPtr ctxt,$/;"	p	signature:(xmlXPathContextPtr ctxt, const xmlChar *name)
xmlXPathFunctionLookupNS	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathFunctionLookupNS	(xmlXPathContextPtr ctxt,$/;"	p	signature:(xmlXPathContextPtr ctxt, const xmlChar *name, const xmlChar *ns_uri)
xmlXPathGetContextNode	/usr/include/libxml2/libxml/xpathInternals.h	101;"	d
xmlXPathGetDocument	/usr/include/libxml2/libxml/xpathInternals.h	91;"	d
xmlXPathGetError	/usr/include/libxml2/libxml/xpathInternals.h	71;"	d
xmlXPathHasSameNodes	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathHasSameNodes		(xmlNodeSetPtr nodes1,$/;"	p	signature:(xmlNodeSetPtr nodes1, xmlNodeSetPtr nodes2)
xmlXPathIdFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathIdFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathInit	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathInit		(void);$/;"	p	signature:(void)
xmlXPathIntersection	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathIntersection		(xmlNodeSetPtr nodes1,$/;"	p	signature:(xmlNodeSetPtr nodes1, xmlNodeSetPtr nodes2)
xmlXPathIsInf	/usr/include/libxml2/libxml/xpath.h	/^		xmlXPathIsInf	(double val);$/;"	p	signature:(double val)
xmlXPathIsNaN	/usr/include/libxml2/libxml/xpath.h	/^		xmlXPathIsNaN	(double val);$/;"	p	signature:(double val)
xmlXPathIsNodeType	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN int XMLCALL xmlXPathIsNodeType(const xmlChar *name);$/;"	p	signature:(const xmlChar *name)
xmlXPathLangFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathLangFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathLastFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathLastFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathLeading	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathLeading			(xmlNodeSetPtr nodes1,$/;"	p	signature:(xmlNodeSetPtr nodes1, xmlNodeSetPtr nodes2)
xmlXPathLeadingSorted	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathLeadingSorted		(xmlNodeSetPtr nodes1,$/;"	p	signature:(xmlNodeSetPtr nodes1, xmlNodeSetPtr nodes2)
xmlXPathLocalNameFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathLocalNameFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathModValues	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathModValues(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathMultValues	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathMultValues(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathNAN	/usr/include/libxml2/libxml/xpath.h	/^XMLPUBVAR double xmlXPathNAN;$/;"	v
xmlXPathNINF	/usr/include/libxml2/libxml/xpath.h	/^XMLPUBVAR double xmlXPathNINF;$/;"	v
xmlXPathNamespaceURIFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathNamespaceURIFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathNewBoolean	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNewBoolean		(int val);$/;"	p	signature:(int val)
xmlXPathNewCString	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNewCString		(const char *val);$/;"	p	signature:(const char *val)
xmlXPathNewContext	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathNewContext		(xmlDocPtr doc);$/;"	p	signature:(xmlDocPtr doc)
xmlXPathNewFloat	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNewFloat		(double val);$/;"	p	signature:(double val)
xmlXPathNewNodeSet	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNewNodeSet		(xmlNodePtr val);$/;"	p	signature:(xmlNodePtr val)
xmlXPathNewNodeSetList	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNewNodeSetList		(xmlNodeSetPtr val);$/;"	p	signature:(xmlNodeSetPtr val)
xmlXPathNewParserContext	/usr/include/libxml2/libxml/xpathInternals.h	/^		  xmlXPathNewParserContext	(const xmlChar *str,$/;"	p	signature:(const xmlChar *str, xmlXPathContextPtr ctxt)
xmlXPathNewString	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNewString		(const xmlChar *val);$/;"	p	signature:(const xmlChar *val)
xmlXPathNewValueTree	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNewValueTree		(xmlNodePtr val);$/;"	p	signature:(xmlNodePtr val)
xmlXPathNextAncestor	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN xmlNodePtr XMLCALL xmlXPathNextAncestor(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, xmlNodePtr cur)
xmlXPathNextAncestorOrSelf	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN xmlNodePtr XMLCALL xmlXPathNextAncestorOrSelf(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, xmlNodePtr cur)
xmlXPathNextAttribute	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN xmlNodePtr XMLCALL xmlXPathNextAttribute(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, xmlNodePtr cur)
xmlXPathNextChild	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN xmlNodePtr XMLCALL xmlXPathNextChild(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, xmlNodePtr cur)
xmlXPathNextDescendant	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN xmlNodePtr XMLCALL xmlXPathNextDescendant(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, xmlNodePtr cur)
xmlXPathNextDescendantOrSelf	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN xmlNodePtr XMLCALL xmlXPathNextDescendantOrSelf(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, xmlNodePtr cur)
xmlXPathNextFollowing	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN xmlNodePtr XMLCALL xmlXPathNextFollowing(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, xmlNodePtr cur)
xmlXPathNextFollowingSibling	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN xmlNodePtr XMLCALL xmlXPathNextFollowingSibling(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, xmlNodePtr cur)
xmlXPathNextNamespace	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN xmlNodePtr XMLCALL xmlXPathNextNamespace(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, xmlNodePtr cur)
xmlXPathNextParent	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN xmlNodePtr XMLCALL xmlXPathNextParent(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, xmlNodePtr cur)
xmlXPathNextPreceding	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN xmlNodePtr XMLCALL xmlXPathNextPreceding(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, xmlNodePtr cur)
xmlXPathNextPrecedingSibling	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN xmlNodePtr XMLCALL xmlXPathNextPrecedingSibling(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, xmlNodePtr cur)
xmlXPathNextSelf	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN xmlNodePtr XMLCALL xmlXPathNextSelf(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, xmlNodePtr cur)
xmlXPathNodeLeading	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNodeLeading		(xmlNodeSetPtr nodes,$/;"	p	signature:(xmlNodeSetPtr nodes, xmlNodePtr node)
xmlXPathNodeLeadingSorted	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNodeLeadingSorted	(xmlNodeSetPtr nodes,$/;"	p	signature:(xmlNodeSetPtr nodes, xmlNodePtr node)
xmlXPathNodeSetAdd	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNodeSetAdd		(xmlNodeSetPtr cur,$/;"	p	signature:(xmlNodeSetPtr cur, xmlNodePtr val)
xmlXPathNodeSetAddNs	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNodeSetAddNs		(xmlNodeSetPtr cur, $/;"	p	signature:(xmlNodeSetPtr cur, xmlNodePtr node, xmlNsPtr ns)
xmlXPathNodeSetAddUnique	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNodeSetAddUnique	(xmlNodeSetPtr cur,$/;"	p	signature:(xmlNodeSetPtr cur, xmlNodePtr val)
xmlXPathNodeSetContains	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNodeSetContains		(xmlNodeSetPtr cur,$/;"	p	signature:(xmlNodeSetPtr cur, xmlNodePtr val)
xmlXPathNodeSetCreate	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathNodeSetCreate	(xmlNodePtr val);$/;"	p	signature:(xmlNodePtr val)
xmlXPathNodeSetDel	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNodeSetDel		(xmlNodeSetPtr cur, $/;"	p	signature:(xmlNodeSetPtr cur, xmlNodePtr val)
xmlXPathNodeSetFreeNs	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathNodeSetFreeNs(xmlNsPtr ns);$/;"	p	signature:(xmlNsPtr ns)
xmlXPathNodeSetGetLength	/usr/include/libxml2/libxml/xpath.h	411;"	d
xmlXPathNodeSetIsEmpty	/usr/include/libxml2/libxml/xpath.h	435;"	d
xmlXPathNodeSetItem	/usr/include/libxml2/libxml/xpath.h	422;"	d
xmlXPathNodeSetMerge	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNodeSetMerge		(xmlNodeSetPtr val1, $/;"	p	signature:(xmlNodeSetPtr val1, xmlNodeSetPtr val2)
xmlXPathNodeSetRemove	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNodeSetRemove		(xmlNodeSetPtr cur, $/;"	p	signature:(xmlNodeSetPtr cur, int val)
xmlXPathNodeSetSort	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNodeSetSort		(xmlNodeSetPtr set);$/;"	p	signature:(xmlNodeSetPtr set)
xmlXPathNodeTrailing	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNodeTrailing		(xmlNodeSetPtr nodes,$/;"	p	signature:(xmlNodeSetPtr nodes, xmlNodePtr node)
xmlXPathNodeTrailingSorted	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNodeTrailingSorted	(xmlNodeSetPtr nodes,$/;"	p	signature:(xmlNodeSetPtr nodes, xmlNodePtr node)
xmlXPathNormalizeFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathNormalizeFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathNotEqualValues	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN int XMLCALL xmlXPathNotEqualValues(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathNotFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathNotFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathNsLookup	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathNsLookup		(xmlXPathContextPtr ctxt,$/;"	p	signature:(xmlXPathContextPtr ctxt, const xmlChar *prefix)
xmlXPathNumberFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathNumberFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathObject	/usr/include/libxml2/libxml/xpath.h	/^typedef struct _xmlXPathObject xmlXPathObject;$/;"	t	typeref:struct:_xmlXPathObject
xmlXPathObjectCopy	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathObjectCopy		(xmlXPathObjectPtr val);$/;"	p	signature:(xmlXPathObjectPtr val)
xmlXPathObjectPtr	/usr/include/libxml2/libxml/xpath.h	/^typedef xmlXPathObject *xmlXPathObjectPtr;$/;"	t
xmlXPathObjectType	/usr/include/libxml2/libxml/xpath.h	/^} xmlXPathObjectType;$/;"	t	typeref:enum:__anon12
xmlXPathOrderDocElems	/usr/include/libxml2/libxml/xpath.h	/^		    xmlXPathOrderDocElems	(xmlDocPtr doc);$/;"	p	signature:(xmlDocPtr doc)
xmlXPathPINF	/usr/include/libxml2/libxml/xpath.h	/^XMLPUBVAR double xmlXPathPINF;$/;"	v
xmlXPathParseNCName	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathParseNCName		(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathParseName	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathParseName		(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathParserContext	/usr/include/libxml2/libxml/xpath.h	/^typedef struct _xmlXPathParserContext xmlXPathParserContext;$/;"	t	typeref:struct:_xmlXPathParserContext
xmlXPathParserContextPtr	/usr/include/libxml2/libxml/xpath.h	/^typedef xmlXPathParserContext *xmlXPathParserContextPtr;$/;"	t
xmlXPathPopBoolean	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathPopBoolean	(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathPopExternal	/usr/include/libxml2/libxml/xpathInternals.h	/^    		xmlXPathPopExternal	(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathPopNodeSet	/usr/include/libxml2/libxml/xpathInternals.h	/^    		xmlXPathPopNodeSet	(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathPopNumber	/usr/include/libxml2/libxml/xpathInternals.h	/^    		xmlXPathPopNumber	(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathPopString	/usr/include/libxml2/libxml/xpathInternals.h	/^    		xmlXPathPopString	(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathPositionFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathPositionFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathRegisterAllFunctions	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathRegisterAllFunctions	(xmlXPathContextPtr ctxt);$/;"	p	signature:(xmlXPathContextPtr ctxt)
xmlXPathRegisterFunc	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathRegisterFunc		(xmlXPathContextPtr ctxt,$/;"	p	signature:(xmlXPathContextPtr ctxt, const xmlChar *name, xmlXPathFunction f)
xmlXPathRegisterFuncLookup	/usr/include/libxml2/libxml/xpathInternals.h	/^	    xmlXPathRegisterFuncLookup	(xmlXPathContextPtr ctxt,$/;"	p	signature:(xmlXPathContextPtr ctxt, xmlXPathFuncLookupFunc f, void *funcCtxt)
xmlXPathRegisterFuncNS	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathRegisterFuncNS		(xmlXPathContextPtr ctxt,$/;"	p	signature:(xmlXPathContextPtr ctxt, const xmlChar *name, const xmlChar *ns_uri, xmlXPathFunction f)
xmlXPathRegisterNs	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathRegisterNs		(xmlXPathContextPtr ctxt,$/;"	p	signature:(xmlXPathContextPtr ctxt, const xmlChar *prefix, const xmlChar *ns_uri)
xmlXPathRegisterVariable	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathRegisterVariable	(xmlXPathContextPtr ctxt,$/;"	p	signature:(xmlXPathContextPtr ctxt, const xmlChar *name, xmlXPathObjectPtr value)
xmlXPathRegisterVariableLookup	/usr/include/libxml2/libxml/xpathInternals.h	/^	xmlXPathRegisterVariableLookup	(xmlXPathContextPtr ctxt,$/;"	p	signature:(xmlXPathContextPtr ctxt, xmlXPathVariableLookupFunc f, void *data)
xmlXPathRegisterVariableNS	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathRegisterVariableNS	(xmlXPathContextPtr ctxt,$/;"	p	signature:(xmlXPathContextPtr ctxt, const xmlChar *name, const xmlChar *ns_uri, xmlXPathObjectPtr value)
xmlXPathRegisteredFuncsCleanup	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathRegisteredFuncsCleanup	(xmlXPathContextPtr ctxt);$/;"	p	signature:(xmlXPathContextPtr ctxt)
xmlXPathRegisteredNsCleanup	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathRegisteredNsCleanup	(xmlXPathContextPtr ctxt);$/;"	p	signature:(xmlXPathContextPtr ctxt)
xmlXPathRegisteredVariablesCleanup	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathRegisteredVariablesCleanup(xmlXPathContextPtr ctxt);$/;"	p	signature:(xmlXPathContextPtr ctxt)
xmlXPathReturnBoolean	/usr/include/libxml2/libxml/xpathInternals.h	121;"	d
xmlXPathReturnEmptyNodeSet	/usr/include/libxml2/libxml/xpathInternals.h	185;"	d
xmlXPathReturnEmptyString	/usr/include/libxml2/libxml/xpathInternals.h	166;"	d
xmlXPathReturnExternal	/usr/include/libxml2/libxml/xpathInternals.h	195;"	d
xmlXPathReturnFalse	/usr/include/libxml2/libxml/xpathInternals.h	138;"	d
xmlXPathReturnNodeSet	/usr/include/libxml2/libxml/xpathInternals.h	176;"	d
xmlXPathReturnNumber	/usr/include/libxml2/libxml/xpathInternals.h	147;"	d
xmlXPathReturnString	/usr/include/libxml2/libxml/xpathInternals.h	157;"	d
xmlXPathReturnTrue	/usr/include/libxml2/libxml/xpathInternals.h	130;"	d
xmlXPathRoot	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathRoot			(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathRoundFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathRoundFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathSetArityError	/usr/include/libxml2/libxml/xpathInternals.h	51;"	d
xmlXPathSetError	/usr/include/libxml2/libxml/xpathInternals.h	41;"	d
xmlXPathSetTypeError	/usr/include/libxml2/libxml/xpathInternals.h	60;"	d
xmlXPathStackIsExternal	/usr/include/libxml2/libxml/xpathInternals.h	222;"	d
xmlXPathStackIsNodeSet	/usr/include/libxml2/libxml/xpathInternals.h	207;"	d
xmlXPathStartsWithFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathStartsWithFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathStringEvalNumber	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathStringEvalNumber	(const xmlChar *str);$/;"	p	signature:(const xmlChar *str)
xmlXPathStringFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathStringFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathStringLengthFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathStringLengthFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathSubValues	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathSubValues(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathSubstringAfterFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathSubstringAfterFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathSubstringBeforeFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathSubstringBeforeFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathSubstringFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathSubstringFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathSumFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathSumFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathTrailing	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathTrailing		(xmlNodeSetPtr nodes1,$/;"	p	signature:(xmlNodeSetPtr nodes1, xmlNodeSetPtr nodes2)
xmlXPathTrailingSorted	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathTrailingSorted		(xmlNodeSetPtr nodes1,$/;"	p	signature:(xmlNodeSetPtr nodes1, xmlNodeSetPtr nodes2)
xmlXPathTranslateFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathTranslateFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathTrueFunction	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathTrueFunction(xmlXPathParserContextPtr ctxt, int nargs);$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPathType	/usr/include/libxml2/libxml/xpath.h	/^typedef struct _xmlXPathType xmlXPathType;$/;"	t	typeref:struct:_xmlXPathType
xmlXPathTypePtr	/usr/include/libxml2/libxml/xpath.h	/^typedef xmlXPathType *xmlXPathTypePtr;$/;"	t
xmlXPathValueFlipSign	/usr/include/libxml2/libxml/xpathInternals.h	/^XMLPUBFUN void XMLCALL xmlXPathValueFlipSign(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPathVariable	/usr/include/libxml2/libxml/xpath.h	/^typedef struct _xmlXPathVariable xmlXPathVariable;$/;"	t	typeref:struct:_xmlXPathVariable
xmlXPathVariableLookup	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathVariableLookup		(xmlXPathContextPtr ctxt,$/;"	p	signature:(xmlXPathContextPtr ctxt, const xmlChar *name)
xmlXPathVariableLookupFunc	/usr/include/libxml2/libxml/xpath.h	/^typedef xmlXPathObjectPtr (*xmlXPathVariableLookupFunc) (void *ctxt,$/;"	t
xmlXPathVariableLookupNS	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathVariableLookupNS	(xmlXPathContextPtr ctxt,$/;"	p	signature:(xmlXPathContextPtr ctxt, const xmlChar *name, const xmlChar *ns_uri)
xmlXPathVariablePtr	/usr/include/libxml2/libxml/xpath.h	/^typedef xmlXPathVariable *xmlXPathVariablePtr;$/;"	t
xmlXPathWrapCString	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathWrapCString		(char * val);$/;"	p	signature:(char * val)
xmlXPathWrapExternal	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathWrapExternal		(void *val);$/;"	p	signature:(void *val)
xmlXPathWrapNodeSet	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathWrapNodeSet		(xmlNodeSetPtr val);$/;"	p	signature:(xmlNodeSetPtr val)
xmlXPathWrapString	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPathWrapString		(xmlChar *val);$/;"	p	signature:(xmlChar *val)
xmlXPatherror	/usr/include/libxml2/libxml/xpathInternals.h	/^		xmlXPatherror	(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, const char *file, int line, int no)
xmlXPtrBuildNodeList	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrBuildNodeList	(xmlXPathObjectPtr obj);$/;"	p	signature:(xmlXPathObjectPtr obj)
xmlXPtrEval	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrEval			(const xmlChar *str,$/;"	p	signature:(const xmlChar *str, xmlXPathContextPtr ctx)
xmlXPtrEvalRangePredicate	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrEvalRangePredicate	(xmlXPathParserContextPtr ctxt);$/;"	p	signature:(xmlXPathParserContextPtr ctxt)
xmlXPtrFreeLocationSet	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrFreeLocationSet	(xmlLocationSetPtr obj);$/;"	p	signature:(xmlLocationSetPtr obj)
xmlXPtrLocationSetAdd	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrLocationSetAdd	(xmlLocationSetPtr cur,$/;"	p	signature:(xmlLocationSetPtr cur, xmlXPathObjectPtr val)
xmlXPtrLocationSetCreate	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrLocationSetCreate	(xmlXPathObjectPtr val);$/;"	p	signature:(xmlXPathObjectPtr val)
xmlXPtrLocationSetDel	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrLocationSetDel	(xmlLocationSetPtr cur,$/;"	p	signature:(xmlLocationSetPtr cur, xmlXPathObjectPtr val)
xmlXPtrLocationSetMerge	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrLocationSetMerge	(xmlLocationSetPtr val1,$/;"	p	signature:(xmlLocationSetPtr val1, xmlLocationSetPtr val2)
xmlXPtrLocationSetRemove	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrLocationSetRemove	(xmlLocationSetPtr cur,$/;"	p	signature:(xmlLocationSetPtr cur, int val)
xmlXPtrNewCollapsedRange	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrNewCollapsedRange	(xmlNodePtr start);$/;"	p	signature:(xmlNodePtr start)
xmlXPtrNewContext	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrNewContext		(xmlDocPtr doc,$/;"	p	signature:(xmlDocPtr doc, xmlNodePtr here, xmlNodePtr origin)
xmlXPtrNewLocationSetNodeSet	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrNewLocationSetNodeSet(xmlNodeSetPtr set);$/;"	p	signature:(xmlNodeSetPtr set)
xmlXPtrNewLocationSetNodes	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrNewLocationSetNodes	(xmlNodePtr start,$/;"	p	signature:(xmlNodePtr start, xmlNodePtr end)
xmlXPtrNewRange	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrNewRange		(xmlNodePtr start,$/;"	p	signature:(xmlNodePtr start, int startindex, xmlNodePtr end, int endindex)
xmlXPtrNewRangeNodeObject	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrNewRangeNodeObject	(xmlNodePtr start,$/;"	p	signature:(xmlNodePtr start, xmlXPathObjectPtr end)
xmlXPtrNewRangeNodePoint	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrNewRangeNodePoint	(xmlNodePtr start,$/;"	p	signature:(xmlNodePtr start, xmlXPathObjectPtr end)
xmlXPtrNewRangeNodes	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrNewRangeNodes	(xmlNodePtr start,$/;"	p	signature:(xmlNodePtr start, xmlNodePtr end)
xmlXPtrNewRangePointNode	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrNewRangePointNode	(xmlXPathObjectPtr start,$/;"	p	signature:(xmlXPathObjectPtr start, xmlNodePtr end)
xmlXPtrNewRangePoints	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrNewRangePoints	(xmlXPathObjectPtr start,$/;"	p	signature:(xmlXPathObjectPtr start, xmlXPathObjectPtr end)
xmlXPtrRangeToFunction	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrRangeToFunction	(xmlXPathParserContextPtr ctxt,$/;"	p	signature:(xmlXPathParserContextPtr ctxt, int nargs)
xmlXPtrWrapLocationSet	/usr/include/libxml2/libxml/xpointer.h	/^		    xmlXPtrWrapLocationSet	(xmlLocationSetPtr val);$/;"	p	signature:(xmlLocationSetPtr val)
xptr	/usr/include/libxml2/libxml/xpath.h	/^    int xptr;				\/* is this an XPointer context? *\/$/;"	m	struct:_xmlXPathContext	access:public
xptr	/usr/include/libxml2/libxml/xpath.h	/^    int xptr;				\/* it this an XPointer expression *\/$/;"	m	struct:_xmlXPathParserContext	access:public
